{"version":3,"file":"Config-CKvYXLRC.js","sources":["../../node_modules/heroicons/24/outline/eye-slash.svg","../../node_modules/heroicons/24/outline/paint-brush.svg","../../node_modules/heroicons/24/outline/server-stack.svg","../../node_modules/heroicons/24/outline/chevron-down.svg","../../node_modules/heroicons/24/outline/chevron-up.svg","../../src/components/modal/config/Section.tsx","../../src/components/modal/config/display/ColorThemeSection.tsx","../../src/components/modal/config/display/DateFormatSection.tsx","../../src/components/modal/config/ToggleButton.tsx","../../src/components/modal/config/display/EmbeddingSection.tsx","../../src/components/modal/config/display/OtherSection.tsx","../../src/components/modal/config/display/ReactionSection.tsx","../../src/utils/emojipack.ts","../../src/components/modal/config/emoji/EmojiImportSection.tsx","../../src/components/modal/config/emoji/EmojiSection.tsx","../../src/components/modal/config/mute/MuteConfig.tsx","../../src/components/modal/config/profile/BackupSection.tsx","../../src/components/modal/config/profile/ProfileSection.tsx","../../src/nostr/useRelayInfo.ts","../../src/components/modal/RelayInfoModal.tsx","../../src/components/modal/config/relays/RelayConfig.tsx","../../src/components/modal/Config.tsx"],"sourcesContent":["export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.98 8.223A10.477 10.477 0 0 0 1.934 12c1.292 4.338 5.31 7.5 10.066 7.5.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.53 16.122a3 3 0 0 0-5.78 1.128 2.25 2.25 0 0 1-2.4 2.245 4.5 4.5 0 0 0 8.4-2.245c0-.399-.078-.78-.22-1.128m0 0a15.998 15.998 0 0 0 3.388-1.62m-5.043-.025a15.994 15.994 0 0 1 1.622-3.395m3.42 3.42a15.995 15.995 0 0 0 4.764-4.648l3.876-5.814a1.151 1.151 0 0 0-1.597-1.597L14.146 6.32a15.996 15.996 0 0 0-4.649 4.763m3.42 3.42a6.776 6.776 0 0 0-3.42-3.42\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5.25 14.25h13.5m-13.5 0a3 3 0 0 1-3-3m3 3a3 3 0 1 0 0 6h13.5a3 3 0 1 0 0-6m-16.5-3a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3m-19.5 0a4.5 4.5 0 0 1 .9-2.7L5.737 5.1a3.375 3.375 0 0 1 2.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 0 1 .9 2.7m0 0a3 3 0 0 1-3 3m0 3h.008v.008h-.008zm0-6h.008v.008h-.008zm-3 6h.008v.008h-.008zm0-6h.008v.008h-.008z\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m4.5 15.75 7.5-7.5 7.5 7.5\"/></svg>","import { createSignal, Show, type JSX } from 'solid-js';\n\nimport ChevronDown from 'heroicons/24/outline/chevron-down.svg';\nimport ChevronUp from 'heroicons/24/outline/chevron-up.svg';\n\nconst Section = (props: { title: string; initialOpened?: boolean; children: JSX.Element }) => {\n  const [opened, setOpened] = createSignal(props.initialOpened ?? true);\n  const toggleOpened = () => setOpened((current) => !current);\n\n  return (\n    <div class=\"mb-2 rounded border border-border shadow hover:shadow-md\">\n      <h3 class=\"text-lg font-bold\">\n        <button\n          type=\"button\"\n          class=\"flex w-full items-center p-2 text-start\"\n          onClick={() => toggleOpened()}\n        >\n          <span class=\"flex-1 hover:text-fg-secondary\">{props.title}</span>\n          <span class=\"inline-block size-4 shrink-0 text-fg\">\n            <Show when={opened()} fallback={<ChevronDown />}>\n              <ChevronUp />\n            </Show>\n          </span>\n        </button>\n      </h3>\n      <Show when={opened()}>\n        <div class=\"border-t border-border p-2\">{props.children}</div>\n      </Show>\n    </div>\n  );\n};\n\nexport default Section;\n","import { For } from 'solid-js';\n\nimport Section from '@/components/modal/config/Section';\nimport { colorThemes } from '@/core/colorThemes';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst ColorThemeSection = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const isCurrentlyUsing = (id: string) => {\n    const theme = config().colorTheme;\n    if (theme.type === 'specific') {\n      return theme.id === id;\n    }\n    return false;\n  };\n\n  const updateColorTheme = (id: string) => {\n    setConfig((current) => ({ ...current, colorTheme: { type: 'specific', id } }));\n  };\n\n  return (\n    <Section title={i18n.t('config.display.colorTheme')}>\n      <div class=\"scrollbar flex flex-col overflow-y-auto rounded-md border border-border\">\n        <For each={Object.values(colorThemes)}>\n          {(colorTheme) => (\n            <button\n              type=\"button\"\n              class=\"border-t border-border px-2 py-1 text-left first:border-none\"\n              classList={{\n                'bg-primary': isCurrentlyUsing(colorTheme.id),\n                'text-primary-fg': isCurrentlyUsing(colorTheme.id),\n                'text-fg': !isCurrentlyUsing(colorTheme.id),\n              }}\n              onClick={() => updateColorTheme(colorTheme.id)}\n            >\n              {colorTheme.name}\n            </button>\n          )}\n        </For>\n      </div>\n    </Section>\n  );\n};\n\nexport default ColorThemeSection;\n","import { For } from 'solid-js';\n\nimport Section from '@/components/modal/config/Section';\nimport useConfig, { type Config } from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst DateFormatSection = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const dateFormats: {\n    id: Config['dateFormat'];\n    name: string;\n    example: string;\n  }[] = [\n    {\n      id: 'relative',\n      name: i18n.t('config.display.relativeTimeNotation'),\n      example: i18n.t('config.display.relativeTimeNotationExample'),\n    },\n    {\n      id: 'absolute-short',\n      name: i18n.t('config.display.absoluteTimeNotationShort'),\n      example: i18n.t('config.display.absoluteTimeNotationShortExample'),\n    },\n    {\n      id: 'absolute-long',\n      name: i18n.t('config.display.absoluteTimeNotationLong'),\n      example: i18n.t('config.display.absoluteTimeNotationLongExample'),\n    },\n  ];\n\n  const updateDateFormat = (dateFormat: Config['dateFormat']) => {\n    setConfig((current) => ({ ...current, dateFormat }));\n  };\n\n  return (\n    <Section title={i18n.t('config.display.timeNotation')}>\n      <div class=\"flex flex-col justify-evenly gap-2 sm:flex-row\">\n        <For each={dateFormats}>\n          {({ id, name, example }) => (\n            <div class=\"flex flex-1 flex-row items-center gap-1 sm:flex-col\">\n              <button\n                type=\"button\"\n                class=\"w-48 rounded border border-primary p-2 font-bold sm:w-full\"\n                classList={{\n                  'bg-primary': config().dateFormat === id,\n                  'text-primary-fg': config().dateFormat === id,\n                  'bg-bg': config().dateFormat !== id,\n                  'text-primary': config().dateFormat !== id,\n                }}\n                onClick={() => updateDateFormat(id)}\n              >\n                {name}\n              </button>\n              <div class=\"text-xs\">{example}</div>\n            </div>\n          )}\n        </For>\n      </div>\n    </Section>\n  );\n};\n\nexport default DateFormatSection;\n","import { type JSX } from 'solid-js';\n\nconst ToggleButton = (props: {\n  value: boolean;\n  onClick: JSX.EventHandler<HTMLButtonElement, MouseEvent>;\n}) => (\n  <button\n    class=\"flex h-[24px] w-[48px] items-center rounded-full border border-primary/80 px-1\"\n    classList={{\n      'bg-bg-tertiary': !props.value,\n      'justify-start': !props.value,\n      'bg-primary': props.value,\n      'justify-end': props.value,\n    }}\n    area-label={props.value}\n    onClick={(event) => props.onClick(event)}\n  >\n    <span class=\"m-[-3px] inline-block size-5 rounded-full border bg-primary-fg shadow\" />\n  </button>\n);\n\nexport default ToggleButton;\n","import Section from '@/components/modal/config/Section';\nimport ToggleButton from '@/components/modal/config/ToggleButton';\nimport useConfig, { type Config } from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst EmbeddingSection = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const toggle = (key: keyof Config['embedding']) => {\n    setConfig((current) => ({\n      ...current,\n      embedding: {\n        ...current.embedding,\n        [key]: !current.embedding[key],\n      },\n    }));\n  };\n\n  return (\n    <Section title={i18n.t('config.display.embedding')}>\n      <p>{i18n.t('config.display.embeddingDescription')}</p>\n      <div class=\"flex flex-col justify-evenly gap-2\">\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">YouTube</div>\n          <ToggleButton value={config().embedding.youtube} onClick={() => toggle('youtube')} />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">X (Twitter)</div>\n          <ToggleButton value={config().embedding.twitter} onClick={() => toggle('twitter')} />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">OGP</div>\n          <ToggleButton value={config().embedding.ogp} onClick={() => toggle('ogp')} />\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nexport default EmbeddingSection;\n","import Section from '@/components/modal/config/Section';\nimport ToggleButton from '@/components/modal/config/ToggleButton';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst OtherSection = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const toggleKeepOpenPostForm = () => {\n    setConfig((current) => ({\n      ...current,\n      keepOpenPostForm: !(current.keepOpenPostForm ?? false),\n    }));\n  };\n\n  const toggleShowMedia = () => {\n    setConfig((current) => ({\n      ...current,\n      showMedia: !(current.showMedia ?? true),\n    }));\n  };\n\n  const toggleHideCount = () => {\n    setConfig((current) => ({\n      ...current,\n      hideCount: !(current.hideCount ?? false),\n    }));\n  };\n\n  return (\n    <Section title={i18n.t('config.display.others')}>\n      <div class=\"flex flex-col justify-evenly gap-2\">\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n.t('config.display.keepOpenPostForm')}</div>\n          <ToggleButton\n            value={config().keepOpenPostForm}\n            onClick={() => toggleKeepOpenPostForm()}\n          />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n.t('config.display.showMediaByDefault')}</div>\n          <ToggleButton value={config().showMedia} onClick={() => toggleShowMedia()} />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n.t('config.display.hideNumbers')}</div>\n          <ToggleButton value={config().hideCount} onClick={() => toggleHideCount()} />\n        </div>\n        {/*\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">リアクションのデフォルト</div>\n          <input\n            type=\"text\"\n            maxlength=\"1\"\n            // onBlur={handleChangeReaction}\n          />\n        </div>\n        */}\n      </div>\n    </Section>\n  );\n};\n\nexport default OtherSection;\n","import Section from '@/components/modal/config/Section';\nimport ToggleButton from '@/components/modal/config/ToggleButton';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst ReactionSection = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const toggleUseEmojiReaction = () => {\n    setConfig((current) => ({\n      ...current,\n      useEmojiReaction: !(current.useEmojiReaction ?? false),\n    }));\n  };\n\n  const toggleShowEmojiReaction = () => {\n    setConfig((current) => ({\n      ...current,\n      showEmojiReaction: !(current.showEmojiReaction ?? false),\n    }));\n  };\n\n  return (\n    <Section title={i18n.t('config.display.reaction')}>\n      <div class=\"flex flex-col justify-evenly gap-2\">\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n.t('config.display.enableEmojiReaction')}</div>\n          <ToggleButton\n            value={config().useEmojiReaction}\n            onClick={() => toggleUseEmojiReaction()}\n          />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n.t('config.display.showEmojiReaction')}</div>\n          <ToggleButton\n            value={config().showEmojiReaction}\n            onClick={() => toggleShowEmojiReaction()}\n          />\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nexport default ReactionSection;\n","/**\n * This is free and unencumbered software released into the public domain.\n *\n * Anyone is free to copy, modify, publish, use, compile, sell, or\n * distribute this software, either in source code form or as a compiled\n * binary, for any purpose, commercial or non-commercial, and by any\n * means.\n *\n * In jurisdictions that recognize copyright laws, the author or authors\n * of this software dedicate any and all copyright interest in the\n * software to the public domain. We make this dedication for the benefit\n * of the public at large and to the detriment of our heirs and\n * successors. We intend this dedication to be an overt act of\n * relinquishment in perpetuity of all present and future rights to this\n * software under copyright law.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * For more information, please refer to <http://unlicense.org/>\n */\nimport uniqBy from 'lodash/uniqBy';\nimport { z } from 'zod';\n\nimport { CustomEmojiConfig } from '@/core/useConfig';\n\nexport const pubkeySchema = z\n  .string()\n  .length(64)\n  .regex(/^[0-9a-f]{64}$/);\n\nexport const shortcodeSchema = z.string().regex(/^\\w+$/);\n\nexport const emojiSchema = z.object({\n  shortcode: shortcodeSchema,\n  url: z.string().url(),\n  keywords: z.optional(z.array(shortcodeSchema)),\n});\n\nexport const emojiPackSchemaV1 = z\n  .object({\n    manifest: z.literal('emojipack_v1'),\n    name: z.string(),\n    emojis: z.array(emojiSchema),\n    description: z.optional(z.string()),\n    author: z.optional(pubkeySchema),\n    publisher: z.optional(pubkeySchema),\n  })\n  .refine(\n    (emojiPack) => {\n      // check uniqueness of shortcodes\n      const uniqEmojis = uniqBy(emojiPack.emojis, (emoji) => emoji.shortcode).length;\n      return uniqEmojis === emojiPack.emojis.length;\n    },\n    { message: 'shortcodes should be unique' },\n  );\n\nexport const simpleEmojiPackSchema = z.record(shortcodeSchema, z.string().url());\n\nexport const allEmojiPackSchema = emojiPackSchemaV1.or(simpleEmojiPackSchema);\n\nexport type Emoji = z.infer<typeof emojiSchema>;\n\nexport type EmojiPackV1 = z.infer<typeof emojiPackSchemaV1>;\n\nexport type SimpleEmojiPack = z.infer<typeof simpleEmojiPackSchema>;\n\nexport type AllEmojiPack = z.infer<typeof allEmojiPackSchema>;\n\nexport const getEmojiPack = async (urlString: string): Promise<AllEmojiPack> => {\n  const url = new URL(urlString);\n  const res = await fetch(url);\n  return allEmojiPackSchema.parseAsync(await res.json());\n};\n\nexport const convertToEmojiConfig = (emojipack: SimpleEmojiPack): CustomEmojiConfig[] =>\n  Object.entries(emojipack).map(([shortcode, url]) => ({ shortcode, url }));\n","import { createSignal, type JSX } from 'solid-js';\n\nimport Section from '@/components/modal/config/Section';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport { convertToEmojiConfig, simpleEmojiPackSchema } from '@/utils/emojipack';\n\nconst EmojiImportSection = () => {\n  const i18n = useTranslation();\n  const { saveEmojis } = useConfig();\n\n  const [jsonInput, setJSONInput] = createSignal('');\n\n  const handleClickSaveEmoji: JSX.EventHandler<HTMLFormElement, SubmitEvent> = (ev) => {\n    ev.preventDefault();\n    if (jsonInput().length === 0) return;\n\n    try {\n      const data = simpleEmojiPackSchema.parse(JSON.parse(jsonInput()));\n      const emojis = convertToEmojiConfig(data);\n      saveEmojis(emojis);\n      setJSONInput('');\n    } catch (err) {\n      const message = err instanceof Error ? `:${err.message}` : '';\n      window.alert(`JSONの読み込みに失敗しました${message}`);\n    }\n  };\n\n  return (\n    <Section title={i18n.t('config.customEmoji.emojiImport')}>\n      <p>{i18n.t('config.customEmoji.emojiImportDescription')}</p>\n      <form class=\"flex flex-col gap-2\" onSubmit={handleClickSaveEmoji}>\n        <textarea\n          class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n          name=\"json\"\n          value={jsonInput()}\n          placeholder='{ \"smiley\": \"https://example.com/smiley.png\" }'\n          onChange={(ev) => setJSONInput(ev.currentTarget.value)}\n        />\n        <button\n          type=\"submit\"\n          class=\"w-24 self-end rounded bg-primary p-2 font-bold text-primary-fg\"\n        >\n          {i18n.t('config.customEmoji.importEmoji')}\n        </button>\n      </form>\n    </Section>\n  );\n};\n\nexport default EmojiImportSection;\n","import { createSignal, For, type JSX } from 'solid-js';\n\nimport Section from '@/components/modal/config/Section';\nimport LazyLoad from '@/components/utils/LazyLoad';\nimport usePopup from '@/components/utils/usePopup';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport { HttpUrlRegex } from '@/utils/regex';\n\nconst EmojiSection = () => {\n  const i18n = useTranslation();\n  const { config, saveEmoji, removeEmoji } = useConfig();\n\n  const [shortcodeInput, setShortcodeInput] = createSignal('');\n  const [urlInput, setUrlInput] = createSignal('');\n\n  const handleClickSaveEmoji: JSX.EventHandler<HTMLFormElement, SubmitEvent> = (ev) => {\n    ev.preventDefault();\n    if (shortcodeInput().length === 0 || urlInput().length === 0) return;\n    saveEmoji({ shortcode: shortcodeInput(), url: urlInput() });\n    setShortcodeInput('');\n    setUrlInput('');\n  };\n\n  return (\n    <Section title={i18n.t('config.customEmoji.customEmoji')}>\n      <form class=\"flex flex-col gap-2\" onSubmit={handleClickSaveEmoji}>\n        <label class=\"flex flex-1 items-center gap-1\">\n          <div class=\"w-9\">{i18n.t('config.customEmoji.shortcode')}</div>\n          <input\n            class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"shortcode\"\n            placeholder=\"smiley\"\n            value={shortcodeInput()}\n            pattern=\"^\\\\w+$\"\n            required\n            onChange={(ev) => setShortcodeInput(ev.currentTarget.value)}\n          />\n        </label>\n        <label class=\"flex flex-1 items-center gap-1\">\n          <div class=\"w-9\">{i18n.t('config.customEmoji.url')}</div>\n          <input\n            class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"url\"\n            value={urlInput()}\n            placeholder=\"https://example.com/smiley.png\"\n            pattern={HttpUrlRegex}\n            required\n            onChange={(ev) => setUrlInput(ev.currentTarget.value)}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          class=\"w-24 self-end rounded bg-primary p-2 font-bold text-primary-fg\"\n        >\n          {i18n.t('config.customEmoji.addEmoji')}\n        </button>\n      </form>\n      <ul class=\"mt-4 flex max-h-[40vh] min-h-64 flex-wrap overflow-y-auto border-t border-border\">\n        <For each={Object.values(config().customEmojis)}>\n          {({ shortcode, url }) => {\n            const popup = usePopup(() => ({\n              popup: (\n                <div class=\"flex min-w-24 flex-col items-center rounded border border-border bg-bg shadow\">\n                  <div class=\"flex items-center p-1\">\n                    <img class=\"h-20 max-w-20 object-contain\" src={url} alt={shortcode} />\n                  </div>\n                  <div class=\"p-1 text-center text-sm\">{shortcode}</div>\n                  <div class=\"w-full border-t border-border\">\n                    <button\n                      type=\"button\"\n                      class=\"w-full px-2 py-1 text-danger\"\n                      onClick={() => removeEmoji(shortcode)}\n                    >\n                      {i18n.t('config.customEmoji.removeEmoji')}\n                    </button>\n                  </div>\n                </div>\n              ),\n            }));\n\n            return (\n              <li ref={popup.targetRef} class=\"min-w-0 basis-1/2 sm:basis-1/4\">\n                <button\n                  type=\"button\"\n                  class=\"flex w-full flex-col items-center gap-1 rounded p-2 hover:bg-bg-tertiary/20 hover:shadow\"\n                  onClick={() => popup.open()}\n                >\n                  <LazyLoad fallback={<div class=\"size-8\" />}>\n                    {() => (\n                      <div class=\"flex h-8 max-w-8 items-center\">\n                        <img class=\"object-contain\" src={url} alt={shortcode} />\n                      </div>\n                    )}\n                  </LazyLoad>\n                  <div class=\"w-full truncate text-xs text-fg-secondary\">{shortcode}</div>\n                </button>\n                {popup.popup()}\n              </li>\n            );\n          }}\n        </For>\n      </ul>\n    </Section>\n  );\n};\n\nexport default EmojiSection;\n","import { createSignal, For, JSX } from 'solid-js';\n\nimport XMark from 'heroicons/24/outline/x-mark.svg';\n\nimport EventDisplayById from '@/components/event/EventDisplayById';\nimport Section from '@/components/modal/config/Section';\nimport UserNameDisplay from '@/components/UserDisplayName';\nimport LazyLoad from '@/components/utils/LazyLoad';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst MuteConfig = () => {\n  const i18n = useTranslation();\n  const { config, removeMutedPubkey, removeMutedThread, addMutedKeyword, removeMutedKeyword } =\n    useConfig();\n\n  const [keywordInput, setKeywordInput] = createSignal('');\n\n  const handleClickAddKeyword: JSX.EventHandler<HTMLFormElement, Event> = (ev) => {\n    ev.preventDefault();\n    if (keywordInput().length === 0) return;\n    addMutedKeyword(keywordInput());\n    setKeywordInput('');\n  };\n\n  return (\n    <>\n      <Section title={i18n.t('config.mute.mutedUsers')} initialOpened={false}>\n        <ul class=\"flex max-h-[50vh] min-h-64 flex-col overflow-y-auto\">\n          <For each={config().mutedPubkeys}>\n            {(pubkey) => (\n              <li class=\"flex items-center border-b border-border pr-4\">\n                <div class=\"flex-1 truncate\">\n                  <LazyLoad fallback={<div class=\"h-4\" />}>\n                    {() => <UserNameDisplay pubkey={pubkey} />}\n                  </LazyLoad>\n                </div>\n                <button class=\"size-3 shrink-0\" onClick={() => removeMutedPubkey(pubkey)}>\n                  <XMark />\n                </button>\n              </li>\n            )}\n          </For>\n        </ul>\n      </Section>\n      <Section title={i18n.t('config.mute.mutedKeywords')} initialOpened={false}>\n        <form class=\"flex gap-2\" onSubmit={handleClickAddKeyword}>\n          <input\n            class=\"flex-1 rounded-md border border-border bg-bg ring-border focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"keyword\"\n            value={keywordInput()}\n            onChange={(ev) => setKeywordInput(ev.currentTarget.value)}\n          />\n          <button type=\"submit\" class=\"rounded bg-primary p-2 font-bold text-primary-fg\">\n            {i18n.t('config.mute.add')}\n          </button>\n        </form>\n        <ul class=\"mt-2 flex max-h-[50vh] min-h-64 flex-col overflow-y-auto border-t border-border\">\n          <For each={config().mutedKeywords}>\n            {(keyword) => (\n              <li class=\"flex items-center border-b border-border pr-4\">\n                <div class=\"flex-1 truncate\">{keyword}</div>\n                <button class=\"size-3 shrink-0\" onClick={() => removeMutedKeyword(keyword)}>\n                  <XMark />\n                </button>\n              </li>\n            )}\n          </For>\n        </ul>\n      </Section>\n      <Section title={i18n.t('config.mute.mutedThreads')} initialOpened={false}>\n        <ul class=\"flex max-h-[50vh] min-h-64 flex-col gap-1 overflow-y-auto\">\n          <For each={config().mutedThreads}>\n            {(eventId) => (\n              <li class=\"flex items-center\">\n                <div class=\"flex-1 truncate rounded border border-border p-2\">\n                  <LazyLoad fallback={<div class=\"h-4\" />}>\n                    {() => <EventDisplayById eventId={eventId} actions={false} displayForcibly />}\n                  </LazyLoad>\n                </div>\n                <button class=\"p-4\" onClick={() => removeMutedThread(eventId)}>\n                  <span class=\"inline-block size-4\">\n                    <XMark />\n                  </span>\n                </button>\n              </li>\n            )}\n          </For>\n        </ul>\n      </Section>\n    </>\n  );\n};\n\nexport default MuteConfig;\n","import { type JSX } from 'solid-js';\n\nimport Section from '@/components/modal/config/Section';\nimport useConfig, { ConfigSchema } from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nconst BackupSection = () => {\n  let fileInputRef: HTMLInputElement | undefined;\n\n  const i18n = useTranslation();\n  const config = useConfig();\n\n  const handleSave = () => {\n    const json = JSON.stringify(config.config(), null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const dataUrl = URL.createObjectURL(blob);\n\n    const datetime = new Date().toISOString();\n    const link = document.createElement('a');\n    link.href = dataUrl;\n    link.download = `rabbit-${datetime}.json`;\n\n    link.click();\n  };\n\n  const handleRestore = () => {\n    if (fileInputRef == null) return;\n    fileInputRef.click();\n  };\n\n  const restore = async (file: File) => {\n    try {\n      const json = await file.text();\n      const validated = ConfigSchema.parse(JSON.parse(json));\n      config.setConfig(validated);\n\n      window.alert(i18n.t('config.account.restored'));\n      window.location.reload();\n    } catch (e) {\n      if (e instanceof Error) {\n        window.alert(`${i18n.t('config.account.failedToRestore')}: ${e.message}`);\n      } else {\n        window.alert(i18n.t('config.account.failedToRestore'));\n      }\n    }\n  };\n\n  const handleChangeFile: JSX.EventHandler<HTMLInputElement, Event> = (ev) => {\n    ev.preventDefault();\n\n    const files = [...(ev.currentTarget.files ?? [])];\n    if (files.length !== 1) return;\n    const file = files[0];\n    restore(file).catch((err) => console.log(err));\n  };\n\n  return (\n    <Section title={i18n.t('config.account.backupConfig')}>\n      <div class=\"flex gap-2 py-1\">\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          onClick={handleSave}\n        >\n          {i18n.t('config.account.save')}\n        </button>\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          onClick={handleRestore}\n        >\n          {i18n.t('config.account.restore')}\n        </button>\n      </div>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        hidden\n        multiple={false}\n        name=\"config\"\n        accept=\"application/json\"\n        onChange={handleChangeFile}\n      />\n    </Section>\n  );\n};\n\nexport default BackupSection;\n","import Section from '@/components/modal/config/Section';\nimport useModalState from '@/hooks/useModalState';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport usePubkey from '@/nostr/usePubkey';\nimport ensureNonNull from '@/utils/ensureNonNull';\n\nconst ProfileSection = () => {\n  const i18n = useTranslation();\n  const pubkey = usePubkey();\n  const { showProfile, showProfileEdit } = useModalState();\n\n  return (\n    <Section title={i18n.t('config.account.profile')}>\n      <div class=\"flex gap-2 py-1\">\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          onClick={() =>\n            ensureNonNull([pubkey()])(([pubkeyNonNull]) => {\n              showProfile(pubkeyNonNull);\n            })\n          }\n        >\n          {i18n.t('config.account.openProfile')}\n        </button>\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          onClick={() => showProfileEdit()}\n        >\n          {i18n.t('config.account.editProfile')}\n        </button>\n      </div>\n    </Section>\n  );\n};\n\nexport default ProfileSection;\n","import { createMemo } from 'solid-js';\n\nimport { createQuery, type CreateQueryResult } from '@tanstack/solid-query';\nimport { z } from 'zod';\n\nimport isValidId from '@/nostr/event/isValidId';\nimport ensureSchema from '@/utils/ensureSchema';\n\nconst RelayInfoLimitationSchema = z.object({\n  max_message_length: z.optional(z.number()),\n  max_subscriptions: z.optional(z.number()),\n  max_filters: z.optional(z.number()),\n  max_limit: z.optional(z.number()),\n  max_subid_length: z.optional(z.number()),\n  max_event_tags: z.optional(z.number()),\n  max_content_length: z.optional(z.number()),\n  min_pow_difficulty: z.optional(z.number()),\n  auth_required: z.optional(z.boolean()),\n  payment_required: z.optional(z.boolean()),\n  restricted_writes: z.optional(z.boolean()),\n  created_at_lower_limit: z.optional(z.number()),\n  created_at_upper_limit: z.optional(z.number()),\n});\n\nconst RelayInfoRetentionSchema = z.array(\n  z.object({\n    kinds: z.array(z.union([z.number(), z.array(z.number())])),\n    time: z.nullable(z.number()),\n  }),\n);\n\nconst RelayInfoFeeSchema = z.object({\n  amount: z.number(),\n  unit: z.string(),\n  period: z.optional(z.number()),\n  kinds: z.optional(z.array(z.number())),\n});\n\nconst RelayInfoFeesSchema = z.object({\n  admission: z.optional(z.array(RelayInfoFeeSchema)),\n  subscription: z.optional(z.array(RelayInfoFeeSchema)),\n  publication: z.optional(z.array(RelayInfoFeeSchema)),\n});\n\nexport const RelayInfoSchema = z.object({\n  name: z.optional(z.string()),\n  description: z.optional(z.string()),\n  pubkey: z.optional(z.string().refine(isValidId)),\n  contact: z.optional(z.string()),\n  supported_nips: z.optional(z.array(z.number())),\n  software: z.optional(z.string()),\n  version: z.optional(z.string()),\n  // Icon\n  icon: z.optional(z.string().url()),\n  // Server limitation\n  limitation: z.optional(RelayInfoLimitationSchema),\n  // Event retention\n  retention: z.optional(RelayInfoRetentionSchema),\n  // Content Limitation\n  relay_countries: z.optional(z.array(z.string())),\n  // Community Preferences\n  language_tags: z.optional(z.array(z.string())),\n  tags: z.optional(z.array(z.string())),\n  posting_policy: z.optional(z.string().url()),\n  // Pay to relay\n  payments_url: z.optional(z.string().url()),\n  fees: z.optional(RelayInfoFeesSchema),\n});\n\nexport type RelayInfo = z.infer<typeof RelayInfoSchema>;\n\nconst buildRelayInfoUrlFromRelayUrl = (relayUrl: string): URL => {\n  const url = new URL(relayUrl);\n  if (url.protocol === 'wss:') {\n    url.protocol = 'https';\n  } else if (url.protocol === 'ws:') {\n    url.protocol = 'http';\n  } else {\n    throw new Error('unexpected protocol');\n  }\n\n  return url;\n};\n\nexport const fetchRelayInfo = async (relayUrl: string): Promise<RelayInfo> => {\n  const relayInfoUrl = buildRelayInfoUrlFromRelayUrl(relayUrl);\n\n  const res = await fetch(relayInfoUrl, {\n    headers: {\n      Accept: 'application/nostr+json',\n    },\n    mode: 'cors',\n  });\n\n  if (res.status !== 200) {\n    throw new Error('failed to fetch relay info: status was not 200');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const body = await res.json();\n  if (!ensureSchema(RelayInfoSchema)(body)) {\n    throw new Error('failed to fetch relay info: unexpected form of data');\n  }\n\n  return body;\n};\n\nexport type UseRelayInfoProps = {\n  relayUrl: string;\n};\n\nexport type UseRelayInfo = {\n  relayInfo: () => RelayInfo | undefined;\n  query: CreateQueryResult<RelayInfo | undefined>;\n};\n\nconst useRelayInfo = (propsProvider: () => UseRelayInfoProps): UseRelayInfo => {\n  const props = createMemo(propsProvider);\n\n  const query = createQuery(() => ({\n    queryKey: ['useRelayInfo', props()] as const,\n    queryFn: ({ queryKey }) => {\n      const [, params] = queryKey;\n      if (params == null) return undefined;\n      return fetchRelayInfo(params.relayUrl);\n    },\n    enabled: props() != null,\n    staleTime: 5 * 60 * 1000, // 5 min\n    gcTime: 3 * 24 * 60 * 60 * 1000, // 3 days\n  }));\n\n  return {\n    relayInfo: () => query.data,\n    query,\n  };\n};\n\nexport default useRelayInfo;\n","import { type Component, Show, For, createSignal } from 'solid-js';\n\nimport BasicModal from '@/components/modal/BasicModal';\nimport UserDisplayName from '@/components/UserDisplayName';\nimport SafeLink from '@/components/utils/SafeLink';\nimport useModalState from '@/hooks/useModalState';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useRelayInfo from '@/nostr/useRelayInfo';\nimport { softwareToGitHostUrl } from '@/utils/url';\n\nexport type RelayInfoModalProps = {\n  relayUrl: string;\n  onClose: () => void;\n};\n\nconst buildNIPLink = (nip: number) => {\n  const filename = nip.toString(10).padStart(2, '0');\n  return `https://github.com/nostr-protocol/nips/blob/master/${filename}.md`;\n};\n\nconst RelayInfoModal: Component<RelayInfoModalProps> = (props) => {\n  const i18n = useTranslation();\n  const { relayInfo } = useRelayInfo(() => ({ relayUrl: props.relayUrl }));\n  const [showRawInfo, setShowRawInfo] = createSignal(false);\n  const toggleShowRawInfo = () => setShowRawInfo((current) => !current);\n\n  const { showProfile } = useModalState();\n\n  return (\n    <BasicModal onClose={props.onClose}>\n      <div class=\"divide-y divide-border\">\n        <div class=\"flex max-w-full items-center gap-4 p-4\">\n          <Show when={relayInfo()?.icon} keyed>\n            {(pictureUrl) => (\n              <div class=\"size-16 overflow-hidden rounded-lg shadow-md\">\n                <img src={pictureUrl} alt=\"icon of relay\" class=\"size-full object-cover\" />\n              </div>\n            )}\n          </Show>\n          <div class=\"min-w-0 flex-1\">\n            <h3 class=\"truncate text-2xl font-bold\">{relayInfo()?.name ?? props.relayUrl}</h3>\n            <div class=\"truncate text-sm\">{props.relayUrl}</div>\n          </div>\n        </div>\n        <Show when={relayInfo()?.description} keyed>\n          <div class=\"scrollbar max-h-24 overflow-scroll whitespace-pre-wrap break-words px-4 py-2\">\n            {relayInfo()?.description}\n          </div>\n        </Show>\n        <div class=\"flex divide-x divide-border\">\n          <div class=\"flex-1 shrink-0 px-4 py-2\">\n            <div class=\"text-sm text-fg-secondary\">{i18n.t('relayInfo.administrator')}</div>\n            <Show\n              when={relayInfo()?.pubkey}\n              fallback={<div>{i18n.t('relayInfo.unknown')}</div>}\n              keyed\n            >\n              {(pubkey) => (\n                <div class=\"whitespace-normal break-words\">\n                  <button class=\"inline select-text underline\" onClick={() => showProfile(pubkey)}>\n                    <UserDisplayName pubkey={pubkey} />\n                  </button>\n                </div>\n              )}\n            </Show>\n          </div>\n          <div class=\"flex-1 shrink-0 px-4 py-2\">\n            <div class=\"text-sm text-fg-secondary\">{i18n.t('relayInfo.contact')}</div>\n            <Show\n              when={relayInfo()?.contact}\n              fallback={<div>{i18n.t('relayInfo.unknown')}</div>}\n              keyed\n            >\n              {(contact) => (\n                <div class=\"whitespace-pre-wrap break-all\">\n                  <SafeLink class=\"underline\" href={contact}>\n                    {contact}\n                  </SafeLink>\n                </div>\n              )}\n            </Show>\n          </div>\n        </div>\n        <div class=\"flex divide-x divide-border\">\n          <div class=\"flex-1 shrink-0 px-4 py-2\">\n            <div class=\"text-sm text-fg-secondary\">{i18n.t('relayInfo.software')}</div>\n            <Show\n              when={relayInfo()?.software}\n              fallback={<div>{i18n.t('relayInfo.unknown')}</div>}\n              keyed\n            >\n              {(software) => (\n                <div class=\"whitespace-pre-wrap break-all\">\n                  <Show when={softwareToGitHostUrl(software)} fallback={software} keyed>\n                    {(url) => <SafeLink class=\"underline\" href={url} />}\n                  </Show>\n                </div>\n              )}\n            </Show>\n          </div>\n          <div class=\"flex-1 shrink-0 px-4 py-2\">\n            <div class=\"text-sm text-fg-secondary\">{i18n.t('relayInfo.version')}</div>\n            <Show\n              when={relayInfo()?.version}\n              fallback={<div>{i18n.t('relayInfo.unknown')}</div>}\n              keyed\n            >\n              {(version) => <div class=\"whitespace-pre-wrap break-all\">{version}</div>}\n            </Show>\n          </div>\n        </div>\n        <Show when={relayInfo()?.supported_nips} keyed>\n          {(nips) => (\n            <div class=\"flex-1 shrink-0 border-t border-border px-4 py-2\">\n              <div class=\"text-sm text-fg-secondary\">{i18n.t('relayInfo.supportedNips')}</div>\n              <div class=\"scrollbar flex w-full gap-1 overflow-x-scroll pt-1\">\n                <For each={nips}>\n                  {(nip) => (\n                    <SafeLink href={buildNIPLink(nip)}>\n                      <span class=\"inline-block w-12 rounded-xl border border-border py-2 text-center hover:border-fg-tertiary hover:text-fg-secondary\">\n                        {nip}\n                      </span>\n                    </SafeLink>\n                  )}\n                </For>\n              </div>\n            </div>\n          )}\n        </Show>\n        <div class=\"flex flex-col gap-2 p-4\">\n          <button\n            class=\"select-text rounded-lg border border-border bg-bg-tertiary/20 p-2 text-fg-secondary hover:bg-bg-tertiary\"\n            onClick={toggleShowRawInfo}\n          >\n            {i18n.t('relayInfo.showJSON')}\n          </button>\n          <Show when={showRawInfo()}>\n            <pre class=\"w-full overflow-scroll rounded-lg border border-border p-4\">\n              {JSON.stringify(relayInfo(), null, 2)}\n            </pre>\n          </Show>\n        </div>\n      </div>\n    </BasicModal>\n  );\n};\n\nexport default RelayInfoModal;\n","import { createSignal, batch, For, Show, type JSX } from 'solid-js';\n\nimport XMark from 'heroicons/24/outline/x-mark.svg';\n\nimport Section from '@/components/modal/config/Section';\nimport RelayInfoModal from '@/components/modal/RelayInfoModal';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport usePool from '@/nostr/usePool';\nimport useRelayInfo from '@/nostr/useRelayInfo';\nimport { RelayUrlRegex } from '@/utils/regex';\n\nconst RelayConfig = () => {\n  const i18n = useTranslation();\n  const { config, addRelay, removeRelay } = useConfig();\n  const pool = usePool();\n\n  const [relayUrlInput, setRelayUrlInput] = createSignal<string>('');\n\n  const [modalState, setModalState] = createSignal<{ type: 'RelayInfo'; relayUrl: string } | null>(\n    null,\n  );\n\n  const closeModal = () => setModalState(null);\n\n  const handleClickAddRelay: JSX.EventHandler<HTMLFormElement, Event> = (ev) => {\n    ev.preventDefault();\n    if (relayUrlInput().length === 0) return;\n    addRelay(relayUrlInput());\n    setRelayUrlInput('');\n  };\n\n  const importFromNIP07 = async () => {\n    if (window.nostr == null) return;\n\n    const importedRelays = Object.entries((await window.nostr?.getRelays?.()) ?? []);\n    const relayUrls = importedRelays.map(([relayUrl]) => relayUrl).join('\\n');\n\n    if (importedRelays.length === 0) {\n      window.alert(i18n.t('config.relays.notConfigured'));\n      return;\n    }\n\n    if (!window.confirm(`${i18n.t('config.relays.askImport')}\\n\\n${relayUrls}`)) {\n      return;\n    }\n\n    const lastCount = config().relayUrls.length;\n    batch(() => {\n      importedRelays.forEach(([relayUrl]) => {\n        addRelay(relayUrl);\n      });\n    });\n    const currentCount = config().relayUrls.length;\n    const importedCount = currentCount - lastCount;\n    window.alert(i18n.t('config.relays.imported', { count: importedCount }));\n  };\n\n  return (\n    <>\n      <Section title={i18n.t('config.relays.relays')}>\n        <p class=\"py-1\">\n          {i18n.t('config.relays.numOfRelays', { count: config().relayUrls.length })}\n        </p>\n        <form class=\"flex gap-2\" onSubmit={handleClickAddRelay}>\n          <input\n            class=\"flex-1 rounded-md border border-border bg-bg ring-border placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"relayUrl\"\n            placeholder=\"wss://...\"\n            value={relayUrlInput()}\n            pattern={RelayUrlRegex}\n            onChange={(ev) => setRelayUrlInput(ev.currentTarget.value)}\n          />\n          <button type=\"submit\" class=\"rounded bg-primary p-2 font-bold text-primary-fg\">\n            {i18n.t('config.relays.addRelay')}\n          </button>\n        </form>\n        <ul class=\"mt-2 divide-y divide-border rounded border border-border\">\n          <For each={config().relayUrls}>\n            {(relayUrl: string) => {\n              const { relayInfo } = useRelayInfo(() => ({ relayUrl }));\n              const connected = () => pool().getRelay(relayUrl)?.connected ?? false;\n\n              return (\n                <li class=\"flex\">\n                  <button\n                    class=\"flex flex-1 items-center truncate rounded py-1 text-start hover:bg-bg-tertiary\"\n                    onClick={() => setModalState({ type: 'RelayInfo', relayUrl })}\n                  >\n                    <div class=\"shrink-0 px-2\">\n                      <span\n                        class=\"inline-block size-2 rounded-full\"\n                        classList={{\n                          'bg-rose-500': !connected(),\n                          'bg-green-500': connected(),\n                        }}\n                        aria-label=\"\"\n                      />\n                    </div>\n                    <div class=\"min-w-0 flex-1\">\n                      <div class=\"truncate\">{relayInfo()?.name ?? relayUrl}</div>\n                      <div class=\"truncate text-xs text-fg-secondary\">{relayUrl}</div>\n                    </div>\n                  </button>\n                  <button\n                    class=\"flex shrink-0 items-center justify-center pe-6 ps-4\"\n                    onClick={() => removeRelay(relayUrl)}\n                  >\n                    <span class=\"size-3\">\n                      <XMark />\n                    </span>\n                  </button>\n                </li>\n              );\n            }}\n          </For>\n        </ul>\n      </Section>\n      <Section title={i18n.t('config.relays.importRelays')}>\n        <button\n          type=\"button\"\n          class=\"rounded bg-primary p-2 font-bold text-primary-fg\"\n          onClick={() => {\n            importFromNIP07().catch((err) => {\n              console.error('failed to import relays', err);\n              window.alert(i18n.t('config.relays.failedToImport'));\n            });\n          }}\n        >\n          {i18n.t('config.relays.importFromExtension')}\n        </button>\n      </Section>\n      <Show when={modalState()} keyed>\n        {(state) => (\n          <Show when={state.type === 'RelayInfo'}>\n            <RelayInfoModal relayUrl={state.relayUrl} onClose={() => closeModal()} />\n          </Show>\n        )}\n      </Show>\n    </>\n  );\n};\n\nexport default RelayConfig;\n","import { createSignal, Show, For } from 'solid-js';\n\nimport ArrowLeft from 'heroicons/24/outline/arrow-left.svg';\nimport EyeSlash from 'heroicons/24/outline/eye-slash.svg';\nimport FaceSmile from 'heroicons/24/outline/face-smile.svg';\nimport PaintBrush from 'heroicons/24/outline/paint-brush.svg';\nimport ServerStack from 'heroicons/24/outline/server-stack.svg';\nimport User from 'heroicons/24/outline/user.svg';\n\nimport BasicModal from '@/components/modal/BasicModal';\nimport ColorThemeSection from '@/components/modal/config/display/ColorThemeSection';\nimport DateFormatSection from '@/components/modal/config/display/DateFormatSection';\nimport EmbeddingSection from '@/components/modal/config/display/EmbeddingSection';\nimport OtherSection from '@/components/modal/config/display/OtherSection';\nimport ReactionSection from '@/components/modal/config/display/ReactionSection';\nimport EmojiImportSection from '@/components/modal/config/emoji/EmojiImportSection';\nimport EmojiSection from '@/components/modal/config/emoji/EmojiSection';\nimport MuteConfig from '@/components/modal/config/mute/MuteConfig';\nimport BackupSection from '@/components/modal/config/profile/BackupSection';\nimport ProfileSection from '@/components/modal/config/profile/ProfileSection';\nimport RelayConfig from '@/components/modal/config/relays/RelayConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\n\ntype ConfigProps = {\n  onClose: () => void;\n};\n\nconst ConfigUI = (props: ConfigProps) => {\n  const i18n = useTranslation();\n  const [menuIndex, setMenuIndex] = createSignal<number | null>(null);\n\n  const menu = [\n    {\n      name: () => i18n.t('config.account.profile'),\n      icon: () => <User />,\n      render: () => (\n        <>\n          <ProfileSection />\n          <BackupSection />\n        </>\n      ),\n    },\n    {\n      name: () => i18n.t('config.relays.relays'),\n      icon: () => <ServerStack />,\n      render: () => <RelayConfig />,\n    },\n    {\n      name: () => i18n.t('config.display.display'),\n      icon: () => <PaintBrush />,\n      render: () => (\n        <>\n          <ColorThemeSection />\n          <DateFormatSection />\n          <ReactionSection />\n          <EmbeddingSection />\n          <OtherSection />\n        </>\n      ),\n    },\n    {\n      name: () => i18n.t('config.customEmoji.customEmoji'),\n      icon: () => <FaceSmile />,\n      render: () => (\n        <>\n          <EmojiSection />\n          <EmojiImportSection />\n        </>\n      ),\n    },\n    {\n      name: () => i18n.t('config.mute.mute'),\n      icon: () => <EyeSlash />,\n      render: () => <MuteConfig />,\n    },\n  ];\n\n  const getMenuItem = () => {\n    const index = menuIndex();\n    if (index == null) return null;\n    return menu[index];\n  };\n\n  return (\n    <BasicModal onClose={props.onClose}>\n      <div class=\"p-4\">\n        <Show\n          when={getMenuItem()}\n          fallback={\n            <>\n              <h2 class=\"flex-1 text-center text-lg font-bold\">{i18n.t('config.config')}</h2>\n              <ul class=\"flex flex-col\">\n                <For each={menu}>\n                  {(menuItem, i) => (\n                    <li class=\"w-full\">\n                      <button\n                        class=\"flex w-full gap-2 py-3 hover:text-primary\"\n                        onClick={() => setMenuIndex(i)}\n                      >\n                        <span class=\"inline-block size-6\">{menuItem.icon()}</span>\n                        {menuItem.name()}\n                      </button>\n                    </li>\n                  )}\n                </For>\n              </ul>\n            </>\n          }\n          keyed\n        >\n          {(menuItem) => (\n            <div class=\"flex flex-col\">\n              <div>\n                <button\n                  class=\"pr-4 text-fg hover:text-fg-secondary\"\n                  onClick={() => setMenuIndex(null)}\n                >\n                  <span class=\"inline-block size-6\">\n                    <ArrowLeft />\n                  </span>\n                </button>\n              </div>\n              <div class=\"w-full flex-1 pt-4\">{menuItem.render()}</div>\n            </div>\n          )}\n        </Show>\n      </div>\n    </BasicModal>\n  );\n};\n\nexport default ConfigUI;\n"],"names":["EyeSlash","props","_el$","_tmpl$","_$spread","PaintBrush","ServerStack","ChevronDown","ChevronUp","Section","opened","setOpened","createSignal","initialOpened","toggleOpened","current","_tmpl$2","_el$2","firstChild","_el$3","_el$4","_el$5","nextSibling","$$click","title","_$createComponent","Show","when","fallback","children","_el$6","_$delegateEvents","ColorThemeSection","i18n","useTranslation","config","setConfig","useConfig","isCurrentlyUsing","id","theme","colorTheme","type","updateColorTheme","t","For","each","Object","values","colorThemes","name","_$effect","_p$","_v$","_v$2","_v$3","classList","toggle","undefined","DateFormatSection","dateFormats","example","updateDateFormat","dateFormat","_$insert","_v$4","ToggleButton","event","onClick","value","_v$5","_$setAttribute","EmbeddingSection","key","embedding","_el$7","youtube","twitter","ogp","OtherSection","toggleKeepOpenPostForm","keepOpenPostForm","toggleShowMedia","showMedia","toggleHideCount","hideCount","ReactionSection","toggleUseEmojiReaction","useEmojiReaction","toggleShowEmojiReaction","showEmojiReaction","pubkeySchema","z","shortcodeSchema","emojiSchema","emojiPackSchemaV1","emojiPack","uniqBy","emoji","simpleEmojiPackSchema","convertToEmojiConfig","emojipack","shortcode","url","EmojiImportSection","saveEmojis","jsonInput","setJSONInput","handleClickSaveEmoji","ev","preventDefault","length","data","parse","JSON","emojis","err","message","Error","alert","addEventListener","currentTarget","EmojiSection","saveEmoji","removeEmoji","shortcodeInput","setShortcodeInput","urlInput","setUrlInput","_el$8","HttpUrlRegex","_el$9","customEmojis","popup","usePopup","_el$10","_tmpl$3","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_tmpl$4","_el$17","_el$18","_ref$","targetRef","_$use","open","LazyLoad","_tmpl$5","_el$20","_tmpl$6","_el$21","MuteConfig","removeMutedPubkey","removeMutedThread","addMutedKeyword","removeMutedKeyword","keywordInput","setKeywordInput","handleClickAddKeyword","mutedPubkeys","UserNameDisplay","pubkey","XMark","mutedKeywords","keyword","mutedThreads","_tmpl$7","EventDisplayById","eventId","actions","displayForcibly","BackupSection","fileInputRef","handleSave","json","stringify","blob","Blob","dataUrl","URL","createObjectURL","datetime","Date","toISOString","link","document","createElement","href","download","click","handleRestore","restore","file","text","validated","ConfigSchema","window","location","reload","e","handleChangeFile","files","catch","console","log","multiple","ProfileSection","usePubkey","showProfile","showProfileEdit","useModalState","ensureNonNull","pubkeyNonNull","RelayInfoLimitationSchema","RelayInfoRetentionSchema","RelayInfoFeeSchema","RelayInfoFeesSchema","RelayInfoSchema","isValidId","buildRelayInfoUrlFromRelayUrl","relayUrl","fetchRelayInfo","relayInfoUrl","res","body","ensureSchema","useRelayInfo","propsProvider","createMemo","query","createQuery","queryKey","params","buildNIPLink","nip","toString","padStart","RelayInfoModal","relayInfo","showRawInfo","setShowRawInfo","toggleShowRawInfo","BasicModal","onClose","icon","keyed","pictureUrl","description","_el$22","_el$23","_el$24","UserDisplayName","contact","_el$25","_el$26","SafeLink","software","_el$27","_el$28","softwareToGitHostUrl","version","_el$29","_el$30","supported_nips","_el$31","_tmpl$8","_el$32","_el$33","nips","_el$34","_tmpl$9","_el$19","RelayConfig","addRelay","removeRelay","pool","usePool","relayUrlInput","setRelayUrlInput","modalState","setModalState","closeModal","handleClickAddRelay","importFromNIP07","nostr","importedRelays","entries","getRelays","relayUrls","map","join","confirm","lastCount","batch","forEach","importedCount","count","RelayUrlRegex","connected","getRelay","error","state","ConfigUI","menuIndex","setMenuIndex","menu","User","render","FaceSmile","getMenuItem","index","menuItem","i","ArrowLeft"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}