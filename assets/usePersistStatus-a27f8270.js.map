{"version":3,"file":"usePersistStatus-a27f8270.js","sources":["../../src/hooks/createSignalWithStorage.ts","../../src/utils/resolveAsset.tsx","../../src/hooks/usePersistStatus.ts"],"sourcesContent":["import { createSignal, createEffect, onMount, type Signal } from 'solid-js';\n\nimport { createStore, SetStoreFunction, type Store, type StoreNode } from 'solid-js/store';\n\ntype GenericStorage<T> = {\n  getItem(key: string): T | null;\n  setItem(key: string, value: T): void;\n};\n\nexport const createStorageWithSerializer = <T>(\n  storageProvider: () => Storage,\n  serializer: (v: T) => string,\n  deserializer: (v: string) => T | null,\n): GenericStorage<T> => {\n  const storage: Storage = storageProvider();\n\n  return {\n    getItem(key: string): T | null {\n      const data = storage.getItem(key);\n      return data != null ? deserializer(data) : null;\n    },\n    setItem(key: string, value: T) {\n      const data = serializer(value);\n      storage.setItem(key, data);\n    },\n  };\n};\n\nexport const createSignalWithStorage = <T>(\n  key: string,\n  initialValue: T,\n  storage: GenericStorage<T>,\n): Signal<T> => {\n  const [loaded, setLoaded] = createSignal<boolean>(false);\n  const [state, setState] = createSignal(initialValue);\n\n  onMount(() => {\n    const data = storage.getItem(key);\n    // If there is no data, default value is used.\n    if (data != null) setState(() => data);\n    setLoaded(true);\n  });\n\n  createEffect(() => {\n    if (loaded()) storage.setItem(key, state());\n  });\n\n  return [state, setState];\n};\n\nexport const createStoreWithStorage = <T extends StoreNode>(\n  key: string,\n  initialValue: T,\n  storage: GenericStorage<T>,\n): [Store<T>, SetStoreFunction<T>] => {\n  const [loaded, setLoaded] = createSignal<boolean>(false);\n  const [state, setState] = createStore<T>(initialValue);\n\n  onMount(() => {\n    const data = storage.getItem(key);\n    // If there is no data, default value is used.\n    if (data != null) setState(data);\n    setLoaded(true);\n  });\n\n  createEffect(() => {\n    if (loaded()) storage.setItem(key, state);\n  });\n\n  return [state, setState];\n};\n","const resolveAsset = (path: string): string => {\n  const baseUrl = new URL(import.meta.env.BASE_URL, window.location.href);\n  return new URL(path, baseUrl).href;\n};\n\nexport default resolveAsset;\n","import { Accessor } from 'solid-js';\n\nimport {\n  createStoreWithStorage,\n  createStorageWithSerializer,\n} from '@/hooks/createSignalWithStorage';\nimport { UploaderIds } from '@/utils/imageUpload';\n\ntype PersistStatus = {\n  loggedIn: boolean;\n  agreements: Record<UploaderIds, boolean>;\n};\n\ntype UsePersistStatus = {\n  persistStatus: Accessor<PersistStatus>;\n  loggedIn: () => void;\n  agreeToToS: (uploaderId: UploaderIds) => void;\n  didAgreeToToS: (uploaderId: UploaderIds) => boolean;\n};\n\nconst InitialPersistStatus: PersistStatus = {\n  loggedIn: false,\n  agreements: {\n    nostrBuild: false,\n  },\n};\n\nconst serializer = (persistStatus: PersistStatus): string => JSON.stringify(persistStatus);\n// TODO zod使う\nconst deserializer = (json: string): PersistStatus => JSON.parse(json) as PersistStatus;\n\nconst storage = createStorageWithSerializer(() => window.localStorage, serializer, deserializer);\n\nconst [persistStatus, setPersistStatus] = createStoreWithStorage(\n  'RabbitPersistStatus',\n  InitialPersistStatus,\n  storage,\n);\n\nconst usePersistStatus = (): UsePersistStatus => {\n  const loggedIn = () => {\n    setPersistStatus((current) => ({ ...current, loggedIn: true }));\n  };\n\n  const agreeToToS = (key: UploaderIds) => {\n    setPersistStatus('agreements', (current) => ({ ...current, [key]: true }));\n  };\n\n  const didAgreeToToS = (key: UploaderIds): boolean => persistStatus.agreements[key] ?? false;\n\n  return {\n    persistStatus: () => ({\n      ...InitialPersistStatus,\n      ...persistStatus,\n    }),\n    loggedIn,\n    agreeToToS,\n    didAgreeToToS,\n  };\n};\n\nexport default usePersistStatus;\n"],"names":["createStorageWithSerializer","storageProvider","serializer","deserializer","storage","key","data","value","createStoreWithStorage","initialValue","loaded","setLoaded","createSignal","state","setState","createStore","onMount","createEffect","resolveAsset","path","baseUrl","URL","import","window","location","href","InitialPersistStatus","persistStatus","json","setPersistStatus","usePersistStatus","current"],"mappings":"6DASO,MAAMA,EAA8B,CACzCC,EACAC,EACAC,IACsB,CACtB,MAAMC,EAAmBH,IAElB,MAAA,CACL,QAAQI,EAAuB,CACvB,MAAAC,EAAOF,EAAQ,QAAQC,CAAG,EAChC,OAAOC,GAAQ,KAAOH,EAAaG,CAAI,EAAI,IAC7C,EACA,QAAQD,EAAaE,EAAU,CACvB,MAAAD,EAAOJ,EAAWK,CAAK,EACrBH,EAAA,QAAQC,EAAKC,CAAI,CAC3B,CAAA,CAEJ,EAwBaE,EAAyB,CACpCH,EACAI,EACAL,IACoC,CACpC,KAAM,CAACM,EAAQC,CAAS,EAAIC,EAAsB,EAAK,EACjD,CAACC,EAAOC,CAAQ,EAAIC,EAAeN,CAAY,EAErD,OAAAO,EAAQ,IAAM,CACN,MAAAV,EAAOF,EAAQ,QAAQC,CAAG,EAE5BC,GAAQ,MAAMQ,EAASR,CAAI,EAC/BK,EAAU,EAAI,CAAA,CACf,EAEDM,EAAa,IAAM,CACbP,EAAO,GAAWN,EAAA,QAAQC,EAAKQ,CAAK,CAAA,CACzC,EAEM,CAACA,EAAOC,CAAQ,CACzB,ECtEMI,EAAgBC,GAAyB,CAC7C,MAAMC,EAAU,IAAIC,IAAIC,WAA0BC,OAAOC,SAASC,IAAI,EACtE,OAAO,IAAIJ,IAAIF,EAAMC,CAAO,EAAEK,IAChC,ECiBMC,EAAsC,CAC1C,SAAU,GACV,WAAY,CACV,WAAY,EACd,CACF,EAEMxB,EAAcyB,GAAyC,KAAK,UAAUA,CAAa,EAEnFxB,EAAgByB,GAAgC,KAAK,MAAMA,CAAI,EAE/DxB,EAAUJ,EAA4B,IAAM,OAAO,aAAcE,EAAYC,CAAY,EAEzF,CAACwB,EAAeE,CAAgB,EAAIrB,EACxC,sBACAkB,EACAtB,CACF,EAEM0B,EAAmB,KAWhB,CACL,cAAe,KAAO,CACpB,GAAGJ,EACH,GAAGC,CAAA,GAEL,SAfe,IAAM,CACrBE,EAAkBE,IAAa,CAAE,GAAGA,EAAS,SAAU,EAAO,EAAA,CAAA,EAe9D,WAZkB1B,GAAqB,CACtBwB,EAAA,aAAeE,IAAa,CAAE,GAAGA,EAAS,CAAC1B,CAAG,EAAG,EAAO,EAAA,CAAA,EAYzE,cATqBA,GAA8BsB,EAAc,WAAWtB,CAAG,GAAK,EASpF"}