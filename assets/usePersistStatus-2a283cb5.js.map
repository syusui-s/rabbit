{"version":3,"file":"usePersistStatus-2a283cb5.js","sources":["../../src/utils/resolveAsset.tsx","../../src/hooks/useInterWindow.tsx","../../src/hooks/usePersistStatus.ts"],"sourcesContent":["const resolveAsset = (path: string): string => {\n  const baseUrl = new URL(import.meta.env.BASE_URL, window.location.href);\n  return new URL(path, baseUrl).href;\n};\n\nexport default resolveAsset;\n","import { createSignal, onMount, onCleanup, observable } from 'solid-js';\n\nimport useConfig from '@/core/useConfig';\nimport {\n  type InterWindowRequest,\n  type InterWindowRequestWithId,\n  type InterWindowResponseWithId,\n} from '@/interWindow';\n\nconst useInterWindow = (url: string) => {\n  let iframeRef: HTMLIFrameElement | undefined;\n  const [loaded, setLoaded] = createSignal(false);\n\n  onMount(() => {\n    iframeRef = (<iframe title=\"interwindow\" class=\"hidden\" src={url} />) as HTMLIFrameElement;\n    document.body.appendChild(iframeRef);\n    iframeRef.addEventListener('load', () => setLoaded(true));\n    onCleanup(() => {\n      iframeRef?.remove();\n    });\n  });\n\n  const waitLoaded = (): Promise<void> => {\n    if (loaded()) return Promise.resolve();\n    return new Promise((resolve) => {\n      observable(loaded).subscribe((v) => {\n        if (v) resolve();\n      });\n    });\n  };\n\n  const listen = async (\n    expectedRequestId: number,\n    timeout: number = 2000,\n  ): Promise<InterWindowResponseWithId> =>\n    new Promise((resolve, reject) => {\n      const listener = (event: MessageEvent) => {\n        console.log('message received', event);\n        if (event.origin !== new URL(url).origin) return;\n        if (typeof event.data !== 'string') return;\n\n        const data = JSON.parse(event.data) as InterWindowResponseWithId;\n\n        if (data.requestId !== expectedRequestId) return;\n\n        window.removeEventListener('message', listener);\n        resolve(data);\n      };\n\n      setTimeout(() => {\n        reject(new Error('timeout'));\n        window.removeEventListener('message', listener);\n      }, timeout);\n\n      window.addEventListener('message', listener, false);\n    });\n\n  const request = async (message: InterWindowRequest) => {\n    const requestId = Math.random();\n    const withId = { ...message, requestId } satisfies InterWindowRequestWithId;\n    const messageStr = JSON.stringify(withId);\n\n    await waitLoaded();\n    const promise = listen(requestId);\n    if (iframeRef == null) {\n      throw new Error('iframeRef is null');\n    }\n    if (!loaded()) {\n      throw new Error('iframeRef is not loaded');\n    }\n    iframeRef.contentWindow?.postMessage(messageStr, new URL(url).origin);\n    return promise;\n  };\n\n  const getConfig = () => request({ type: 'GET_CONFIG' });\n\n  return {\n    loaded,\n    request,\n    getConfig,\n  };\n};\n\nexport const useOldConfig = () => {\n  const url = 'https://syusui-s.github.io/rabbit/transfer-config.html';\n  const { getConfig } = useInterWindow(url);\n  const { setConfig } = useConfig();\n\n  const [oldConfig, setOldConfig] = createSignal<string | undefined>();\n\n  const canImport = () => {\n    const c = oldConfig();\n    return c != null && c.length > 0;\n  };\n\n  const importConfig = () => {\n    const c = oldConfig();\n    if (c != null && c.length > 0) {\n      setConfig(JSON.parse(c));\n    }\n  };\n\n  onMount(() => {\n    setTimeout(() => {\n      getConfig()\n        .then((obtainedConfig) => {\n          if (typeof obtainedConfig.payload === 'string' && obtainedConfig.payload.length > 0) {\n            setOldConfig(obtainedConfig.payload);\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }, 100);\n  });\n\n  return {\n    canImport,\n    importConfig,\n  };\n};\n\nexport default useInterWindow;\n","import { createRoot, type Accessor } from 'solid-js';\n\nimport {\n  createStoreWithStorage,\n  createStorageWithSerializer,\n} from '@/hooks/createSignalWithStorage';\nimport { UploaderIds } from '@/utils/imageUpload';\n\ntype PersistStatus = {\n  loggedIn: boolean;\n  agreements: Record<UploaderIds, boolean>;\n};\n\ntype UsePersistStatus = {\n  persistStatus: Accessor<PersistStatus>;\n  loggedIn: () => void;\n  agreeToToS: (uploaderId: UploaderIds) => void;\n  didAgreeToToS: (uploaderId: UploaderIds) => boolean;\n};\n\nconst InitialPersistStatus: PersistStatus = {\n  loggedIn: false,\n  agreements: {\n    nostrBuild: false,\n  },\n};\n\nconst serializer = (persistStatus: PersistStatus): string => JSON.stringify(persistStatus);\n// TODO zod使う\nconst deserializer = (json: string): PersistStatus => JSON.parse(json) as PersistStatus;\n\nconst storage = createStorageWithSerializer(() => window.localStorage, serializer, deserializer);\n\nconst [persistStatus, setPersistStatus] = createRoot(() =>\n  createStoreWithStorage('RabbitPersistStatus', InitialPersistStatus, storage),\n);\n\nconst usePersistStatus = (): UsePersistStatus => {\n  const loggedIn = () => {\n    setPersistStatus((current) => ({ ...current, loggedIn: true }));\n  };\n\n  const agreeToToS = (key: UploaderIds) => {\n    setPersistStatus('agreements', (current) => ({ ...current, [key]: true }));\n  };\n\n  const didAgreeToToS = (key: UploaderIds): boolean => persistStatus.agreements[key] ?? false;\n\n  return {\n    persistStatus: () => ({\n      ...InitialPersistStatus,\n      ...persistStatus,\n    }),\n    loggedIn,\n    agreeToToS,\n    didAgreeToToS,\n  };\n};\n\nexport default usePersistStatus;\n"],"names":["resolveAsset","path","baseUrl","URL","import","window","location","href","useInterWindow","url","iframeRef","loaded","setLoaded","createSignal","onMount","_el$","_tmpl$","_$setAttribute","document","body","appendChild","addEventListener","onCleanup","remove","waitLoaded","Promise","resolve","observable","subscribe","v","listen","expectedRequestId","timeout","reject","listener","event","console","log","origin","data","JSON","parse","requestId","removeEventListener","setTimeout","Error","request","message","Math","random","withId","messageStr","stringify","promise","contentWindow","postMessage","getConfig","type","useOldConfig","setConfig","useConfig","oldConfig","setOldConfig","canImport","c","length","importConfig","then","obtainedConfig","payload","catch","err","error","InitialPersistStatus","serializer","persistStatus","deserializer","json","storage","createStorageWithSerializer","setPersistStatus","createRoot","createStoreWithStorage","usePersistStatus","current","key"],"mappings":"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"}