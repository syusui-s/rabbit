{"version":3,"file":"AddColumn-rNtCL20g.js","sources":["../../node_modules/heroicons/24/outline/server.svg","../../src/nostr/useFollowSets.ts","../../src/components/modal/followset/FollowSetsDisplay.tsx","../../src/components/modal/AddColumn.tsx"],"sourcesContent":["export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21.75 17.25v-.228a4.5 4.5 0 0 0-.12-1.03l-2.268-9.64a3.375 3.375 0 0 0-3.285-2.602H7.923a3.375 3.375 0 0 0-3.285 2.602l-2.268 9.64a4.5 4.5 0 0 0-.12 1.03v.228m19.5 0a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3m19.5 0a3 3 0 0 0-3-3H5.25a3 3 0 0 0-3 3m16.5 0h.008v.008h-.008zm-3 0h.008v.008h-.008z\"/></svg>","import { createMemo } from 'solid-js';\n\nimport * as Kind from 'nostr-tools/kinds';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport useConfig from '@/core/useConfig';\nimport Tags from '@/nostr/event/Tags';\nimport useSubscription from '@/nostr/useSubscription';\nimport ensureNonNull from '@/utils/ensureNonNull';\n\ntype UseFollowSetsProps = {\n  author: string;\n};\n\nexport type UseFollowSets = {\n  events: () => NostrEvent[];\n  followSets: () => NostrEvent[];\n};\n\nconst isLikelyFollowSet = (event: NostrEvent) => {\n  const tags = new Tags(event.tags);\n  const identifier = tags.findFirstTagByName('d')?.[1];\n  if (identifier == null) return false;\n\n  return !(\n    identifier === 'mute' ||\n    /^chats\\//.test(identifier) ||\n    /^settings\\//.test(identifier) ||\n    /^notifications\\//.test(identifier)\n  );\n};\n\nconst useFollowSets = (propsProvider: () => UseFollowSetsProps | null): UseFollowSets => {\n  const props = createMemo(propsProvider);\n\n  const { config } = useConfig();\n\n  const { events } = useSubscription(() =>\n    ensureNonNull([props()] as const)(([propsNonNull]) => ({\n      filters: [\n        {\n          kinds: [Kind.Followsets],\n          authors: [propsNonNull.author],\n        },\n      ],\n      relayUrls: config().relayUrls,\n    })),\n  );\n\n  const followSets = () => events().filter(isLikelyFollowSet);\n\n  return {\n    events,\n    followSets,\n  };\n};\n\nexport default useFollowSets;\n","import { type Component, For, Show } from 'solid-js';\n\nimport { useTranslation } from '@/i18n/useTranslation';\nimport NostrSet from '@/nostr/event/sets/NostrSet';\nimport useFollowSets from '@/nostr/useFollowSets';\nimport ensureNonNull from '@/utils/ensureNonNull';\n\ntype FollowSetsDisplayProps = {\n  pubkey?: string;\n  onSelectFollowSet: (pubkey: string, identifier: string) => void;\n};\n\nconst FollowSetsDisplay: Component<FollowSetsDisplayProps> = (props) => {\n  const i18n = useTranslation();\n\n  const { followSets } = useFollowSets(() =>\n    ensureNonNull([props.pubkey] as const)(([pubkeyNonNull]) => ({\n      author: pubkeyNonNull,\n    })),\n  );\n\n  return (\n    <div class=\"p-8\">\n      {i18n.t('column.addFollowSetColumn.numberOfFollowSets', { count: followSets().length })}\n      <div class=\"flex flex-col divide-y divide-border rounded border border-border\">\n        <For each={followSets()}>\n          {(followSet) => {\n            const event = new NostrSet(followSet);\n\n            return (\n              <button\n                type=\"button\"\n                class=\"flex items-center gap-2 p-2 hover:bg-bg-tertiary\"\n                onClick={() => props.onSelectFollowSet(event.pubkey, event.identifier())}\n              >\n                <div class=\"size-8 shrink-0 bg-fg-secondary\">\n                  <Show when={event.image()} keyed>\n                    {(url) => <img class=\"size-full object-cover\" src={url} alt=\"icon\" />}\n                  </Show>\n                </div>\n                <div class=\"shrink-0 grow truncate text-start\">\n                  {event.title() ?? event.identifier()}\n                </div>\n                <div class=\"px-2 text-fg-secondary\">{event.pTags().length}</div>\n              </button>\n            );\n          }}\n        </For>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowSetsDisplay;\n","import { type Component, For, Switch, Match, createSignal, type JSX } from 'solid-js';\n\nimport Bell from 'heroicons/24/outline/bell.svg';\nimport GlobeAlt from 'heroicons/24/outline/globe-alt.svg';\nimport Heart from 'heroicons/24/outline/heart.svg';\nimport Home from 'heroicons/24/outline/home.svg';\nimport MagnifyingGlass from 'heroicons/24/outline/magnifying-glass.svg';\nimport Server from 'heroicons/24/outline/server.svg';\nimport User from 'heroicons/24/outline/user.svg';\nimport Users from 'heroicons/24/outline/users.svg';\n// import BookmarkIcon from 'heroicons/24/outline/bookmark.svg';\n// import ChatBubbleLeftRight from 'heroicons/24/outline/chat-bubble-left-right.svg';\n\nimport BasicModal from '@/components/modal/BasicModal';\nimport FollowSetsDisplay from '@/components/modal/followset/FollowSetsDisplay';\nimport {\n  createFollowingColumn,\n  createJapanRelaysColumn,\n  createNotificationColumn,\n  createPostsColumn,\n  createReactionsColumn,\n  createRelaysColumn,\n  createFollowSetColumn,\n  createSearchColumn,\n} from '@/core/column';\nimport useConfig from '@/core/useConfig';\nimport { useRequestCommand } from '@/hooks/useCommandBus';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport usePubkey from '@/nostr/usePubkey';\nimport ensureNonNull from '@/utils/ensureNonNull';\nimport { isWebSocketUrl } from '@/utils/url';\n\ntype AddColumnProps = {\n  onClose: () => void;\n};\n\ntype AddRelayColumnProps = {\n  addRelaysColumn: (relayUrls: string[]) => void;\n};\n\nconst AddRelaysColumn: Component<AddRelayColumnProps> = (props) => {\n  const i18n = useTranslation();\n  const { config } = useConfig();\n\n  const [relayUrl, setRelayUrl] = createSignal<string>('');\n\n  const handleSubmit: JSX.EventHandler<HTMLFormElement, Event> = (ev) => {\n    ev.preventDefault();\n\n    const url = relayUrl();\n    if (!isWebSocketUrl(url)) {\n      window.alert('Invalid url');\n      return;\n    }\n\n    props.addRelaysColumn([url]);\n  };\n\n  return (\n    <div class=\"p-8\">\n      <form class=\"flex gap-1\" onSubmit={handleSubmit}>\n        <input\n          class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n          type=\"text\"\n          name=\"url\"\n          placeholder=\"wss://...\"\n          pattern=\"wss?:\\/\\/.*\"\n          required\n          onChange={(ev) => setRelayUrl(ev.currentTarget.value)}\n        />\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          type=\"submit\"\n        >\n          {i18n.t('column.addRelayColumn.add')}\n        </button>\n      </form>\n      <div class=\"flex flex-col items-start gap-1 pt-8\">\n        <For each={config().relayUrls}>\n          {(url) => (\n            <button\n              type=\"button\"\n              class=\"text-fg-secondary hover:text-fg\"\n              onClick={() => props.addRelaysColumn([url])}\n            >\n              {url}\n            </button>\n          )}\n        </For>\n      </div>\n    </div>\n  );\n};\n\nconst AddColumn: Component<AddColumnProps> = (props) => {\n  const i18n = useTranslation();\n  const pubkey = usePubkey();\n  const { saveColumn } = useConfig();\n  const request = useRequestCommand();\n\n  const [detailComponent, setDetailComponent] = createSignal<string | undefined>(undefined);\n\n  const finish = () => {\n    props.onClose();\n    request({ command: 'moveToLastColumn' }).catch((err) => console.error(err));\n  };\n\n  const addFollowingColumn = () => {\n    ensureNonNull([pubkey()] as const)(([pubkeyNonNull]) => {\n      saveColumn(createFollowingColumn({ pubkey: pubkeyNonNull }));\n    });\n    finish();\n  };\n\n  const addNotificationColumn = () => {\n    ensureNonNull([pubkey()] as const)(([pubkeyNonNull]) => {\n      saveColumn(createNotificationColumn({ pubkey: pubkeyNonNull }));\n    });\n    finish();\n  };\n\n  const addJapanRelaysColumn = () => {\n    saveColumn(createJapanRelaysColumn());\n    finish();\n  };\n\n  const addRelaysColumn = (relayUrls: string[]) => {\n    saveColumn(\n      createRelaysColumn({\n        name: relayUrls.join(', '),\n        relayUrls,\n      }),\n    );\n    finish();\n  };\n\n  const addFollowSetColumn = (author: string, identifier: string) => {\n    saveColumn(createFollowSetColumn({ author, identifier }));\n    finish();\n  };\n\n  const addSearchColumn = () => {\n    saveColumn(createSearchColumn({ query: '' }));\n    finish();\n  };\n\n  const addMyPostsColumn = () => {\n    ensureNonNull([pubkey()] as const)(([pubkeyNonNull]) => {\n      saveColumn(createPostsColumn({ pubkey: pubkeyNonNull }));\n    });\n    finish();\n  };\n\n  const addMyReactionsColumn = () => {\n    ensureNonNull([pubkey()] as const)(([pubkeyNonNull]) => {\n      saveColumn(createReactionsColumn({ pubkey: pubkeyNonNull }));\n    });\n    finish();\n  };\n\n  const menu = [\n    {\n      name: () => i18n.t('column.home'),\n      icon: () => <Home />,\n      onSelect: addFollowingColumn,\n    },\n    {\n      name: () => i18n.t('column.notification'),\n      icon: () => <Bell />,\n      onSelect: addNotificationColumn,\n    },\n    {\n      name: () => i18n.t('column.relay'),\n      icon: () => <Server />,\n      onSelect: () => setDetailComponent('AddRelaysColumn'),\n    },\n    {\n      name: () => i18n.t('column.followSet'),\n      icon: () => <Users />,\n      onSelect: () => setDetailComponent('AddFollowSet'),\n    },\n    {\n      name: () => i18n.t('column.japanese'),\n      icon: () => <GlobeAlt />,\n      onSelect: addJapanRelaysColumn,\n    },\n    {\n      name: () => i18n.t('column.search'),\n      icon: () => <MagnifyingGlass />,\n      onSelect: addSearchColumn,\n    },\n    {\n      name: () => i18n.t('column.myPosts'),\n      icon: () => <User />,\n      onSelect: addMyPostsColumn,\n    },\n    {\n      name: () => i18n.t('column.myReactions'),\n      icon: () => <Heart />,\n      onSelect: addMyReactionsColumn,\n    },\n    // TODO channel <ChatBubbleLeftRight />\n    // TODO bookmark <BookmarkIcon />\n  ];\n\n  return (\n    <BasicModal onClose={props.onClose}>\n      <Switch\n        fallback={\n          <div class=\"flex flex-wrap p-4\">\n            <For each={menu}>\n              {(menuItem) => (\n                <button\n                  class=\"flex basis-1/2 flex-col items-center gap-2 py-8 hover:text-primary sm:basis-1/4\"\n                  onClick={menuItem.onSelect}\n                >\n                  <span class=\"inline-block size-8\">{menuItem.icon()}</span>\n                  {menuItem.name()}\n                </button>\n              )}\n            </For>\n          </div>\n        }\n      >\n        <Match when={detailComponent() === 'AddRelaysColumn'}>\n          <AddRelaysColumn addRelaysColumn={addRelaysColumn} />\n        </Match>\n        <Match when={detailComponent() === 'AddFollowSet'}>\n          <FollowSetsDisplay pubkey={pubkey()} onSelectFollowSet={addFollowSetColumn} />\n        </Match>\n      </Switch>\n    </BasicModal>\n  );\n};\n\nexport default AddColumn;\n"],"names":["Server","props","_el$","_tmpl$","_$spread","isLikelyFollowSet","event","identifier","Tags","useFollowSets","propsProvider","createMemo","config","useConfig","events","useSubscription","ensureNonNull","propsNonNull","Kind.Followsets","FollowSetsDisplay","i18n","useTranslation","followSets","pubkey","pubkeyNonNull","author","_el$2","firstChild","_$insert","t","count","length","_$createComponent","For","each","children","followSet","NostrSet","_el$3","_tmpl$2","_el$4","_el$5","nextSibling","_el$6","$$click","onSelectFollowSet","Show","when","image","keyed","_el$7","_tmpl$3","url","title","pTags","_$delegateEvents","AddRelaysColumn","relayUrl","setRelayUrl","createSignal","handleSubmit","ev","preventDefault","isWebSocketUrl","window","alert","addRelaysColumn","addEventListener","currentTarget","value","relayUrls","AddColumn","usePubkey","saveColumn","request","useRequestCommand","detailComponent","setDetailComponent","undefined","finish","onClose","command","catch","console","error","err","addFollowingColumn","createFollowingColumn","addNotificationColumn","createNotificationColumn","addJapanRelaysColumn","createJapanRelaysColumn","createRelaysColumn","name","join","addFollowSetColumn","createFollowSetColumn","menu","icon","Home","onSelect","Bell","Users","GlobeAlt","MagnifyingGlass","addSearchColumn","createSearchColumn","query","User","addMyPostsColumn","createPostsColumn","Heart","addMyReactionsColumn","createReactionsColumn","BasicModal","Switch","fallback","_el$8","_tmpl$4","_el$9","_$addEventListener","menuItem","Match"],"mappings":"mgCAAAA,GAAe,CAACC,EAAQ,CAAE,KAAA,IAAA,CAAA,MAAAC,EAAAC,KAAAC,OAAAA,EAAAF,EAA6JD,EAAK,EAAA,EAAAC,CAAA,GAAgW,ECmBthBG,GAAqBC,GAAsB,CAE/C,MAAMC,EADO,IAAIC,EAAKF,EAAM,IAAI,EACR,mBAAmB,GAAG,IAAI,CAAC,EAC/C,OAAAC,GAAc,KAAa,GAExB,EACLA,IAAe,QACf,WAAW,KAAKA,CAAU,GAC1B,cAAc,KAAKA,CAAU,GAC7B,mBAAmB,KAAKA,CAAU,EAEtC,EAEME,GAAiBC,GAAkE,CACjF,MAAAT,EAAQU,EAAWD,CAAa,EAEhC,CAAE,OAAAE,GAAWC,IAEb,CAAE,OAAAC,GAAWC,GAAgB,IACjCC,EAAc,CAACf,EAAM,CAAC,CAAU,EAAE,CAAC,CAACgB,CAAY,KAAO,CACrD,QAAS,CACP,CACE,MAAO,CAACC,CAAe,EACvB,QAAS,CAACD,EAAa,MAAM,CAC/B,CACF,EACA,UAAWL,IAAS,SAAA,EACpB,CAAA,EAKG,MAAA,CACL,OAAAE,EACA,WAJiB,IAAMA,EAAO,EAAE,OAAOT,EAAiB,CAIxD,CAEJ,gYC3CMc,GAAkElB,GAAA,CACtE,MAAMmB,EAAOC,IAEP,CAAEC,WAAAA,CAAAA,EAAeb,GAAc,IACnCO,EAAc,CAACf,EAAMsB,MAAM,CAAW,EAAC,CAAC,CAACC,CAAa,KAAO,CAC3DC,OAAQD,GACR,CACJ,EAEA,OAAA,IAAA,CAAA,MAAAtB,EAAAC,GAAAA,EAAAuB,EAAAxB,EAAAyB,WAAAC,OAAAA,EAAA1B,EAEKkB,IAAAA,EAAKS,EAAE,+CAAgD,CAAEC,MAAOR,IAAaS,MAAAA,CAAQ,EAACL,CAAA,EAAAA,EAAAA,EAAAM,EAEpFC,EAAG,CAAA,IAACC,MAAI,CAAA,OAAEZ,EAAW,CAAC,EAAAa,SACLC,GAAA,CACR9B,MAAAA,EAAQ,IAAI+B,GAASD,CAAS,EAEpC,OAAA,IAAA,CAAAE,MAAAA,EAAAC,KAAAC,EAAAF,EAAAX,WAAAc,EAAAD,EAAAE,YAAAC,EAAAF,EAAAC,YAAAE,OAAAA,EAAAA,QAIa,IAAM3C,EAAM4C,kBAAkBvC,EAAMiB,OAAQjB,EAAMC,YAAY,EAACiC,EAAAA,EAAAR,EAGrEc,EAAI,CAAA,IAACC,MAAI,CAAA,OAAEzC,EAAM0C,OAAO,EAAEC,MAAK,GAAAd,aACzB,IAAA,CAAA,MAAAe,EAAAC,KAAAD,OAAAA,EAAAA,EAAA,MAA8CE,CAAG,EAAAF,CAAAA,GAAA,CAAe,CAAA,CAAA,EAAAtB,EAAAa,EAItEnC,IAAAA,EAAM+C,SAAW/C,EAAMC,YAAY,EAAAqB,EAAAe,EAEDrC,IAAAA,EAAMgD,QAAQvB,MAAM,EAAAO,CAAAA,IAG/D,CAAC,CAAA,CAAA,EAAApC,CAAAA,IAKX,EAEiCqD,EAAA,CAAA,OAAA,CAAA,2oBCb3BC,GAA6DvD,GAAA,CACjE,MAAMmB,EAAOC,IACP,CAAET,OAAAA,GAAWC,EAAU,EAEvB,CAAC4C,EAAUC,CAAW,EAAIC,EAAqB,EAAE,EAEjDC,EAAiEC,GAAA,CACrEA,EAAGC,eAAe,EAElB,MAAMV,EAAMK,IACR,GAAA,CAACM,GAAeX,CAAG,EAAG,CACxBY,OAAOC,MAAM,aAAa,EAC1B,MACF,CAEMC,EAAAA,gBAAgB,CAACd,CAAG,CAAC,CAAA,EAG7B,OAAA,IAAA,CAAA,MAAAlD,EAAAC,GAAAuB,EAAAA,EAAAxB,EAAAyB,WAAAW,EAAAZ,EAAAC,WAAAa,EAAAF,EAAAI,YAAAD,EAAAf,EAAAgB,YAAAyB,OAAAA,EAAAA,iBAAA,SAEuCP,CAAY,EAAAtB,EAAA6B,iBAQhCN,SAAAA,GAAOH,EAAYG,EAAGO,cAAcC,KAAK,CAAC,EAAAzC,EAAAY,EAMpDpB,IAAAA,EAAKS,EAAE,2BAA2B,CAAC,EAAAY,EAAAA,EAAAT,EAIrCC,EAAG,CAAA,IAACC,MAAI,CAAA,OAAEtB,EAAS0D,EAAAA,SAAS,EAAAnC,aACtB,IAAA,CAAA,MAAAQ,EAAAJ,KAAAI,OAAAA,EAAAC,QAIQ,IAAM3C,EAAMiE,gBAAgB,CAACd,CAAG,CAAC,EAACxB,EAAAe,EAE1CS,CAAG,EAAAT,CAAAA,GAAA,CAEP,CAAA,CAAA,EAAAzC,CAAAA,IAKX,EAEMqE,GAAkDtE,GAAA,CACtD,MAAMmB,EAAOC,IACPE,EAASiD,IACT,CAAEC,WAAAA,GAAe5D,EAAU,EAC3B6D,EAAUC,IAEV,CAACC,EAAiBC,CAAkB,EAAIlB,EAAiCmB,MAAS,EAElFC,EAASA,IAAM,CACnB9E,EAAM+E,QAAQ,EACNN,EAAA,CAAEO,QAAS,kBAAA,CAAoB,EAAEC,SAAeC,QAAQC,MAAMC,CAAG,CAAC,CAAA,EAGtEC,EAAqBA,IAAM,CACjBtE,EAAA,CAACO,EAAQ,CAAA,CAAU,EAAE,CAAC,CAACC,CAAa,IAAM,CACtDiD,EAAWc,EAAsB,CAAEhE,OAAQC,CAAe,CAAA,CAAC,CAAA,CAC5D,EACMuD,GAAA,EAGHS,EAAwBA,IAAM,CACpBxE,EAAA,CAACO,EAAQ,CAAA,CAAU,EAAE,CAAC,CAACC,CAAa,IAAM,CACtDiD,EAAWgB,EAAyB,CAAElE,OAAQC,CAAe,CAAA,CAAC,CAAA,CAC/D,EACMuD,GAAA,EAGHW,EAAuBA,IAAM,CACjCjB,EAAWkB,GAAyB,EAC7BZ,GAAA,EAGHb,EAAmBI,GAAwB,CAC/CG,EACEmB,EAAmB,CACjBC,KAAMvB,EAAUwB,KAAK,IAAI,EACzBxB,UAAAA,CACD,CAAA,CACH,EACOS,GAAA,EAGHgB,EAAqBA,CAACtE,EAAgBlB,IAAuB,CACjEkE,EAAWuB,EAAsB,CAAEvE,OAAAA,EAAQlB,WAAAA,CAAY,CAAA,CAAC,EACjDwE,GAAA,EAsBHkB,EAAO,CACX,CACEJ,KAAMA,IAAMzE,EAAKS,EAAE,aAAa,EAChCqE,KAAMA,IAAAlE,EAAOmE,EAAO,EAAA,EACpBC,SAAUd,CACZ,EACA,CACEO,KAAMA,IAAMzE,EAAKS,EAAE,qBAAqB,EACxCqE,KAAMA,IAAAlE,EAAOqE,EAAO,EAAA,EACpBD,SAAUZ,CACZ,EACA,CACEK,KAAMA,IAAMzE,EAAKS,EAAE,cAAc,EACjCqE,KAAMA,IAAAlE,EAAOhC,GAAS,EAAA,EACtBoG,SAAUA,IAAMvB,EAAmB,iBAAiB,CACtD,EACA,CACEgB,KAAMA,IAAMzE,EAAKS,EAAE,kBAAkB,EACrCqE,KAAMA,IAAAlE,EAAOsE,EAAQ,EAAA,EACrBF,SAAUA,IAAMvB,EAAmB,cAAc,CACnD,EACA,CACEgB,KAAMA,IAAMzE,EAAKS,EAAE,iBAAiB,EACpCqE,KAAMA,IAAAlE,EAAOuE,EAAW,EAAA,EACxBH,SAAUV,CACZ,EACA,CACEG,KAAMA,IAAMzE,EAAKS,EAAE,eAAe,EAClCqE,KAAMA,IAAAlE,EAAOwE,EAAkB,EAAA,EAC/BJ,SAhDoBK,IAAM,CAC5BhC,EAAWiC,EAAmB,CAAEC,MAAO,EAAI,CAAA,CAAC,EACrC5B,GAAA,CA+CP,EACA,CACEc,KAAMA,IAAMzE,EAAKS,EAAE,gBAAgB,EACnCqE,KAAMA,IAAAlE,EAAO4E,EAAO,EAAA,EACpBR,SAhDqBS,IAAM,CACf7F,EAAA,CAACO,EAAQ,CAAA,CAAU,EAAE,CAAC,CAACC,CAAa,IAAM,CACtDiD,EAAWqC,EAAkB,CAAEvF,OAAQC,CAAe,CAAA,CAAC,CAAA,CACxD,EACMuD,GAAA,CA6CP,EACA,CACEc,KAAMA,IAAMzE,EAAKS,EAAE,oBAAoB,EACvCqE,KAAMA,IAAAlE,EAAO+E,EAAQ,EAAA,EACrBX,SA9CyBY,IAAM,CACnBhG,EAAA,CAACO,EAAQ,CAAA,CAAU,EAAE,CAAC,CAACC,CAAa,IAAM,CACtDiD,EAAWwC,EAAsB,CAAE1F,OAAQC,CAAe,CAAA,CAAC,CAAA,CAC5D,EACMuD,GAAA,CA2CP,CAAA,EAKF,OAAA/C,EACGkF,EAAU,CAAA,IAAClC,SAAO,CAAA,OAAE/E,EAAM+E,OAAO,EAAA,IAAA7C,UAAA,CAAA,OAAAH,EAC/BmF,EAAM,CAAA,IACLC,UAAQ,CAAA,OAAA,IAAA,CAAA,MAAAlE,EAAAC,KAAAD,OAAAA,EAAAA,EAAAlB,EAEHC,EAAG,CAACC,KAAM+D,EAAI9D,aACH,IAAA,CAAA,MAAAkF,EAAAC,GAAAA,EAAAC,EAAAF,EAAA1F,WAAA6F,OAAAA,EAAAH,EAGGI,QAAAA,EAASrB,SAAQ,EAAA,EAAAxE,EAAA2F,EAAA,IAESE,EAASvB,KAAM,CAAA,EAAAtE,EAAAyF,EAAA,IACjDI,EAAS5B,OAAM,IAAA,EAAAwB,CAAAA,GAAA,CAEnB,CAAA,CAAA,EAAAnE,CAAAA,IAAA,EAAA,IAAAf,UAAA,CAAAH,MAAAA,CAAAA,EAKN0F,EAAK,CAAA,IAAC3E,MAAI,CAAA,OAAE6B,EAAsB,IAAA,iBAAiB,EAAA,IAAAzC,UAAA,CAAA,OAAAH,EACjDwB,GAAe,CAACU,gBAAAA,CAAAA,CAAgC,CAAA,CAAA,CAAAlC,EAAAA,EAElD0F,EAAK,CAAA,IAAC3E,MAAI,CAAA,OAAE6B,EAAsB,IAAA,cAAc,EAAA,IAAAzC,UAAA,CAAA,OAAAH,EAC9Cb,GAAiB,CAAA,IAACI,QAAM,CAAA,OAAEA,EAAO,CAAC,EAAEsB,kBAAmBkD,CAAAA,CAAkB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAKpF,EAEyBxC,EAAA,CAAA,OAAA,CAAA","x_google_ignoreList":[0]}