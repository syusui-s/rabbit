{"version":3,"file":"Config-rPTn9gvr.js","sources":["../../node_modules/heroicons/24/outline/chevron-down.svg","../../node_modules/heroicons/24/outline/chevron-up.svg","../../node_modules/heroicons/24/outline/eye-slash.svg","../../node_modules/heroicons/24/outline/paint-brush.svg","../../node_modules/heroicons/24/outline/server-stack.svg","../../src/utils/emojipack.ts","../../src/components/modal/Config.tsx"],"sourcesContent":["export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m4.5 15.75 7.5-7.5 7.5 7.5\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.98 8.223A10.477 10.477 0 0 0 1.934 12c1.292 4.338 5.31 7.5 10.066 7.5.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.53 16.122a3 3 0 0 0-5.78 1.128 2.25 2.25 0 0 1-2.4 2.245 4.5 4.5 0 0 0 8.4-2.245c0-.399-.078-.78-.22-1.128m0 0a15.998 15.998 0 0 0 3.388-1.62m-5.043-.025a15.994 15.994 0 0 1 1.622-3.395m3.42 3.42a15.995 15.995 0 0 0 4.764-4.648l3.876-5.814a1.151 1.151 0 0 0-1.597-1.597L14.146 6.32a15.996 15.996 0 0 0-4.649 4.763m3.42 3.42a6.776 6.776 0 0 0-3.42-3.42\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5.25 14.25h13.5m-13.5 0a3 3 0 0 1-3-3m3 3a3 3 0 1 0 0 6h13.5a3 3 0 1 0 0-6m-16.5-3a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3m-19.5 0a4.5 4.5 0 0 1 .9-2.7L5.737 5.1a3.375 3.375 0 0 1 2.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 0 1 .9 2.7m0 0a3 3 0 0 1-3 3m0 3h.008v.008h-.008zm0-6h.008v.008h-.008zm-3 6h.008v.008h-.008zm0-6h.008v.008h-.008z\"/></svg>","/**\n * This is free and unencumbered software released into the public domain.\n *\n * Anyone is free to copy, modify, publish, use, compile, sell, or\n * distribute this software, either in source code form or as a compiled\n * binary, for any purpose, commercial or non-commercial, and by any\n * means.\n *\n * In jurisdictions that recognize copyright laws, the author or authors\n * of this software dedicate any and all copyright interest in the\n * software to the public domain. We make this dedication for the benefit\n * of the public at large and to the detriment of our heirs and\n * successors. We intend this dedication to be an overt act of\n * relinquishment in perpetuity of all present and future rights to this\n * software under copyright law.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * For more information, please refer to <http://unlicense.org/>\n */\nimport uniqBy from 'lodash/uniqBy';\nimport { z } from 'zod';\n\nimport { CustomEmojiConfig } from '@/core/useConfig';\n\nexport const pubkeySchema = z\n  .string()\n  .length(64)\n  .regex(/^[0-9a-f]{64}$/);\n\nexport const shortcodeSchema = z.string().regex(/^\\w+$/);\n\nexport const emojiSchema = z.object({\n  shortcode: shortcodeSchema,\n  url: z.string().url(),\n  keywords: z.optional(z.array(shortcodeSchema)),\n});\n\nexport const emojiPackSchemaV1 = z\n  .object({\n    manifest: z.literal('emojipack_v1'),\n    name: z.string(),\n    emojis: z.array(emojiSchema),\n    description: z.optional(z.string()),\n    author: z.optional(pubkeySchema),\n    publisher: z.optional(pubkeySchema),\n  })\n  .refine(\n    (emojiPack) => {\n      // check uniqueness of shortcodes\n      const uniqEmojis = uniqBy(emojiPack.emojis, (emoji) => emoji.shortcode).length;\n      return uniqEmojis === emojiPack.emojis.length;\n    },\n    { message: 'shortcodes should be unique' },\n  );\n\nexport const simpleEmojiPackSchema = z.record(shortcodeSchema, z.string().url());\n\nexport const allEmojiPackSchema = emojiPackSchemaV1.or(simpleEmojiPackSchema);\n\nexport type Emoji = z.infer<typeof emojiSchema>;\n\nexport type EmojiPackV1 = z.infer<typeof emojiPackSchemaV1>;\n\nexport type SimpleEmojiPack = z.infer<typeof simpleEmojiPackSchema>;\n\nexport type AllEmojiPack = z.infer<typeof allEmojiPackSchema>;\n\nexport const getEmojiPack = async (urlString: string): Promise<AllEmojiPack> => {\n  const url = new URL(urlString);\n  const res = await fetch(url);\n  return allEmojiPackSchema.parseAsync(await res.json());\n};\n\nexport const convertToEmojiConfig = (emojipack: SimpleEmojiPack): CustomEmojiConfig[] =>\n  Object.entries(emojipack).map(([shortcode, url]) => ({ shortcode, url }));\n","import { createSignal, Show, For, type JSX, batch } from 'solid-js';\n\nimport ArrowLeft from 'heroicons/24/outline/arrow-left.svg';\nimport ChevronDown from 'heroicons/24/outline/chevron-down.svg';\nimport ChevronUp from 'heroicons/24/outline/chevron-up.svg';\nimport EyeSlash from 'heroicons/24/outline/eye-slash.svg';\nimport FaceSmile from 'heroicons/24/outline/face-smile.svg';\nimport PaintBrush from 'heroicons/24/outline/paint-brush.svg';\nimport ServerStack from 'heroicons/24/outline/server-stack.svg';\nimport User from 'heroicons/24/outline/user.svg';\nimport XMark from 'heroicons/24/outline/x-mark.svg';\n\nimport BasicModal from '@/components/modal/BasicModal';\nimport UserNameDisplay from '@/components/UserDisplayName';\nimport LazyLoad from '@/components/utils/LazyLoad';\nimport usePopup from '@/components/utils/usePopup';\nimport { colorThemes } from '@/core/colorThemes';\nimport useConfig, { type Config } from '@/core/useConfig';\nimport useModalState from '@/hooks/useModalState';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport usePubkey from '@/nostr/usePubkey';\nimport { simpleEmojiPackSchema, convertToEmojiConfig } from '@/utils/emojipack';\nimport ensureNonNull from '@/utils/ensureNonNull';\n\ntype ConfigProps = {\n  onClose: () => void;\n};\n\nconst BaseUrlRegex = (schemaRegex: string) =>\n  `^(?:${schemaRegex})://[-a-zA-Z0-9.]+(:\\\\d{1,5})?(?:/[-[\\\\]~!$&'()*+.,:;@&=%\\\\w]+|/)*(?:\\\\?[-[\\\\]~!$&'()*+.,/:;%@&=\\\\w?]+)?(?:#[-[\\\\]~!$&'()*+.,/:;%@\\\\w&=?#]+)?$`;\nconst HttpUrlRegex = BaseUrlRegex('https?');\nconst RelayUrlRegex = BaseUrlRegex('wss?');\n\nconst Section = (props: { title: string; initialOpened?: boolean; children: JSX.Element }) => {\n  const [opened, setOpened] = createSignal(props.initialOpened ?? true);\n  const toggleOpened = () => setOpened((current) => !current);\n\n  return (\n    <div class=\"mb-2 rounded border border-border shadow hover:shadow-md\">\n      <h3 class=\"text-lg font-bold\">\n        <button\n          type=\"button\"\n          class=\"flex w-full items-center p-2 text-start\"\n          onClick={() => toggleOpened()}\n        >\n          <span class=\"flex-1 hover:text-fg-secondary\">{props.title}</span>\n          <span class=\"inline-block h-4 w-4 shrink-0 text-fg\">\n            <Show when={opened()} fallback={<ChevronDown />}>\n              <ChevronUp />\n            </Show>\n          </span>\n        </button>\n      </h3>\n      <Show when={opened()}>\n        <div class=\"border-t border-border p-2\">{props.children}</div>\n      </Show>\n    </div>\n  );\n};\n\nconst ToggleButton = (props: {\n  value: boolean;\n  onClick: JSX.EventHandler<HTMLButtonElement, MouseEvent>;\n}) => (\n  <button\n    class=\"flex h-[24px] w-[48px] items-center rounded-full border border-primary/80 px-1\"\n    classList={{\n      'bg-bg-tertiary': !props.value,\n      'justify-start': !props.value,\n      'bg-primary': props.value,\n      'justify-end': props.value,\n    }}\n    area-label={props.value}\n    onClick={(event) => props.onClick(event)}\n  >\n    <span class=\"m-[-3px] inline-block h-5 w-5 rounded-full border bg-primary-fg shadow\" />\n  </button>\n);\n\nconst ProfileSection = () => {\n  const i18n = useTranslation();\n  const pubkey = usePubkey();\n  const { showProfile, showProfileEdit } = useModalState();\n\n  return (\n    <Section title={i18n()('config.profile.profile')}>\n      <div class=\"flex gap-2 py-1\">\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          onClick={() =>\n            ensureNonNull([pubkey()])(([pubkeyNonNull]) => {\n              showProfile(pubkeyNonNull);\n            })\n          }\n        >\n          {i18n()('config.profile.openProfile')}\n        </button>\n        <button\n          class=\"rounded border border-primary px-4 py-1 font-bold text-primary\"\n          onClick={() => showProfileEdit()}\n        >\n          {i18n()('config.profile.editProfile')}\n        </button>\n      </div>\n    </Section>\n  );\n};\n\nconst RelayConfig = () => {\n  const i18n = useTranslation();\n  const { config, addRelay, removeRelay } = useConfig();\n\n  const [relayUrlInput, setRelayUrlInput] = createSignal<string>('');\n\n  const handleClickAddRelay: JSX.EventHandler<HTMLFormElement, Event> = (ev) => {\n    ev.preventDefault();\n    if (relayUrlInput().length === 0) return;\n    addRelay(relayUrlInput());\n    setRelayUrlInput('');\n  };\n\n  const importFromNIP07 = async () => {\n    if (window.nostr == null) return;\n\n    const importedRelays = Object.entries((await window.nostr?.getRelays?.()) ?? []);\n    const relayUrls = importedRelays.map(([relayUrl]) => relayUrl).join('\\n');\n\n    if (importedRelays.length === 0) {\n      window.alert(i18n()('config.relays.notConfigured'));\n      return;\n    }\n\n    if (!window.confirm(`${i18n()('config.relays.askImport')}\\n\\n${relayUrls}`)) {\n      return;\n    }\n\n    const lastCount = config().relayUrls.length;\n    batch(() => {\n      importedRelays.forEach(([relayUrl]) => {\n        addRelay(relayUrl);\n      });\n    });\n    const currentCount = config().relayUrls.length;\n    const importedCount = currentCount - lastCount;\n    window.alert(i18n()('config.relays.imported', { count: importedCount }));\n  };\n\n  return (\n    <>\n      <Section title={i18n()('config.relays.relays')}>\n        <p class=\"py-1\">\n          {i18n()('config.relays.numOfRelays', { count: config().relayUrls.length })}\n        </p>\n        <form class=\"flex gap-2\" onSubmit={handleClickAddRelay}>\n          <input\n            class=\"flex-1 rounded-md border border-border bg-bg ring-border placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"relayUrl\"\n            placeholder=\"wss://...\"\n            value={relayUrlInput()}\n            pattern={RelayUrlRegex}\n            onChange={(ev) => setRelayUrlInput(ev.currentTarget.value)}\n          />\n          <button type=\"submit\" class=\"rounded bg-primary p-2 font-bold text-primary-fg\">\n            {i18n()('config.relays.addRelay')}\n          </button>\n        </form>\n        <ul class=\"pt-2\">\n          <For each={config().relayUrls}>\n            {(relayUrl: string) => (\n              <li class=\"flex items-center border-t border-border pr-4\">\n                <div class=\"flex-1 truncate\">{relayUrl}</div>\n                <button class=\"h-3 w-3 shrink-0\" onClick={() => removeRelay(relayUrl)}>\n                  <XMark />\n                </button>\n              </li>\n            )}\n          </For>\n        </ul>\n      </Section>\n      <Section title={i18n()('config.relays.importRelays')}>\n        <button\n          type=\"button\"\n          class=\"rounded bg-primary p-2 font-bold text-primary-fg\"\n          onClick={() => {\n            importFromNIP07().catch((err) => {\n              console.error('failed to import relays', err);\n              window.alert(i18n()('config.relays.failedToImport'));\n            });\n          }}\n        >\n          {i18n()('config.relays.importFromExtension')}\n        </button>\n      </Section>\n    </>\n  );\n};\n\nconst ColorThemeConfig = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const isCurrentlyUsing = (id: string) => {\n    const colorThemeConfig = config().colorTheme;\n    if (colorThemeConfig.type === 'specific') {\n      return colorThemeConfig.id === id;\n    }\n    return false;\n  };\n\n  const updateColorTheme = (id: string) => {\n    setConfig((current) => ({ ...current, colorTheme: { type: 'specific', id } }));\n  };\n\n  return (\n    <Section title={i18n()('config.display.colorTheme')}>\n      <div class=\"scrollbar flex flex-col overflow-y-auto rounded-md border border-border\">\n        <For each={Object.values(colorThemes)}>\n          {(colorTheme) => (\n            <button\n              type=\"button\"\n              class=\"border-t border-border px-2 py-1 text-left first:border-none\"\n              classList={{\n                'bg-primary': isCurrentlyUsing(colorTheme.id),\n                'text-primary-fg': isCurrentlyUsing(colorTheme.id),\n                'text-fg': !isCurrentlyUsing(colorTheme.id),\n              }}\n              onClick={() => updateColorTheme(colorTheme.id)}\n            >\n              {colorTheme.name}\n            </button>\n          )}\n        </For>\n      </div>\n    </Section>\n  );\n};\n\nconst DateFormatConfig = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const dateFormats: {\n    id: Config['dateFormat'];\n    name: string;\n    example: string;\n  }[] = [\n    {\n      id: 'relative',\n      name: i18n()('config.display.relativeTimeNotation'),\n      example: i18n()('config.display.relativeTimeNotationExample'),\n    },\n    {\n      id: 'absolute-short',\n      name: i18n()('config.display.absoluteTimeNotationShort'),\n      example: i18n()('config.display.absoluteTimeNotationShortExample'),\n    },\n    {\n      id: 'absolute-long',\n      name: i18n()('config.display.absoluteTimeNotationLong'),\n      example: i18n()('config.display.absoluteTimeNotationLongExample'),\n    },\n  ];\n\n  const updateDateFormat = (dateFormat: Config['dateFormat']) => {\n    setConfig((current) => ({ ...current, dateFormat }));\n  };\n\n  return (\n    <Section title={i18n()('config.display.timeNotation')}>\n      <div class=\"flex flex-col justify-evenly gap-2 sm:flex-row\">\n        <For each={dateFormats}>\n          {({ id, name, example }) => (\n            <div class=\"flex flex-1 flex-row items-center gap-1 sm:flex-col\">\n              <button\n                type=\"button\"\n                class=\"w-48 rounded border border-primary p-2 font-bold sm:w-full\"\n                classList={{\n                  'bg-primary': config().dateFormat === id,\n                  'text-primary-fg': config().dateFormat === id,\n                  'bg-bg': config().dateFormat !== id,\n                  'text-primary': config().dateFormat !== id,\n                }}\n                onClick={() => updateDateFormat(id)}\n              >\n                {name}\n              </button>\n              <div class=\"text-xs\">{example}</div>\n            </div>\n          )}\n        </For>\n      </div>\n    </Section>\n  );\n};\n\nconst ReactionConfig = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const toggleUseEmojiReaction = () => {\n    setConfig((current) => ({\n      ...current,\n      useEmojiReaction: !(current.useEmojiReaction ?? false),\n    }));\n  };\n\n  const toggleShowEmojiReaction = () => {\n    setConfig((current) => ({\n      ...current,\n      showEmojiReaction: !(current.showEmojiReaction ?? false),\n    }));\n  };\n\n  return (\n    <Section title={i18n()('config.display.reaction')}>\n      <div class=\"flex flex-col justify-evenly gap-2\">\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n()('config.display.enableEmojiReaction')}</div>\n          <ToggleButton\n            value={config().useEmojiReaction}\n            onClick={() => toggleUseEmojiReaction()}\n          />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n()('config.display.showEmojiReaction')}</div>\n          <ToggleButton\n            value={config().showEmojiReaction}\n            onClick={() => toggleShowEmojiReaction()}\n          />\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nconst EmojiConfig = () => {\n  const i18n = useTranslation();\n  const { config, saveEmoji, removeEmoji } = useConfig();\n\n  const [shortcodeInput, setShortcodeInput] = createSignal('');\n  const [urlInput, setUrlInput] = createSignal('');\n\n  const handleClickSaveEmoji: JSX.EventHandler<HTMLFormElement, SubmitEvent> = (ev) => {\n    ev.preventDefault();\n    if (shortcodeInput().length === 0 || urlInput().length === 0) return;\n    saveEmoji({ shortcode: shortcodeInput(), url: urlInput() });\n    setShortcodeInput('');\n    setUrlInput('');\n  };\n\n  return (\n    <Section title={i18n()('config.customEmoji.customEmoji')}>\n      <form class=\"flex flex-col gap-2\" onSubmit={handleClickSaveEmoji}>\n        <label class=\"flex flex-1 items-center gap-1\">\n          <div class=\"w-9\">{i18n()('config.customEmoji.shortcode')}</div>\n          <input\n            class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"shortcode\"\n            placeholder=\"smiley\"\n            value={shortcodeInput()}\n            pattern=\"^\\\\w+$\"\n            required\n            onChange={(ev) => setShortcodeInput(ev.currentTarget.value)}\n          />\n        </label>\n        <label class=\"flex flex-1 items-center gap-1\">\n          <div class=\"w-9\">{i18n()('config.customEmoji.url')}</div>\n          <input\n            class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"url\"\n            value={urlInput()}\n            placeholder=\"https://example.com/smiley.png\"\n            pattern={HttpUrlRegex}\n            required\n            onChange={(ev) => setUrlInput(ev.currentTarget.value)}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          class=\"w-24 self-end rounded bg-primary p-2 font-bold text-primary-fg\"\n        >\n          {i18n()('config.customEmoji.addEmoji')}\n        </button>\n      </form>\n      <ul class=\"mt-4 flex max-h-[40vh] min-h-64 flex-wrap overflow-y-auto border-t border-border\">\n        <For each={Object.values(config().customEmojis)}>\n          {({ shortcode, url }) => {\n            const popup = usePopup(() => ({\n              popup: (\n                <div class=\"flex min-w-24 flex-col items-center rounded border border-border bg-bg shadow\">\n                  <div class=\"flex items-center p-1\">\n                    <img class=\"h-20 max-w-20 object-contain\" src={url} alt={shortcode} />\n                  </div>\n                  <div class=\"p-1 text-center text-sm\">{shortcode}</div>\n                  <div class=\"w-full border-t border-border\">\n                    <button\n                      type=\"button\"\n                      class=\"w-full px-2 py-1 text-danger\"\n                      onClick={() => removeEmoji(shortcode)}\n                    >\n                      {i18n()('config.customEmoji.removeEmoji')}\n                    </button>\n                  </div>\n                </div>\n              ),\n            }));\n\n            return (\n              <li ref={popup.targetRef} class=\"min-w-0 basis-1/2 sm:basis-1/4\">\n                <button\n                  type=\"button\"\n                  class=\"flex w-full flex-col items-center gap-1 rounded p-2 hover:bg-bg-tertiary/20 hover:shadow\"\n                  onClick={() => popup.open()}\n                >\n                  <LazyLoad fallback={<div class=\"h-8 w-8\" />}>\n                    {() => (\n                      <div class=\"flex h-8 max-w-8 items-center\">\n                        <img class=\"object-contain\" src={url} alt={shortcode} />\n                      </div>\n                    )}\n                  </LazyLoad>\n                  <div class=\"w-full truncate text-xs text-fg-secondary\">{shortcode}</div>\n                </button>\n                {popup.popup()}\n              </li>\n            );\n          }}\n        </For>\n      </ul>\n    </Section>\n  );\n};\n\nconst EmojiImport = () => {\n  const i18n = useTranslation();\n  const { saveEmojis } = useConfig();\n\n  const [jsonInput, setJSONInput] = createSignal('');\n\n  const handleClickSaveEmoji: JSX.EventHandler<HTMLFormElement, SubmitEvent> = (ev) => {\n    ev.preventDefault();\n    if (jsonInput().length === 0) return;\n\n    try {\n      const data = simpleEmojiPackSchema.parse(JSON.parse(jsonInput()));\n      const emojis = convertToEmojiConfig(data);\n      saveEmojis(emojis);\n      setJSONInput('');\n    } catch (err) {\n      const message = err instanceof Error ? `:${err.message}` : '';\n      window.alert(`JSONの読み込みに失敗しました${message}`);\n    }\n  };\n\n  return (\n    <Section title={i18n()('config.customEmoji.emojiImport')}>\n      <p>{i18n()('config.customEmoji.emojiImportDescription')}</p>\n      <form class=\"flex flex-col gap-2\" onSubmit={handleClickSaveEmoji}>\n        <textarea\n          class=\"flex-1 rounded-md border-border bg-bg placeholder:text-fg-secondary focus:border-border focus:ring-primary\"\n          name=\"json\"\n          value={jsonInput()}\n          placeholder='{ \"smiley\": \"https://example.com/smiley.png\" }'\n          onChange={(ev) => setJSONInput(ev.currentTarget.value)}\n        />\n        <button\n          type=\"submit\"\n          class=\"w-24 self-end rounded bg-primary p-2 font-bold text-primary-fg\"\n        >\n          {i18n()('config.customEmoji.importEmoji')}\n        </button>\n      </form>\n    </Section>\n  );\n};\n\nconst MuteConfig = () => {\n  const i18n = useTranslation();\n  const { config, removeMutedPubkey, addMutedKeyword, removeMutedKeyword } = useConfig();\n\n  const [keywordInput, setKeywordInput] = createSignal('');\n\n  const handleClickAddKeyword: JSX.EventHandler<HTMLFormElement, Event> = (ev) => {\n    ev.preventDefault();\n    if (keywordInput().length === 0) return;\n    addMutedKeyword(keywordInput());\n    setKeywordInput('');\n  };\n\n  return (\n    <>\n      <Section title={i18n()('config.mute.mutedUsers')} initialOpened={false}>\n        <ul class=\"flex max-h-[50vh] min-h-64 flex-col overflow-y-auto\">\n          <For each={config().mutedPubkeys}>\n            {(pubkey) => (\n              <li class=\"flex items-center border-b border-border pr-4\">\n                <div class=\"flex-1 truncate\">\n                  <LazyLoad>{() => <UserNameDisplay pubkey={pubkey} />}</LazyLoad>\n                </div>\n                <button class=\"h-3 w-3 shrink-0\" onClick={() => removeMutedPubkey(pubkey)}>\n                  <XMark />\n                </button>\n              </li>\n            )}\n          </For>\n        </ul>\n      </Section>\n      <Section title={i18n()('config.mute.mutedKeywords')} initialOpened={false}>\n        <form class=\"flex gap-2\" onSubmit={handleClickAddKeyword}>\n          <input\n            class=\"flex-1 rounded-md border border-border bg-bg ring-border focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"keyword\"\n            value={keywordInput()}\n            onChange={(ev) => setKeywordInput(ev.currentTarget.value)}\n          />\n          <button type=\"submit\" class=\"rounded bg-primary p-2 font-bold text-primary-fg\">\n            {i18n()('config.mute.add')}\n          </button>\n        </form>\n        <ul class=\"mt-2 flex max-h-[50vh] min-h-64 flex-col overflow-y-auto border-t border-border\">\n          <For each={config().mutedKeywords}>\n            {(keyword) => (\n              <li class=\"flex items-center border-b border-border pr-4\">\n                <div class=\"flex-1 truncate\">{keyword}</div>\n                <button class=\"h-3 w-3 shrink-0\" onClick={() => removeMutedKeyword(keyword)}>\n                  <XMark />\n                </button>\n              </li>\n            )}\n          </For>\n        </ul>\n      </Section>\n    </>\n  );\n};\n\nconst EmbeddingConfig = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const toggle = (key: keyof Config['embedding']) => {\n    setConfig((current) => ({\n      ...current,\n      embedding: {\n        ...current.embedding,\n        [key]: !current.embedding[key],\n      },\n    }));\n  };\n\n  return (\n    <Section title={i18n()('config.display.embedding')}>\n      <p>{i18n()('config.display.embeddingDescription')}</p>\n      <div class=\"flex flex-col justify-evenly gap-2\">\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">YouTube</div>\n          <ToggleButton value={config().embedding.youtube} onClick={() => toggle('youtube')} />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">X (Twitter)</div>\n          <ToggleButton value={config().embedding.twitter} onClick={() => toggle('twitter')} />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">OGP</div>\n          <ToggleButton value={config().embedding.ogp} onClick={() => toggle('ogp')} />\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nconst OtherConfig = () => {\n  const i18n = useTranslation();\n  const { config, setConfig } = useConfig();\n\n  const toggleKeepOpenPostForm = () => {\n    setConfig((current) => ({\n      ...current,\n      keepOpenPostForm: !(current.keepOpenPostForm ?? false),\n    }));\n  };\n\n  const toggleShowMedia = () => {\n    setConfig((current) => ({\n      ...current,\n      showMedia: !(current.showMedia ?? true),\n    }));\n  };\n\n  const toggleHideCount = () => {\n    setConfig((current) => ({\n      ...current,\n      hideCount: !(current.hideCount ?? false),\n    }));\n  };\n\n  return (\n    <Section title={i18n()('config.display.others')}>\n      <div class=\"flex flex-col justify-evenly gap-2\">\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n()('config.display.keepOpenPostForm')}</div>\n          <ToggleButton\n            value={config().keepOpenPostForm}\n            onClick={() => toggleKeepOpenPostForm()}\n          />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n()('config.display.showMediaByDefault')}</div>\n          <ToggleButton value={config().showMedia} onClick={() => toggleShowMedia()} />\n        </div>\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">{i18n()('config.display.hideNumbers')}</div>\n          <ToggleButton value={config().hideCount} onClick={() => toggleHideCount()} />\n        </div>\n        {/*\n        <div class=\"flex w-full\">\n          <div class=\"flex-1\">リアクションのデフォルト</div>\n          <input\n            type=\"text\"\n            maxlength=\"1\"\n            // onBlur={handleChangeReaction}\n          />\n        </div>\n        */}\n      </div>\n    </Section>\n  );\n};\n\nconst ConfigUI = (props: ConfigProps) => {\n  const i18n = useTranslation();\n  const [menuIndex, setMenuIndex] = createSignal<number | null>(null);\n  const { config, setConfig } = useConfig();\n\n  const menu = [\n    {\n      name: () => i18n()('config.profile.profile'),\n      icon: () => <User />,\n      render: () => <ProfileSection />,\n    },\n    {\n      name: () => i18n()('config.relays.relays'),\n      icon: () => <ServerStack />,\n      render: () => <RelayConfig />,\n    },\n    {\n      name: () => i18n()('config.display.display'),\n      icon: () => <PaintBrush />,\n      render: () => (\n        <>\n          <ColorThemeConfig />\n          <DateFormatConfig />\n          <ReactionConfig />\n          <EmbeddingConfig />\n          <OtherConfig />\n        </>\n      ),\n    },\n    {\n      name: () => i18n()('config.customEmoji.customEmoji'),\n      icon: () => <FaceSmile />,\n      render: () => (\n        <>\n          <EmojiConfig />\n          <EmojiImport />\n        </>\n      ),\n    },\n    {\n      name: () => i18n()('config.mute.mute'),\n      icon: () => <EyeSlash />,\n      render: () => <MuteConfig />,\n    },\n  ];\n\n  const getMenuItem = () => {\n    const index = menuIndex();\n    if (index == null) return null;\n    return menu[index];\n  };\n\n  return (\n    <BasicModal onClose={props.onClose}>\n      <div class=\"p-4\">\n        <Show\n          when={getMenuItem()}\n          fallback={\n            <>\n              <h2 class=\"flex-1 text-center text-lg font-bold\">{i18n()('config.config')}</h2>\n              <div class=\"flex gap-1\">\n                <Show when={window.location.host === 'syusui-s.github.io'}>\n                  <button\n                    type=\"button\"\n                    class=\"rounded bg-primary p-2 text-primary-fg\"\n                    onClick={() => {\n                      navigator.clipboard\n                        .writeText(JSON.stringify(config(), null, 2))\n                        .then(() => window.alert('OK'))\n                        .catch(() => window.alert('failed to copy'));\n                    }}\n                  >\n                    {i18n()('config.copyToClipboard')}\n                  </button>\n                </Show>\n                <Show when={window.location.host === 'rabbit.syusui.net'}>\n                  <button\n                    type=\"button\"\n                    class=\"rounded bg-primary p-2 text-primary-fg\"\n                    onClick={() => {\n                      const text = window.prompt('Paste config') ?? '';\n                      if (text.length === 0) {\n                        window.alert('empty');\n                        return;\n                      }\n                      const json = JSON.parse(text) as ReturnType<typeof config>;\n                      if (window.confirm(`import?:\\n${text}`)) {\n                        setConfig(json);\n                      }\n                    }}\n                  >\n                    {i18n()('config.importFromClipboard')}\n                  </button>\n                </Show>\n              </div>\n              <ul class=\"flex flex-col\">\n                <For each={menu}>\n                  {(menuItem, i) => (\n                    <li class=\"w-full\">\n                      <button\n                        class=\"flex w-full gap-2 py-3 hover:text-primary\"\n                        onClick={() => setMenuIndex(i)}\n                      >\n                        <span class=\"inline-block h-6 w-6\">{menuItem.icon()}</span>\n                        {menuItem.name()}\n                      </button>\n                    </li>\n                  )}\n                </For>\n              </ul>\n            </>\n          }\n          keyed\n        >\n          {(menuItem) => (\n            <div class=\"flex flex-col\">\n              <div>\n                <button\n                  class=\"pr-4 text-fg hover:text-fg-secondary\"\n                  onClick={() => setMenuIndex(null)}\n                >\n                  <span class=\"inline-block h-6 w-6\">\n                    <ArrowLeft />\n                  </span>\n                </button>\n              </div>\n              <div class=\"w-full flex-1 pt-4\">{menuItem.render()}</div>\n            </div>\n          )}\n        </Show>\n      </div>\n    </BasicModal>\n  );\n};\n\nexport default ConfigUI;\n"],"names":["ChevronDown","props","_el$","_tmpl$","_$spread","ChevronUp","EyeSlash","PaintBrush","ServerStack","pubkeySchema","z","shortcodeSchema","emojiSchema","emojiPackSchemaV1","emojiPack","uniqBy","emoji","simpleEmojiPackSchema","convertToEmojiConfig","emojipack","shortcode","url","BaseUrlRegex","schemaRegex","HttpUrlRegex","RelayUrlRegex","Section","opened","setOpened","createSignal","initialOpened","toggleOpened","current","_tmpl$2","_el$2","firstChild","_el$3","_el$4","_el$5","nextSibling","$$click","_$insert","title","_$createComponent","Show","when","fallback","children","_el$6","ToggleButton","_el$7","_tmpl$3","event","onClick","_$effect","_p$","_v$","value","_v$2","_v$3","_v$4","_v$5","classList","toggle","_$setAttribute","undefined","ProfileSection","i18n","useTranslation","pubkey","usePubkey","showProfile","showProfileEdit","useModalState","_el$8","_tmpl$4","_el$9","_el$10","ensureNonNull","pubkeyNonNull","RelayConfig","config","addRelay","removeRelay","useConfig","relayUrlInput","setRelayUrlInput","handleClickAddRelay","ev","preventDefault","length","importFromNIP07","window","nostr","importedRelays","Object","entries","getRelays","relayUrls","map","relayUrl","join","alert","confirm","lastCount","batch","forEach","importedCount","count","_el$11","_tmpl$5","_el$12","_tmpl$6","_el$13","_el$14","addEventListener","currentTarget","_el$15","_tmpl$7","For","each","_el$17","_tmpl$9","_el$18","_el$19","XMark","_el$16","_tmpl$8","catch","err","console","error","ColorThemeConfig","setConfig","isCurrentlyUsing","id","colorThemeConfig","colorTheme","type","updateColorTheme","_el$20","_tmpl$10","values","colorThemes","_el$21","_tmpl$11","name","_v$6","_v$7","_v$8","DateFormatConfig","dateFormats","example","updateDateFormat","dateFormat","_el$22","_tmpl$12","_el$23","_tmpl$13","_el$24","_el$25","_v$9","_v$10","_v$11","_v$12","ReactionConfig","toggleUseEmojiReaction","useEmojiReaction","toggleShowEmojiReaction","showEmojiReaction","_el$26","_tmpl$14","_el$27","_el$28","_el$29","_el$30","EmojiConfig","saveEmoji","removeEmoji","shortcodeInput","setShortcodeInput","urlInput","setUrlInput","handleClickSaveEmoji","_el$31","_tmpl$15","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","_el$39","_tmpl$16","customEmojis","popup","usePopup","_el$40","_tmpl$17","_el$41","_el$42","_el$43","_el$44","_el$45","_el$46","_tmpl$18","_el$47","_el$48","_ref$","targetRef","_$use","open","LazyLoad","_tmpl$19","_el$50","_tmpl$20","_el$51","EmojiImport","saveEmojis","jsonInput","setJSONInput","data","parse","JSON","emojis","message","Error","_el$52","_tmpl$21","_el$53","_tmpl$22","_el$54","_el$55","MuteConfig","removeMutedPubkey","addMutedKeyword","removeMutedKeyword","keywordInput","setKeywordInput","handleClickAddKeyword","_el$56","_tmpl$23","mutedPubkeys","_el$61","_tmpl$26","_el$62","_el$63","UserNameDisplay","_el$57","_tmpl$24","_el$58","_el$59","_el$60","_tmpl$25","mutedKeywords","keyword","_el$64","_el$65","_el$66","EmbeddingConfig","key","embedding","_el$67","_el$68","_tmpl$27","_el$69","_el$71","_el$73","youtube","twitter","ogp","OtherConfig","toggleKeepOpenPostForm","keepOpenPostForm","toggleShowMedia","showMedia","toggleHideCount","hideCount","_el$75","_tmpl$28","_el$76","_el$77","_el$78","_el$79","_el$80","_el$81","ConfigUI","menuIndex","setMenuIndex","menu","icon","User","render","FaceSmile","getMenuItem","index","BasicModal","onClose","_el$82","_tmpl$29","_el$83","_tmpl$30","_el$84","_tmpl$32","location","host","_el$85","_tmpl$31","navigator","clipboard","writeText","stringify","then","_el$86","text","prompt","json","_el$87","_tmpl$33","menuItem","i","_el$88","_tmpl$34","_el$89","_el$90","keyed","_el$91","_tmpl$35","_el$92","_el$93","_el$94","_el$95","ArrowLeft","_$delegateEvents"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}