{"version":3,"mappings":"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","names":["EllipsisVertical","props","_el$","_tmpl$","_$spread","BasicColumnHeader","isSettingsOpened","setIsSettingOpened","createSignal","toggleSettingsOpened","current","_tmpl$2","_el$2","firstChild","_el$3","_el$4","_el$6","nextSibling","_el$7","$$click","onClickHeader","_$createComponent","Show","when","icon","keyed","children","_el$8","_tmpl$3","_$insert","fallback","_el$9","name","_el$5","settings","_$delegateEvents","relatedEvents","event","ids","id","rootId","rootEvent","push","replyId","replyingToEvent","uniq","RepliesDisplay","config","useConfig","textNote","events","useSubscription","relayUrls","filters","kinds","limit","Timeline","reverse","TimelineContentDisplay","Switch","Match","timelineContent","type","replies","Column","columnDivRef","timelineState","useTimelineState","i18n","useTranslation","width","useHandleCommand","commandType","handler","command","columnIndex","scrollIntoView","behavior","inline","lastColumn","timelineEl","setTimelineEl","createEffect","operator","scrollToTop","scrollTo","top","columnOperatorRef","TimelineContext","Provider","value","_ref$","_$use","content","header","timeline","_tmpl$4","clearTimeline","ArrowLeft","t","_tmpl$5","_$p","_$classList","ChevronLeft","Trash","ColumnSettingsSection","title","ColumnSettings","saveColumn","removeColumn","moveColumn","request","useRequestCommand","setColumnWidth","column","move","index","catch","console","error","err","_el$10","_el$11","_el$12","_el$13","For","each","_el$14","_$effect","_p$","_v$5","_v$6","_v$7","_v$8","classList","toggle","undefined","renderOtherSettings","render","ChevronRight","_v$","_v$2","_v$3","_v$4","_$setAttribute","memo","setMemo","createRoot","updateMemo","encrypted","decrypted","decrypting","setDecrypting","isDecrypting","untrack","useDecrypt","propsProvider","pubkey","usePubkey","setDecrypted","memoizedValue","p","updateDecrypting","decrypt","result","batch","Bookmark","bookmark","createMemo","genericEvent","length","bookmarkedEventIdsPrivate","json","log","parseTags","taggedEventIds","warn","bookmarkedEventIds","ColumnItem","EventDisplayById","eventId","ensureKinds","Kind","queryKeyUseParameterizedReplaceableEvent","useParameterizedReplaceableEvent","queryClient","useQueryClient","genQueryKey","query","createQuery","queryKey","signal","currentProps","kind","author","identifier","task","BatchedEventsTask","promise","latest","pickLatestEvent","registerTask","timeout","BookmarkColumn","columnOperator","setColumnOperator","BookmarkIcon","onClose","ev","FollowingColumn","followingPubkeys","useFollowings","loadMore","useLoadMore","duration","onLoad","eose","authors","debugId","since","until","eoseLimit","continuous","onEOSE","clientEventFilter","contentFilter","applyContentFilter","setEvents","onMount","onCleanup","Home","LoadMore","ColumnInfo","showProfile","useModalState","otherActionsPopup","useContextMenu","menu","otherActionMenuItems","image","url","description","authorPubkey","UserDisplayName","open","targetRef","_$memo","popup","useFollowSet","Kind.Followsets","decryptedContent","ensureNonNull","decryptedTags","decryptedJson","tags","NostrSetTags","followSet","NostrSet","FollowSetInfo","naddr","naddrEncode","Followsets","onSelect","clipboard","writeText","window","alert","pubkeys","columnName","Users","AtSymbol","Bolt","ReactionDisplay","formatDate","useFormatDate","shouldMuteEvent","reaction","lastTaggedEventId","profile","useProfile","reactedEvent","reactedEventQuery","useEvent","eventIdNonNull","isRemoved","isSuccess","reactionTypes","toReactionTypes","emojiTypes","reactionTypesToEmojiTypes","emojiPopup","useEmojiPopup","emoji","emojiRef","ReactionEmojiDisplay","picture","thumbnailUrl","createdAtAsDate","EventDisplay","ZapReceipt","lazy","__vitePreload","Notification","TextNote","Reaction","Repost","NotificationTypeKindsMap","Replies","Zap","NotificationSettingsSection","notificationFilterOptions","notificationType","ArrowPathRoundedSquare","HeartSolid","currentNotificationTypes","notificationTypes","NotificationTypes","isNotificationTypeSelected","includes","toggleColumnType","splice","indexOf","NotificationColumn","flatMap","notifications","Bell","PostsColumn","User","ReactionsColumn","reactions","Heart","RelaysColumn","GlobeAlt","SearchColumnHeader","setQuery","updateQuery","handleBlur","handleChange","currentTarget","handleSubmit","preventDefault","MagnifyingGlass","addEventListener","SearchColumn","relaysForSearching","search","findIndex","tagName","Columns","columns","columnType","followingColumn","notificationColumn","postsColumn","reactionsColumn","FollowSetColumn","followSetColumn","bookmarkColumn","defaultShortcut","createShortcutsMap","shortcuts","map","shortcut","useShortcutKeys","onShortcut","shortcutsMap","handleKeydown","throttle","useMountShortcutKeys","pool","usePool","initializeColumns","Promise","allSettled","relayUrl","relay","ensureRelay","onnotice","msg","onclose","onError","SideBar","GlobalModal"],"ignoreList":[0,4,5,15,16],"sources":["../../node_modules/heroicons/24/outline/ellipsis-vertical.svg","../../src/components/column/BasicColumnHeader.tsx","../../src/components/timeline/TimelineContentDisplay.tsx","../../src/components/column/Column.tsx","../../node_modules/heroicons/24/outline/chevron-left.svg","../../node_modules/heroicons/24/outline/trash.svg","../../src/components/column/ColumnSettings.tsx","../../src/nostr/useDecrypt.ts","../../src/components/timeline/Bookmark.tsx","../../src/nostr/useParameterizedReplaceableEvent.ts","../../src/components/column/BookmarkColumn.tsx","../../src/components/column/FollowingColumn.tsx","../../src/components/column/ColumnInfo.tsx","../../src/nostr/useFollowSet.ts","../../src/components/column/FollowSetColumn.tsx","../../node_modules/heroicons/24/outline/at-symbol.svg","../../node_modules/heroicons/24/solid/bolt.svg","../../src/components/event/Reaction.tsx","../../src/components/timeline/Notification.tsx","../../src/components/column/NotificationColumn.tsx","../../src/components/column/PostsColumn.tsx","../../src/components/column/ReactionsColumn.tsx","../../src/components/column/RelaysColumn.tsx","../../src/components/column/SearchColumn.tsx","../../src/components/column/Columns.tsx","../../src/hooks/useShortcutKeys.ts","../../src/pages/Home.tsx"],"sourcesContent":["export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5m0 6a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5m0 6a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5\"/></svg>","import { type Component, type JSX, Show, createSignal } from 'solid-js';\n\nimport EllipsisVertical from 'heroicons/24/outline/ellipsis-vertical.svg';\n\nexport type BasicColumnHeaderProps = {\n  name: string;\n  icon?: JSX.Element;\n  settings: () => JSX.Element;\n  onClose?: () => void;\n  onClickHeader?: () => void;\n};\n\nconst BasicColumnHeader: Component<BasicColumnHeaderProps> = (props) => {\n  const [isSettingsOpened, setIsSettingOpened] = createSignal(false);\n\n  const toggleSettingsOpened = () => setIsSettingOpened((current) => !current);\n\n  return (\n    <div class=\"flex flex-col\">\n      <div class=\"flex h-8 items-center gap-1\">\n        <h2 class=\"min-w-0 flex-1\">\n          <button\n            type=\"button\"\n            class=\"flex w-full select-text items-center gap-1 ps-2\"\n            onClick={() => props.onClickHeader?.()}\n          >\n            <Show when={props.icon} keyed>\n              {(icon) => <span class=\"inline-block size-4 shrink-0 text-fg-secondary\">{icon}</span>}\n            </Show>\n            <Show when={props.onClickHeader} fallback={<span class=\"truncate\">{props.name}</span>}>\n              <span class=\"truncate\">{props.name}</span>\n            </Show>\n          </button>\n        </h2>\n        <button class=\"flex h-full place-items-center px-2\" onClick={() => toggleSettingsOpened()}>\n          <span class=\"inline-block size-4\">\n            <EllipsisVertical />\n          </span>\n        </button>\n      </div>\n      <Show when={isSettingsOpened()}>{props.settings()}</Show>\n    </div>\n  );\n};\n\nexport default BasicColumnHeader;\n","import { Switch, Match, type Component } from 'solid-js';\n\nimport uniq from 'lodash/uniq';\nimport { type Filter } from 'nostr-tools/filter';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport Timeline from '@/components/timeline/Timeline';\nimport { type TimelineContent } from '@/components/timeline/TimelineContext';\nimport useConfig from '@/core/useConfig';\nimport { textNote } from '@/nostr/event';\nimport useSubscription from '@/nostr/useSubscription';\n\nimport type TextNote from '@/nostr/event/TextNote';\n\nconst relatedEvents = (event: TextNote) => {\n  const ids = [event.id];\n\n  const rootId = event.rootEvent()?.id;\n  if (rootId != null) ids.push(rootId);\n\n  const replyId = event.replyingToEvent()?.id;\n  if (replyId != null) ids.push(replyId);\n\n  return uniq(ids);\n};\n\nconst RepliesDisplay: Component<{ event: NostrEvent }> = (props) => {\n  const { config } = useConfig();\n\n  const event = () => textNote(props.event);\n\n  const { events } = useSubscription(() => ({\n    relayUrls: config().relayUrls,\n    filters: [\n      { kinds: [1], ids: relatedEvents(event()), limit: 25 },\n      { kinds: [1], '#e': [props.event.id], limit: 25 } as Filter,\n    ],\n    limit: 200,\n  }));\n\n  return <Timeline events={[...events()].reverse()} />;\n};\n\nconst TimelineContentDisplay: Component<{ timelineContent: TimelineContent }> = (props) => (\n  <Switch>\n    <Match when={props.timelineContent.type === 'Replies' && props.timelineContent} keyed>\n      {(replies) => <RepliesDisplay event={replies.event} />}\n    </Match>\n  </Switch>\n);\n\nexport default TimelineContentDisplay;\n","import { Show, type JSX, type Component, createSignal, createEffect } from 'solid-js';\n\nimport ArrowLeft from 'heroicons/24/outline/arrow-left.svg';\n\nimport TimelineContentDisplay from '@/components/timeline/TimelineContentDisplay';\nimport { TimelineContext, useTimelineState } from '@/components/timeline/TimelineContext';\nimport { type ColumnWidth } from '@/core/column';\nimport { useHandleCommand } from '@/hooks/useCommandBus';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nexport type ColumnProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  width: ColumnWidth;\n  header: JSX.Element;\n  children: JSX.Element;\n  columnOperatorRef?: (el: ColumnOperator) => void;\n};\n\nexport interface ColumnOperator {\n  scrollToTop(): void;\n}\n\nconst Column: Component<ColumnProps> = (props) => {\n  let columnDivRef: HTMLDivElement | undefined;\n\n  const timelineState = useTimelineState();\n  const i18n = useTranslation();\n\n  const width = () => props.width ?? 'medium';\n\n  useHandleCommand(() => ({\n    commandType: 'moveToColumn',\n    handler: (command) => {\n      if (command.command === 'moveToColumn' && command.columnIndex === props.columnIndex) {\n        columnDivRef?.scrollIntoView({ behavior: 'smooth', inline: 'center' });\n      }\n    },\n  }));\n\n  useHandleCommand(() => ({\n    commandType: 'moveToLastColumn',\n    handler: () => {\n      if (props.lastColumn) {\n        columnDivRef?.scrollIntoView({ behavior: 'smooth' });\n      }\n    },\n  }));\n\n  // 2つの `ref={setTimelineEl}` は `<Show>` の異なる分岐に存在し、\n  // 同時にレンダリングされないので、`timelineEl` は常にひとつの HTMLElement と関連づけられる。\n  const [timelineEl, setTimelineEl] = createSignal<HTMLElement>();\n\n  createEffect(() => {\n    const operator: ColumnOperator = {\n      scrollToTop: () => {\n        timelineEl()?.scrollTo({ top: 0, behavior: 'smooth' });\n      },\n    };\n\n    props.columnOperatorRef?.(operator);\n  });\n\n  return (\n    <TimelineContext.Provider value={timelineState}>\n      <div\n        ref={columnDivRef}\n        class=\"flex w-[80vw] shrink-0 snap-center snap-always flex-col border-r border-border sm:snap-align-none\"\n        classList={{\n          'sm:w-[500px]': width() === 'widest',\n          'sm:w-[360px]': width() === 'wide',\n          'sm:w-[320px]': width() === 'medium',\n          'sm:w-[280px]': width() === 'narrow',\n        }}\n      >\n        <Show\n          when={timelineState.timelineState.content}\n          keyed\n          fallback={\n            <>\n              <div class=\"shrink-0 border-b border-border\">{props.header}</div>\n              <div ref={setTimelineEl} class=\"scrollbar flex flex-col overflow-y-scroll pb-16\">\n                {props.children}\n              </div>\n            </>\n          }\n        >\n          {(timeline) => (\n            <>\n              <div class=\"flex shrink-0 items-center border-b border-border px-2\">\n                <button\n                  class=\"flex w-full items-center gap-1\"\n                  onClick={() => timelineState?.clearTimeline()}\n                >\n                  <div class=\"inline-block size-4\">\n                    <ArrowLeft />\n                  </div>\n                  <div>{i18n.t('column.back')}</div>\n                </button>\n              </div>\n              <div\n                ref={setTimelineEl}\n                class=\"scrollbar flex max-h-full flex-col overflow-y-scroll scroll-smooth pb-16\"\n              >\n                <TimelineContentDisplay timelineContent={timeline} />\n              </div>\n            </>\n          )}\n        </Show>\n      </div>\n    </TimelineContext.Provider>\n  );\n};\n\nexport default Column;\n","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"/></svg>","import { type Component, type JSX, For, Show } from 'solid-js';\n\nimport ChevronLeft from 'heroicons/24/outline/chevron-left.svg';\nimport ChevronRight from 'heroicons/24/outline/chevron-right.svg';\nimport Trash from 'heroicons/24/outline/trash.svg';\n\nimport { type ColumnType } from '@/core/column';\nimport useConfig from '@/core/useConfig';\nimport { useRequestCommand } from '@/hooks/useCommandBus';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nexport type RenderOtherSettingsProps<T> = {\n  column: T;\n  saveColumn: (column: T) => void;\n};\n\ntype ColumnSettingsProps<T extends ColumnType> = {\n  column: T;\n  columnIndex: number;\n  renderOtherSettings?: (props: RenderOtherSettingsProps<T>) => JSX.Element;\n};\n\ntype ColumnSettingsSectionProps = {\n  title: string;\n  children: JSX.Element;\n};\n\nexport const ColumnSettingsSection: Component<ColumnSettingsSectionProps> = (props) => (\n  <div class=\"flex flex-col gap-2 border-b border-border p-2\">\n    <div>{props.title}</div>\n    <div>{props.children}</div>\n  </div>\n);\n\nconst ColumnSettings = <T extends ColumnType>(props: ColumnSettingsProps<T>): JSX.Element => {\n  const i18n = useTranslation();\n  const { saveColumn, removeColumn, moveColumn } = useConfig();\n  const request = useRequestCommand();\n\n  const setColumnWidth = (width: ColumnType['width']) => {\n    saveColumn({ ...props.column, width });\n  };\n\n  const move = (index: number) => {\n    moveColumn(props.column.id, index);\n    request({ command: 'moveToColumn', columnIndex: index }).catch((err) => console.error(err));\n  };\n\n  return (\n    <div class=\"flex flex-col border-t border-border\">\n      <ColumnSettingsSection title={i18n.t('column.config.columnWidth')}>\n        <div class=\"scrollbar flex h-9 gap-2 overflow-x-auto\">\n          <For each={['widest', 'wide', 'medium', 'narrow'] as const}>\n            {(width) => (\n              <button\n                class=\"rounded-md border px-4 text-fg-secondary\"\n                classList={{\n                  'border-fg-secondary': props.column.width === width,\n                  'font-bold': props.column.width === width,\n                  'border-border': props.column.width !== width,\n                  'font-normal': props.column.width !== width,\n                }}\n                onClick={() => setColumnWidth(width)}\n              >\n                {i18n.t(`column.config.${width}`)}\n              </button>\n            )}\n          </For>\n        </div>\n      </ColumnSettingsSection>\n      <Show when={props.renderOtherSettings} keyed>\n        {(render) => render({ column: props.column, saveColumn })}\n      </Show>\n      <div class=\"flex h-10 items-center gap-2\">\n        <button\n          class=\"py-4 pl-2\"\n          title={i18n.t('column.config.moveLeft')}\n          onClick={() => move(props.columnIndex - 1)}\n        >\n          <span class=\"inline-block size-4\">\n            <ChevronLeft />\n          </span>\n        </button>\n        <button\n          class=\"py-4 pr-2\"\n          title={i18n.t('column.config.moveRight')}\n          onClick={() => move(props.columnIndex + 1)}\n        >\n          <span class=\"inline-block size-4\">\n            <ChevronRight />\n          </span>\n        </button>\n        <div class=\"flex-1\" />\n        <button\n          class=\"px-2 py-4 text-danger hover:text-rose-600\"\n          title={i18n.t('column.config.removeColumn')}\n          onClick={() => removeColumn(props.column.id)}\n        >\n          <span class=\"inline-block size-4\" aria-label={i18n.t('column.config.removeColumn')}>\n            <Trash />\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnSettings;\n","import { createEffect, createRoot, createSignal, batch, untrack } from 'solid-js';\n\nimport { decrypt } from '@/nostr/useCommands';\nimport usePubkey from '@/nostr/usePubkey';\n\ntype UseDecryptProps = {\n  encrypted: string;\n};\n\n// eslint-disable-next-line solid/reactivity\nconst [memo, setMemo] = createRoot(() => createSignal<Record<string, string>>({}));\nconst updateMemo = (encrypted: string, decrypted: string) =>\n  setMemo((current) => ({ ...current, [encrypted]: decrypted }));\n\n// eslint-disable-next-line solid/reactivity\nconst [decrypting, setDecrypting] = createRoot(() => createSignal<Record<string, boolean>>({}));\nconst isDecrypting = (encrypted: string) => untrack(() => decrypting()[encrypted] ?? false);\n\nconst useDecrypt = (propsProvider: () => UseDecryptProps | null) => {\n  const pubkey = usePubkey();\n  const [decrypted, setDecrypted] = createSignal<string | null>(null);\n\n  createEffect(() => {\n    const props = propsProvider();\n    if (props == null) return;\n\n    if (props.encrypted.length === 0) return;\n\n    const { encrypted } = props;\n    const memoizedValue = untrack(() => memo()[encrypted]);\n\n    if (memoizedValue != null) {\n      setDecrypted(memoizedValue);\n      return;\n    }\n\n    if (isDecrypting(encrypted)) {\n      return;\n    }\n\n    const p = pubkey();\n    if (p == null) return;\n\n    const updateDecrypting = (value: boolean) =>\n      setDecrypting((current) => ({ ...current, [encrypted]: value }));\n\n    updateDecrypting(true);\n\n    decrypt(p, encrypted)\n      .then((result) => {\n        batch(() => {\n          updateMemo(encrypted, result);\n          setDecrypted(result);\n        });\n      })\n      .catch((err) => {\n        console.error(`failed to decrypt \"${encrypted}\"`, err);\n      })\n      .finally(() => {\n        updateDecrypting(false);\n      });\n  });\n\n  return decrypted;\n};\n\nexport default useDecrypt;\n","import { For, type Component, createMemo } from 'solid-js';\n\nimport * as Kind from 'nostr-tools/kinds';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport ColumnItem from '@/components/ColumnItem';\nimport EventDisplayById from '@/components/event/EventDisplayById';\nimport { genericEvent } from '@/nostr/event';\nimport { parseTags } from '@/nostr/event/Tags';\nimport useDecrypt from '@/nostr/useDecrypt';\n\nexport type BookmarkProps = {\n  event: NostrEvent;\n};\n\nconst Bookmark: Component<BookmarkProps> = (props) => {\n  const bookmark = createMemo(() => genericEvent(props.event));\n\n  const decrypted = useDecrypt(() => {\n    const { content } = bookmark();\n    if (content == null || content.length === 0) return null;\n    return { id: bookmark().id, encrypted: content };\n  });\n\n  const bookmarkedEventIdsPrivate = () => {\n    const json = decrypted();\n    if (json == null) return [];\n    console.log(json);\n\n    try {\n      return parseTags(json).taggedEventIds();\n    } catch (err) {\n      console.warn(err);\n      return [];\n    }\n  };\n\n  const bookmarkedEventIds = () => bookmark().taggedEventIds();\n\n  return (\n    <For each={[...bookmarkedEventIds(), ...bookmarkedEventIdsPrivate()]}>\n      {(eventId) => (\n        <ColumnItem>\n          <EventDisplayById eventId={eventId} ensureKinds={[Kind.ShortTextNote]} />\n        </ColumnItem>\n      )}\n    </For>\n  );\n};\n\nexport default Bookmark;\n","import { createMemo } from 'solid-js';\n\nimport { createQuery, useQueryClient, type CreateQueryResult } from '@tanstack/solid-query';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport { pickLatestEvent } from '@/nostr/event/comparator';\nimport {\n  registerTask,\n  BatchedEventsTask,\n  type ParameterizedReplaceableEventTask,\n} from '@/nostr/useBatchedEvents';\nimport timeout from '@/utils/timeout';\n\n// Parameterized Replaceable Event\nexport type UseParameterizedReplaceableEventProps = {\n  kind: number;\n  author: string;\n  identifier: string;\n};\n\nexport type UseParameterizedReplaceableEvent = {\n  event: () => NostrEvent | null;\n  query: CreateQueryResult<NostrEvent | null>;\n};\n\nexport const queryKeyUseParameterizedReplaceableEvent = (\n  props: UseParameterizedReplaceableEventProps | null,\n) => ['useParameterizedReplaceableEvent', props] as const;\n\nconst useParameterizedReplaceableEvent = (\n  propsProvider: () => UseParameterizedReplaceableEventProps | null,\n): UseParameterizedReplaceableEvent => {\n  const queryClient = useQueryClient();\n  const props = createMemo(propsProvider);\n  const genQueryKey = () => queryKeyUseParameterizedReplaceableEvent(props());\n\n  const query = createQuery(() => ({\n    queryKey: genQueryKey(),\n    queryFn: ({ queryKey, signal }) => {\n      const [, currentProps] = queryKey;\n      if (currentProps == null) return Promise.resolve(null);\n\n      const { kind, author, identifier } = currentProps;\n      const task = new BatchedEventsTask<ParameterizedReplaceableEventTask>({\n        type: 'ParameterizedReplaceableEvent',\n        kind,\n        author,\n        identifier,\n      });\n      const promise = task.firstEventPromise().catch(() => {\n        throw new Error(\n          `parameterized replaceable event not found: ${kind}:${author}:${identifier}`,\n        );\n      });\n      task.onUpdate((events) => {\n        const latest = pickLatestEvent(events);\n        queryClient.setQueryData(queryKey, latest);\n      });\n      registerTask({ task, signal });\n      return timeout(\n        15000,\n        `useParameterizedReplaceableEvent: ${kind}:${author}:${identifier}`,\n      )(promise);\n    },\n    staleTime: 5 * 60 * 1000, // 5 min\n    gcTime: 4 * 60 * 60 * 1000, // 4 hour\n  }));\n\n  const event = () => query.data ?? null;\n\n  return { event, query };\n};\n\nexport default useParameterizedReplaceableEvent;\n","import { type Component, createSignal, Show } from 'solid-js';\n\nimport BookmarkIcon from 'heroicons/24/outline/bookmark.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport Bookmark from '@/components/timeline/Bookmark';\nimport { type BookmarkColumnType } from '@/core/column';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useParameterizedReplaceableEvent from '@/nostr/useParameterizedReplaceableEvent';\n\ntype BookmarkColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: BookmarkColumnType;\n};\n\nconst BookmarkColumn: Component<BookmarkColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const { event } = useParameterizedReplaceableEvent(() => ({\n    kind: 30001,\n    author: props.column.pubkey,\n    identifier: props.column.identifier,\n  }));\n\n  // TODO 暗号化されたデータがある場合は復号する\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.bookmark')}\n          icon={<BookmarkIcon />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <Show when={event()} keyed>\n        {(ev) => <Bookmark event={ev} />}\n      </Show>\n    </Column>\n  );\n};\n\nexport default BookmarkColumn;\n","import { type Component, createEffect, createSignal, onCleanup, onMount } from 'solid-js';\n\nimport Home from 'heroicons/24/outline/home.svg';\nimport uniq from 'lodash/uniq';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { type FollowingColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useFollowings from '@/nostr/useFollowings';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype FollowingColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: FollowingColumnType;\n};\n\nconst FollowingColumn: Component<FollowingColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const { followingPubkeys } = useFollowings(() => ({ pubkey: props.column.pubkey }));\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const loadMore = useLoadMore(() => ({\n    duration: 4 * 60 * 60,\n    onLoad: () => {\n      columnOperator()?.scrollToTop();\n    },\n  }));\n\n  const { events, eose } = useSubscription(() => {\n    const authors = uniq([...followingPubkeys()]);\n    if (authors.length === 0) return null;\n    return {\n      debugId: 'following',\n      relayUrls: config().relayUrls,\n      filters: [\n        {\n          kinds: [1, 6],\n          authors,\n          limit: 20,\n          since: loadMore.since(),\n          until: loadMore.until(),\n        },\n      ],\n      eoseLimit: 20,\n      continuous: loadMore.continuous(),\n      onEOSE: () => {\n        console.log('home: eose');\n      },\n      clientEventFilter: (event) => {\n        if (props.column.contentFilter == null) return true;\n        return applyContentFilter(props.column.contentFilter)(event.content);\n      },\n    };\n  });\n\n  createEffect(() => {\n    console.log('home', events());\n    loadMore.setEvents(events());\n  });\n\n  onMount(() => console.log('home timeline mounted'));\n  onCleanup(() => console.log('home timeline unmounted'));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.home')}\n          icon={<Home />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default FollowingColumn;\n","import { type Component, Show } from 'solid-js';\n\nimport EllipsisVertical from 'heroicons/24/outline/ellipsis-vertical.svg';\n\nimport UserDisplayName from '@/components/UserDisplayName';\nimport useContextMenu, { type MenuItem } from '@/components/utils/useContextMenu';\nimport useModalState from '@/hooks/useModalState';\n\nexport type ColumnInfoProps = {\n  image?: string;\n  title: string;\n  description?: string;\n  authorPubkey?: string;\n  extraInfo?: string;\n  otherActionMenuItems?: MenuItem[];\n};\n\nconst ColumnInfo: Component<ColumnInfoProps> = (props) => {\n  const { showProfile } = useModalState();\n\n  const otherActionsPopup = useContextMenu(() => ({\n    menu: props.otherActionMenuItems ?? [],\n  }));\n\n  return (\n    <div class=\"flex items-start gap-2 break-all border-t border-border p-1\">\n      <div class=\"mt-1 size-14 shrink-0 overflow-hidden rounded\">\n        <Show when={props.image} keyed>\n          {(url) => <img class=\"size-full object-cover\" alt=\"icon\" src={url} />}\n        </Show>\n      </div>\n      <div class=\"flex flex-1 flex-col overflow-hidden\">\n        <h3 class=\"truncate text-lg font-bold\">{props.title}</h3>\n        <p class=\"max-h-[3.25rem] overflow-y-auto break-all text-sm\">{props.description}</p>\n        <Show when={props.authorPubkey} keyed>\n          {(authorPubkey) => (\n            <div class=\"text-xs\">\n              <button\n                class=\"select-text truncate hover:text-link hover:underline\"\n                onClick={() => showProfile(authorPubkey)}\n              >\n                <UserDisplayName pubkey={authorPubkey} />\n              </button>\n            </div>\n          )}\n        </Show>\n      </div>\n      <Show when={props.otherActionMenuItems}>\n        <>\n          <button\n            ref={otherActionsPopup.targetRef}\n            type=\"button\"\n            class=\"size-4 shrink-0\"\n            onClick={() => otherActionsPopup.open()}\n          >\n            <EllipsisVertical />\n          </button>\n          {otherActionsPopup.popup()}\n        </>\n      </Show>\n    </div>\n  );\n};\n\nexport default ColumnInfo;\n","import { createMemo } from 'solid-js';\n\nimport * as Kind from 'nostr-tools/kinds';\n\nimport NostrSet, { NostrSetTags } from '@/nostr/event/sets/NostrSet';\nimport { parseTags } from '@/nostr/event/Tags';\nimport useDecrypt from '@/nostr/useDecrypt';\nimport useParameterizedReplaceableEvent, {\n  queryKeyUseParameterizedReplaceableEvent,\n} from '@/nostr/useParameterizedReplaceableEvent';\nimport ensureNonNull from '@/utils/ensureNonNull';\n\ntype UseFollowSetProps = {\n  author: string;\n  identifier: string;\n};\n\nexport const queryKeyUseFollowSet = (props: UseFollowSetProps) =>\n  queryKeyUseParameterizedReplaceableEvent({ kind: Kind.Followsets, ...props });\n\nconst useFollowSet = (propsProvider: () => UseFollowSetProps) => {\n  const props = createMemo(propsProvider);\n\n  const { query } = useParameterizedReplaceableEvent(() => ({\n    kind: Kind.Followsets,\n    author: props().author,\n    identifier: props().identifier,\n  }));\n\n  const event = () => query.data;\n\n  const decryptedContent = useDecrypt(() =>\n    ensureNonNull([event()?.content] as const)(([content]) => ({\n      encrypted: content,\n    })),\n  );\n\n  const decryptedTags = createMemo(() => {\n    const decryptedJson = decryptedContent();\n    if (decryptedJson == null) return null;\n\n    const tags = parseTags(decryptedJson);\n    return new NostrSetTags(tags.tags);\n  });\n\n  const followSet = createMemo(() => {\n    if (query.data == null) return null;\n    return new NostrSet(query.data);\n  });\n\n  const pubkeys = () => [\n    ...(followSet()?.taggedPubkeys() ?? []),\n    ...(decryptedTags()?.taggedPubkeys() ?? []),\n  ];\n\n  const title = () => followSet()?.title() || decryptedTags()?.title();\n\n  const description = () => followSet()?.description() || decryptedTags()?.description();\n\n  const image = () => followSet()?.image() || decryptedTags()?.image();\n\n  return {\n    event,\n    followSet,\n    pubkeys,\n    title,\n    description,\n    image,\n    query,\n  };\n};\n\nexport default useFollowSet;\n","import { type Component, createSignal } from 'solid-js';\n\nimport Users from 'heroicons/24/outline/users.svg';\nimport uniq from 'lodash/uniq';\nimport * as Kind from 'nostr-tools/kinds';\nimport { naddrEncode } from 'nostr-tools/nip19';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnInfo from '@/components/column/ColumnInfo';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { type FollowSetColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useFollowSet from '@/nostr/useFollowSet';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype FollowingColumnProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: FollowSetColumnType;\n};\n\nexport type FollowSetInfoProps = {\n  author: string;\n  identifier: string;\n  image?: string;\n  title?: string;\n  description?: string;\n};\n\nconst FollowSetInfo: Component<FollowSetInfoProps> = (props) => {\n  const i18n = useTranslation();\n\n  const naddr = () =>\n    naddrEncode({\n      pubkey: props.author,\n      identifier: props.identifier,\n      kind: Kind.Followsets,\n    });\n\n  const otherActionMenuItems = [\n    {\n      content: i18n.t('column.columnInfoCommon.copyId'),\n      onSelect: () => {\n        navigator.clipboard.writeText(naddr()).catch((err) => window.alert(err));\n      },\n    },\n  ];\n\n  return (\n    <ColumnInfo\n      image={props.image}\n      authorPubkey={props.author}\n      title={props.title ?? props.identifier}\n      description={props.description}\n      otherActionMenuItems={otherActionMenuItems}\n    />\n  );\n};\n\nconst FollowingColumn: Component<FollowingColumnProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const { followSet, image, title, description, pubkeys } = useFollowSet(() => ({\n    author: props.column.author,\n    identifier: props.column.identifier,\n  }));\n\n  const columnName = () =>\n    props.column.name || title() || followSet()?.identifier() || i18n.t('column.followSet');\n\n  const loadMore = useLoadMore(() => ({ duration: null }));\n\n  const { events, eose } = useSubscription(() => {\n    const authors = uniq([...pubkeys()]);\n    if (authors.length === 0) return null;\n    return {\n      debugId: 'following',\n      relayUrls: config().relayUrls,\n      filters: [\n        {\n          kinds: [1, 6],\n          authors,\n          limit: 20,\n          since: loadMore.since(),\n          until: loadMore.until(),\n        },\n      ],\n      eoseLimit: 20,\n      continuous: loadMore.continuous(),\n      onEOSE: () => {\n        console.log('home: eose');\n      },\n      clientEventFilter: (event) => {\n        if (props.column.contentFilter == null) return true;\n        return applyContentFilter(props.column.contentFilter)(event.content);\n      },\n    };\n  });\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={columnName()}\n          icon={<Users />}\n          settings={() => (\n            <>\n              <FollowSetInfo\n                author={props.column.author}\n                identifier={props.column.identifier}\n                image={image()}\n                title={title()}\n                description={description()}\n              />\n              <ColumnSettings column={props.column} columnIndex={props.columnIndex} />\n            </>\n          )}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default FollowingColumn;\n","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.5 12a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0m0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path fill-rule=\"evenodd\" d=\"M14.615 1.595a.75.75 0 0 1 .359.852L12.982 9.75h7.268a.75.75 0 0 1 .548 1.262l-10.5 11.25a.75.75 0 0 1-1.272-.71l1.992-7.302H3.75a.75.75 0 0 1-.548-1.262l10.5-11.25a.75.75 0 0 1 .913-.143\" clip-rule=\"evenodd\"/></svg>","import { type Component, Show } from 'solid-js';\n\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport EventDisplay from '@/components/event/EventDisplay';\nimport ReactionEmojiDisplay, { reactionTypesToEmojiTypes } from '@/components/ReactionEmojiDisplay';\nimport useEmojiPopup from '@/components/useEmojiPopup';\nimport UserDisplayName from '@/components/UserDisplayName';\nimport useConfig from '@/core/useConfig';\nimport useFormatDate from '@/hooks/useFormatDate';\nimport useModalState from '@/hooks/useModalState';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport { reaction } from '@/nostr/event';\nimport useEvent from '@/nostr/useEvent';\nimport useProfile from '@/nostr/useProfile';\nimport ensureNonNull from '@/utils/ensureNonNull';\nimport { thumbnailUrl } from '@/utils/url';\n\ntype ReactionDisplayProps = {\n  event: NostrEvent;\n};\n\nconst ReactionDisplay: Component<ReactionDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const formatDate = useFormatDate();\n  const { shouldMuteEvent } = useConfig();\n  const { showProfile } = useModalState();\n  const event = () => reaction(props.event);\n  const eventId = () => event().lastTaggedEventId();\n\n  const { profile } = useProfile(() => ({\n    pubkey: props.event.pubkey,\n  }));\n\n  const { event: reactedEvent, query: reactedEventQuery } = useEvent(() =>\n    ensureNonNull([eventId()] as const)(([eventIdNonNull]) => ({\n      eventId: eventIdNonNull,\n    })),\n  );\n\n  const isRemoved = () => reactedEventQuery.isSuccess && reactedEvent() == null;\n\n  const reactionTypes = () => event().toReactionTypes();\n  const emojiTypes = () => reactionTypesToEmojiTypes(reactionTypes());\n\n  const emojiPopup = useEmojiPopup(() =>\n    ensureNonNull([emojiTypes()] as const)(([emoji]) => ({\n      emoji,\n    })),\n  );\n\n  return (\n    // if the reacted event is not found, it should be a removed event\n    <Show when={!isRemoved() && !shouldMuteEvent(props.event)}>\n      <div class=\"flex items-center gap-1 pl-[2px] text-sm\">\n        <span\n          ref={emojiPopup.emojiRef}\n          class=\"webkit-touch-callout-none notification-icon flex h-4 min-w-4 max-w-[64px] shrink-0 select-none place-items-center overflow-hidden\"\n        >\n          <ReactionEmojiDisplay reactionTypes={reactionTypes()} />\n        </span>\n        {emojiPopup.popup()}\n        <div class=\"notification-user flex flex-1 gap-1 overflow-hidden\">\n          <div class=\"author-icon size-5 shrink-0 overflow-hidden rounded\">\n            <Show when={profile()?.picture} keyed>\n              {(url) => (\n                <img\n                  src={thumbnailUrl(url, 'icon')}\n                  alt=\"icon\"\n                  // TODO autofit\n                  class=\"size-full object-cover\"\n                />\n              )}\n            </Show>\n          </div>\n          <div class=\"flex min-w-0 flex-1 overflow-hidden\">\n            <button\n              class=\"select-text truncate font-bold hover:text-link hover:underline\"\n              onClick={() => showProfile(props.event.pubkey)}\n            >\n              <UserDisplayName pubkey={props.event.pubkey} />\n            </button>\n            <span class=\"shrink-0 whitespace-pre\">{i18n.t('notification.reacted')}</span>\n          </div>\n        </div>\n        <div class=\"text-xs\">{formatDate(event().createdAtAsDate())}</div>\n      </div>\n      <div class=\"notification-event py-1\">\n        <Show\n          when={reactedEvent()}\n          fallback={\n            <div class=\"truncate\">\n              {i18n.t('general.loading')} {eventId()}\n            </div>\n          }\n          keyed\n        >\n          {(ev) => <EventDisplay event={ev} />}\n        </Show>\n      </div>\n    </Show>\n  );\n};\n\nexport default ReactionDisplay;\n","import { For, Switch, Match, lazy, type Component, Show } from 'solid-js';\n\nimport * as Kind from 'nostr-tools/kinds';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport ColumnItem from '@/components/ColumnItem';\nimport Reaction from '@/components/event/Reaction';\nimport Repost from '@/components/event/Repost';\nimport TextNote from '@/components/event/TextNote';\nimport useConfig from '@/core/useConfig';\n\nconst ZapReceipt = lazy(() => import('@/components/event/ZapReceipt'));\n\nexport type NotificationProps = {\n  events: NostrEvent[];\n};\n\nconst Notification: Component<NotificationProps> = (props) => {\n  const { shouldMuteEvent } = useConfig();\n\n  return (\n    <For each={props.events}>\n      {(event) => (\n        <Show when={!shouldMuteEvent(event)}>\n          <Switch fallback={<div>unknown event</div>}>\n            <Match when={event.kind === Kind.ShortTextNote}>\n              <ColumnItem>\n                <TextNote event={event} />\n              </ColumnItem>\n            </Match>\n            <Match when={event.kind === Kind.Reaction}>\n              <ColumnItem>\n                <Reaction event={event} />\n              </ColumnItem>\n            </Match>\n            {/* TODO ちゃんとnotification用のコンポーネント使う */}\n            <Match when={event.kind === Kind.Repost}>\n              <ColumnItem>\n                <Repost event={event} />\n              </ColumnItem>\n            </Match>\n            <Match when={event.kind === Kind.Zap}>\n              <ColumnItem>\n                <ZapReceipt event={event} />\n              </ColumnItem>\n            </Match>\n          </Switch>\n        </Show>\n      )}\n    </For>\n  );\n};\n\nexport default Notification;\n","import { type JSX, type Component, For, createSignal, createEffect } from 'solid-js';\n\nimport ArrowPathRoundedSquare from 'heroicons/24/outline/arrow-path-rounded-square.svg';\nimport AtSymbol from 'heroicons/24/outline/at-symbol.svg';\nimport Bell from 'heroicons/24/outline/bell.svg';\nimport Bolt from 'heroicons/24/solid/bolt.svg';\nimport HeartSolid from 'heroicons/24/solid/heart.svg';\nimport uniq from 'lodash/uniq';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings, {\n  ColumnSettingsSection,\n  type RenderOtherSettingsProps,\n} from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Notification from '@/components/timeline/Notification';\nimport {\n  type NotificationColumnType,\n  type NotificationType,\n  NotificationTypes,\n} from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype NotificationColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: NotificationColumnType;\n};\n\ntype NotificationFilterOptionsEntry = {\n  notificationType: NotificationType;\n  title: string;\n  icon: JSX.Element;\n};\n\nconst NotificationTypeKindsMap: Record<NotificationType, number[]> = {\n  Replies: [1],\n  Repost: [6],\n  Reaction: [7],\n  Zap: [9735],\n};\n\nconst NotificationSettingsSection = (props: RenderOtherSettingsProps<NotificationColumnType>) => {\n  const i18n = useTranslation();\n\n  const notificationFilterOptions: NotificationFilterOptionsEntry[] = [\n    {\n      notificationType: 'Replies',\n      title: i18n.t('column.notificationSettings.types.replies'),\n      icon: <AtSymbol />,\n    },\n    {\n      notificationType: 'Repost',\n      title: i18n.t('column.notificationSettings.types.reposts'),\n      icon: <ArrowPathRoundedSquare />,\n    },\n    {\n      notificationType: 'Reaction',\n      title: i18n.t('column.notificationSettings.types.reactions'),\n      icon: <HeartSolid />,\n    },\n    {\n      notificationType: 'Zap',\n      title: i18n.t('column.notificationSettings.types.zap'),\n      icon: <Bolt />,\n    },\n  ] as const;\n\n  const currentNotificationTypes = (): NotificationType[] =>\n    props.column.notificationTypes ?? [...NotificationTypes];\n\n  const isNotificationTypeSelected = (notificationType: NotificationType) =>\n    currentNotificationTypes().includes(notificationType);\n\n  const toggleColumnType = (notificationType: NotificationType) => {\n    const notificationTypes = [...currentNotificationTypes()];\n    if (isNotificationTypeSelected(notificationType)) {\n      notificationTypes.splice(notificationTypes.indexOf(notificationType), 1);\n    } else {\n      notificationTypes.push(notificationType);\n    }\n\n    props.saveColumn({\n      ...props.column,\n      notificationTypes,\n    });\n  };\n\n  return (\n    <>\n      <ColumnSettingsSection title={i18n.t('column.notificationSettings.notificationTypes')}>\n        <div class=\"flex gap-1\">\n          <For each={notificationFilterOptions}>\n            {({ notificationType, title, icon }) => (\n              <button\n                type=\"button\"\n                class=\"flex flex-1 flex-col items-center rounded-md border py-1 text-fg-secondary\"\n                title={title}\n                classList={{\n                  'border-fg-secondary': isNotificationTypeSelected(notificationType),\n                  'font-bold': isNotificationTypeSelected(notificationType),\n                  'border-border': !isNotificationTypeSelected(notificationType),\n                  'font-normal': !isNotificationTypeSelected(notificationType),\n                }}\n                onClick={() => toggleColumnType(notificationType)}\n              >\n                <span class=\"inline-block size-4\">{icon}</span>\n                <span class=\"text-xs\">{title}</span>\n              </button>\n            )}\n          </For>\n        </div>\n      </ColumnSettingsSection>\n    </>\n  );\n};\n\nconst NotificationColumn: Component<NotificationColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const loadMore = useLoadMore(() => ({\n    duration: null,\n    onLoad: () => {\n      columnOperator()?.scrollToTop();\n    },\n  }));\n\n  const notificationTypes = () => props.column.notificationTypes ?? [...NotificationTypes];\n  const kinds = () => uniq(notificationTypes().flatMap((type) => NotificationTypeKindsMap[type]));\n\n  const { events: notifications, eose } = useSubscription(() =>\n    kinds().length > 0\n      ? {\n          relayUrls: config().relayUrls,\n          filters: [\n            {\n              kinds: kinds(),\n              '#p': [props.column.pubkey],\n              limit: 20,\n              since: loadMore.since(),\n              until: loadMore.until(),\n            },\n          ],\n          eoseLimit: 20,\n          clientEventFilter: (event) => {\n            if (props.column.contentFilter == null) return true;\n            return applyContentFilter(props.column.contentFilter)(event.content);\n          },\n        }\n      : null,\n  );\n\n  createEffect(() => loadMore.setEvents(notifications()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.notification')}\n          icon={<Bell />}\n          settings={() => (\n            <ColumnSettings\n              column={props.column}\n              columnIndex={props.columnIndex}\n              renderOtherSettings={NotificationSettingsSection}\n            />\n          )}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Notification events={notifications()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default NotificationColumn;\n","import { createEffect, type Component, createSignal } from 'solid-js';\n\nimport User from 'heroicons/24/outline/user.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { type PostsColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype PostsColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: PostsColumnType;\n};\n\nconst PostsColumn: Component<PostsColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const loadMore = useLoadMore(() => ({\n    duration: null,\n    onLoad: () => {\n      columnOperator()?.scrollToTop();\n    },\n  }));\n\n  const { events, eose } = useSubscription(() => ({\n    relayUrls: config().relayUrls,\n    filters: [\n      {\n        kinds: [1, 6],\n        authors: [props.column.pubkey],\n        limit: 10,\n        since: loadMore.since(),\n        until: loadMore.until(),\n      },\n    ],\n    eoseLimit: 10,\n    clientEventFilter: (event) => {\n      if (props.column.contentFilter == null) return true;\n      return applyContentFilter(props.column.contentFilter)(event.content);\n    },\n  }));\n\n  createEffect(() => loadMore.setEvents(events()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.posts')}\n          icon={<User />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default PostsColumn;\n","import { createEffect, type Component, createSignal } from 'solid-js';\n\nimport Heart from 'heroicons/24/outline/heart.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Notification from '@/components/timeline/Notification';\nimport { type ReactionsColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype ReactionsColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: ReactionsColumnType;\n};\n\nconst ReactionsColumn: Component<ReactionsColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const loadMore = useLoadMore(() => ({\n    duration: null,\n    onLoad: () => {\n      columnOperator()?.scrollToTop();\n    },\n  }));\n\n  const { events: reactions, eose } = useSubscription(() => ({\n    relayUrls: config().relayUrls,\n    filters: [\n      {\n        kinds: [7],\n        authors: [props.column.pubkey],\n        limit: 10,\n        since: loadMore.since(),\n        until: loadMore.until(),\n      },\n    ],\n    eoseLimit: 10,\n    clientEventFilter: (event) => {\n      if (props.column.contentFilter == null) return true;\n      return applyContentFilter(props.column.contentFilter)(event.content);\n    },\n  }));\n\n  createEffect(() => loadMore.setEvents(reactions()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.reactions')}\n          icon={<Heart />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Notification events={reactions()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default ReactionsColumn;\n","import { createEffect, type Component, createSignal } from 'solid-js';\n\nimport GlobeAlt from 'heroicons/24/outline/globe-alt.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { type RelaysColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype RelaysColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: RelaysColumnType;\n};\n\nconst RelaysColumn: Component<RelaysColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const loadMore = useLoadMore(() => ({\n    duration: 4 * 60 * 60,\n    onLoad: () => {\n      columnOperator()?.scrollToTop();\n    },\n  }));\n\n  const { events, eose } = useSubscription(() => ({\n    relayUrls: props.column.relayUrls,\n    filters: [\n      {\n        kinds: [1],\n        limit: 20,\n        since: loadMore.since(),\n        until: loadMore.until(),\n      },\n    ],\n    eoseLimit: 20,\n    clientEventFilter: (event) => {\n      if (props.column.contentFilter == null) return true;\n      return applyContentFilter(props.column.contentFilter)(event.content);\n    },\n  }));\n\n  createEffect(() => loadMore.setEvents(events()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.relay')}\n          icon={<GlobeAlt />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default RelaysColumn;\n","import { type Component, createEffect, createSignal, Show, type JSX, onMount } from 'solid-js';\n\nimport EllipsisVertical from 'heroicons/24/outline/ellipsis-vertical.svg';\nimport MagnifyingGlass from 'heroicons/24/outline/magnifying-glass.svg';\n\nimport Column, { type ColumnOperator } from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { type SearchColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport { relaysForSearching } from '@/core/relayUrls';\nimport useConfig from '@/core/useConfig';\nimport useSubscription from '@/nostr/useSubscription';\n\nexport type SearchColumnHeaderProps = {\n  column: SearchColumnType;\n  settings: () => JSX.Element;\n  onClose?: () => void;\n  onClickHeader?: () => void;\n};\n\nconst SearchColumnHeader: Component<SearchColumnHeaderProps> = (props) => {\n  const [isSettingsOpened, setIsSettingOpened] = createSignal(false);\n  const [query, setQuery] = createSignal('');\n\n  const { saveColumn } = useConfig();\n\n  const toggleSettingsOpened = () => setIsSettingOpened((current) => !current);\n\n  const updateQuery = () => {\n    if (query() === props.column.query) return;\n    saveColumn({ ...props.column, query: query() });\n  };\n\n  const handleBlur: JSX.EventHandler<HTMLInputElement, Event> = () => {\n    updateQuery();\n  };\n\n  const handleChange: JSX.EventHandler<HTMLInputElement, Event> = (ev) => {\n    setQuery(ev.currentTarget.value);\n  };\n\n  const handleSubmit: JSX.EventHandler<HTMLFormElement, SubmitEvent> = (ev) => {\n    ev.preventDefault();\n    updateQuery();\n  };\n\n  onMount(() => {\n    setQuery(props.column.query);\n  });\n\n  return (\n    <div class=\"flex flex-col\">\n      <div class=\"flex h-8 items-center gap-1 px-2\">\n        <h2 class=\"flex items-center\">\n          <button\n            type=\"button\"\n            class=\"inline-block size-4 text-fg-secondary\"\n            onClick={() => props.onClickHeader?.()}\n          >\n            <MagnifyingGlass />\n          </button>\n        </h2>\n        <form class=\"flex-1\" onSubmit={handleSubmit}>\n          <input\n            class=\"w-full rounded border border-border bg-bg px-1 py-0 ring-border focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"query\"\n            value={query()}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </form>\n        <button class=\"size-4\" onClick={() => toggleSettingsOpened()}>\n          <EllipsisVertical />\n        </button>\n      </div>\n      <Show when={isSettingsOpened()}>{props.settings()}</Show>\n    </div>\n  );\n};\n\nexport type SearchColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: SearchColumnType;\n};\n\nconst SearchColumn: Component<SearchColumnDisplayProps> = (props) => {\n  const { removeColumn } = useConfig();\n\n  const [columnOperator, setColumnOperator] = createSignal<ColumnOperator>();\n\n  const loadMore = useLoadMore(() => ({\n    duration: null,\n    onLoad: () => {\n      columnOperator()?.scrollToTop();\n    },\n  }));\n\n  const { events, eose } = useSubscription(() => {\n    const { query } = props.column;\n\n    if (query.length === 0) return null;\n\n    return {\n      relayUrls: relaysForSearching,\n      filters: [\n        {\n          kinds: [1],\n          search: query,\n          limit: 20,\n          since: loadMore.since(),\n          until: loadMore.until(),\n        },\n      ],\n      eoseLimit: 20,\n      clientEventFilter: (event) => {\n        if (event.tags.findIndex(([tagName]) => tagName === 'mostr' || tagName === 'proxy') >= 0)\n          return false;\n        if (props.column.contentFilter == null) return true;\n        return applyContentFilter(props.column.contentFilter)(event.content);\n      },\n    };\n  });\n\n  createEffect(() => {\n    loadMore.setEvents(events());\n  });\n\n  return (\n    <Column\n      header={\n        <SearchColumnHeader\n          column={props.column}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n          onClickHeader={() => columnOperator()?.scrollToTop()}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n      columnOperatorRef={setColumnOperator}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default SearchColumn;\n","import { For, Switch, Match } from 'solid-js';\n\nimport BookmarkColumn from '@/components/column/BookmarkColumn';\nimport FollowingColumn from '@/components/column/FollowingColumn';\nimport FollowSetColumn from '@/components/column/FollowSetColumn';\nimport NotificationColumn from '@/components/column/NotificationColumn';\nimport PostsColumn from '@/components/column/PostsColumn';\nimport ReactionsColumn from '@/components/column/ReactionsColumn';\nimport RelaysColumn from '@/components/column/RelaysColumn';\nimport SearchColumn from '@/components/column/SearchColumn';\nimport useConfig from '@/core/useConfig';\n\nconst Columns = () => {\n  const { config } = useConfig();\n\n  return (\n    <div class=\"scrollbar flex h-full snap-x snap-mandatory flex-row overflow-x-scroll scroll-smooth\">\n      <For each={config().columns}>\n        {(column, index) => {\n          const columnIndex = () => index() + 1;\n          const lastColumn = () => columnIndex() === config().columns.length;\n          return (\n            <Switch>\n              <Match when={column.columnType === 'Following' && column} keyed>\n                {(followingColumn) => (\n                  <FollowingColumn\n                    column={followingColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Notification' && column} keyed>\n                {(notificationColumn) => (\n                  <NotificationColumn\n                    column={notificationColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Posts' && column} keyed>\n                {(postsColumn) => (\n                  <PostsColumn\n                    column={postsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Reactions' && column} keyed>\n                {(reactionsColumn) => (\n                  <ReactionsColumn\n                    column={reactionsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Relays' && column} keyed>\n                {(reactionsColumn) => (\n                  <RelaysColumn\n                    column={reactionsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'FollowSet' && column} keyed>\n                {(followSetColumn) => (\n                  <FollowSetColumn\n                    column={followSetColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Bookmark' && column} keyed>\n                {(bookmarkColumn) => (\n                  <BookmarkColumn\n                    column={bookmarkColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Search' && column} keyed>\n                {(reactionsColumn) => (\n                  <SearchColumn\n                    column={reactionsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n            </Switch>\n          );\n        }}\n      </For>\n    </div>\n  );\n};\n\nexport default Columns;\n","import { onMount, onCleanup } from 'solid-js';\n\nimport throttle from 'lodash/throttle';\n\nimport { useRequestCommand, type Command } from '@/hooks/useCommandBus';\n\ntype Shortcut = { key: string; command: Command };\n\nconst defaultShortcut: Shortcut[] = [\n  { key: 'n', command: { command: 'openPostForm' } },\n  { key: 'h', command: { command: 'moveToPrevColumn' } },\n  { key: 'j', command: { command: 'moveToNextItem' } },\n  { key: 'k', command: { command: 'moveToPrevItem' } },\n  { key: 'l', command: { command: 'moveToNextColumn' } },\n  { key: '1', command: { command: 'moveToColumn', columnIndex: 1 } },\n  { key: '2', command: { command: 'moveToColumn', columnIndex: 2 } },\n  { key: '3', command: { command: 'moveToColumn', columnIndex: 3 } },\n  { key: '4', command: { command: 'moveToColumn', columnIndex: 4 } },\n  { key: '5', command: { command: 'moveToColumn', columnIndex: 5 } },\n  { key: '6', command: { command: 'moveToColumn', columnIndex: 6 } },\n  { key: '7', command: { command: 'moveToColumn', columnIndex: 7 } },\n  { key: '8', command: { command: 'moveToColumn', columnIndex: 8 } },\n  { key: '9', command: { command: 'moveToColumn', columnIndex: 9 } },\n  { key: '0', command: { command: 'moveToLastColumn' } },\n  { key: 'ArrowLeft', command: { command: 'moveToPrevColumn' } },\n  { key: 'ArrowDown', command: { command: 'moveToNextItem' } },\n  { key: 'ArrowUp', command: { command: 'moveToPrevItem' } },\n  { key: 'ArrowRight', command: { command: 'moveToNextColumn' } },\n  { key: 'f', command: { command: 'like' } },\n  { key: 't', command: { command: 'repost' } },\n  { key: 'r', command: { command: 'openReplyForm' } },\n  { key: '?', command: { command: 'openHelp' } },\n  { key: 'Enter', command: { command: 'openItemDetail' } },\n  { key: 'Backspace', command: { command: 'closeItemDetail' } },\n];\n\ntype UseShortcutKeysProps = {\n  shortcuts?: Shortcut[];\n  onShortcut: (shortcut: Shortcut) => void;\n};\n\nconst createShortcutsMap = (shortcuts: Shortcut[]) => {\n  const map = new Map<string, Shortcut>();\n  shortcuts.forEach((shortcut) => {\n    map.set(shortcut.key, shortcut);\n  });\n  return map;\n};\n\nconst useShortcutKeys = ({ shortcuts = defaultShortcut, onShortcut }: UseShortcutKeysProps) => {\n  const shortcutsMap = createShortcutsMap(shortcuts);\n\n  onMount(() => {\n    const handleKeydown = throttle((ev: KeyboardEvent) => {\n      if (ev.type !== 'keydown') return;\n      if (ev.ctrlKey || ev.altKey || ev.metaKey) return;\n      if (ev.target instanceof HTMLTextAreaElement || ev.target instanceof HTMLInputElement) return;\n\n      const shortcut = shortcutsMap.get(ev.key);\n\n      if (shortcut == null) return;\n\n      onShortcut(shortcut);\n    }, 50);\n\n    window.addEventListener('keydown', handleKeydown);\n\n    onCleanup(() => {\n      window.removeEventListener('keydown', handleKeydown);\n    });\n  });\n};\n\nexport const useMountShortcutKeys = () => {\n  const request = useRequestCommand();\n\n  useShortcutKeys({\n    onShortcut: (shortcut) => {\n      request(shortcut.command).then(\n        () => console.debug(`shortcut key '${shortcut.key}' was processed successfully`),\n        (err) => console.error(err),\n      );\n    },\n  });\n};\n\nexport default useShortcutKeys;\n","import { createEffect, type Component, onError } from 'solid-js';\n\nimport Columns from '@/components/column/Columns';\nimport GlobalModal from '@/components/modal/GlobalModal';\nimport SideBar from '@/components/SideBar';\nimport useConfig from '@/core/useConfig';\nimport { useMountShortcutKeys } from '@/hooks/useShortcutKeys';\nimport usePool from '@/nostr/usePool';\nimport usePubkey from '@/nostr/usePubkey';\n\nconst Home: Component = () => {\n  useMountShortcutKeys();\n\n  const pool = usePool();\n  const { config, initializeColumns } = useConfig();\n  const pubkey = usePubkey();\n\n  createEffect(() => {\n    Promise.allSettled(\n      config().relayUrls.map(async (relayUrl) => {\n        try {\n          const relay = await pool().ensureRelay(relayUrl);\n          relay.onnotice = (msg: string) => {\n            console.error(`NOTICE: ${relayUrl}: ${msg}`);\n          };\n          relay.onclose = () => {\n            console.warn(`CLOSE: ${relayUrl}`);\n          };\n        } catch (err) {\n          console.error('ensureRelay failed', err);\n        }\n      }),\n    ).catch(() => {\n      /* nothing to do */\n    });\n  });\n\n  createEffect(() => {\n    // pubkeyが得られてはじめてカラムを初期化できる\n    const p = pubkey();\n    if (p != null) {\n      initializeColumns({ pubkey: p });\n    }\n  });\n\n  onError((err) => {\n    console.error('uncaught error: ', err);\n  });\n\n  return (\n    <div class=\"absolute inset-0 flex h-dvh w-screen touch-manipulation flex-row overflow-hidden\">\n      <SideBar />\n      <Columns />\n      <GlobalModal />\n    </div>\n  );\n};\n\nexport default Home;\n"],"file":"assets/Home-CZy_aQKE.js"}