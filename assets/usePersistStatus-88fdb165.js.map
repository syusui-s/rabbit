{"version":3,"file":"usePersistStatus-88fdb165.js","sources":["../../src/utils/resolveAsset.tsx","../../src/hooks/usePersistStatus.ts"],"sourcesContent":["const resolveAsset = (path: string): string => {\n  const baseUrl = new URL(import.meta.env.BASE_URL, window.location.href);\n  return new URL(path, baseUrl).href;\n};\n\nexport default resolveAsset;\n","import { createRoot, type Accessor } from 'solid-js';\n\nimport {\n  createStoreWithStorage,\n  createStorageWithSerializer,\n} from '@/hooks/createSignalWithStorage';\nimport { UploaderIds } from '@/utils/imageUpload';\n\ntype PersistStatus = {\n  loggedIn: boolean;\n  agreements: Record<UploaderIds, boolean>;\n};\n\ntype UsePersistStatus = {\n  persistStatus: Accessor<PersistStatus>;\n  loggedIn: () => void;\n  agreeToToS: (uploaderId: UploaderIds) => void;\n  didAgreeToToS: (uploaderId: UploaderIds) => boolean;\n};\n\nconst InitialPersistStatus: PersistStatus = {\n  loggedIn: false,\n  agreements: {\n    nostrBuild: false,\n  },\n};\n\nconst serializer = (persistStatus: PersistStatus): string => JSON.stringify(persistStatus);\n// TODO zod使う\nconst deserializer = (json: string): PersistStatus => JSON.parse(json) as PersistStatus;\n\nconst storage = createStorageWithSerializer(() => window.localStorage, serializer, deserializer);\n\nconst [persistStatus, setPersistStatus] = createRoot(() =>\n  createStoreWithStorage('RabbitPersistStatus', InitialPersistStatus, storage),\n);\n\nconst usePersistStatus = (): UsePersistStatus => {\n  const loggedIn = () => {\n    setPersistStatus((current) => ({ ...current, loggedIn: true }));\n  };\n\n  const agreeToToS = (key: UploaderIds) => {\n    setPersistStatus('agreements', (current) => ({ ...current, [key]: true }));\n  };\n\n  const didAgreeToToS = (key: UploaderIds): boolean => persistStatus.agreements[key] ?? false;\n\n  return {\n    persistStatus: () => ({\n      ...InitialPersistStatus,\n      ...persistStatus,\n    }),\n    loggedIn,\n    agreeToToS,\n    didAgreeToToS,\n  };\n};\n\nexport default usePersistStatus;\n"],"names":["resolveAsset","path","baseUrl","URL","import","window","location","href","InitialPersistStatus","serializer","persistStatus","deserializer","json","storage","createStorageWithSerializer","setPersistStatus","createRoot","createStoreWithStorage","usePersistStatus","current","key"],"mappings":"wDAAMA,MAAAA,EAAgBC,GAAyB,CAC7C,MAAMC,EAAU,IAAIC,IAAIC,WAA0BC,OAAOC,SAASC,IAAI,EACtE,OAAO,IAAIJ,IAAIF,EAAMC,CAAO,EAAEK,IAChC,ECiBMC,EAAsC,CAC1C,SAAU,GACV,WAAY,CACV,WAAY,EACd,CACF,EAEMC,EAAcC,GAAyC,KAAK,UAAUA,CAAa,EAEnFC,EAAgBC,GAAgC,KAAK,MAAMA,CAAI,EAE/DC,EAAUC,EAA4B,IAAM,OAAO,aAAcL,EAAYE,CAAY,EAEzF,CAACD,EAAeK,CAAgB,EAAIC,EAAW,IACnDC,EAAuB,sBAAuBT,EAAsBK,CAAO,CAC7E,EAEMK,EAAmB,KAWhB,CACL,cAAe,KAAO,CACpB,GAAGV,EACH,GAAGE,CAAA,GAEL,SAfe,IAAM,CACrBK,EAAkBI,IAAa,CAAE,GAAGA,EAAS,SAAU,EAAO,EAAA,CAAA,EAe9D,WAZkBC,GAAqB,CACtBL,EAAA,aAAeI,IAAa,CAAE,GAAGA,EAAS,CAACC,CAAG,EAAG,EAAO,EAAA,CAAA,EAYzE,cATqBA,GAA8BV,EAAc,WAAWU,CAAG,GAAK,EASpF"}