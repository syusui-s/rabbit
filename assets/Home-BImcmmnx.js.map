{"version":3,"mappings":"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","names":["EllipsisVertical","props","_el$","_tmpl$","_$spread","BasicColumnHeader","isSettingsOpened","setIsSettingOpened","createSignal","toggleSettingsOpened","current","_el$2","firstChild","_el$3","_el$4","_el$5","nextSibling","_el$6","_$createComponent","Show","when","icon","keyed","children","_el$7","_tmpl$2","_$insert","name","$$click","settings","_$delegateEvents","relatedEvents","event","ids","id","rootId","rootEvent","push","replyId","replyingToEvent","uniq","RepliesDisplay","config","useConfig","textNote","events","useSubscription","relayUrls","filters","kinds","limit","Timeline","reverse","TimelineContentDisplay","Switch","Match","timelineContent","type","replies","Column","columnDivRef","timelineState","useTimelineState","i18n","useTranslation","width","useHandleCommand","commandType","handler","command","columnIndex","scrollIntoView","behavior","inline","lastColumn","TimelineContext","Provider","value","_ref$","_$use","content","fallback","header","_tmpl$3","timeline","_tmpl$4","clearTimeline","ArrowLeft","t","_el$8","_tmpl$5","_$p","_$classList","ChevronLeft","Trash","ColumnSettingsSection","title","ColumnSettings","saveColumn","removeColumn","moveColumn","request","useRequestCommand","setColumnWidth","column","move","index","catch","console","error","err","_el$9","_el$10","_el$11","_el$12","_el$13","For","each","_el$14","_$effect","_p$","_v$5","_v$6","_v$7","_v$8","classList","toggle","undefined","renderOtherSettings","render","ChevronRight","_v$","_v$2","_v$3","_v$4","_$setAttribute","memo","setMemo","createRoot","decrypting","setDecrypting","useDecrypt","propsProvider","pubkey","usePubkey","decrypted","setDecrypted","createEffect","encrypted","p","result","Bookmark","bookmark","createMemo","genericEvent","length","bookmarkedEventIdsPrivate","json","log","parseTags","taggedEventIds","warn","bookmarkedEventIds","ColumnItem","EventDisplayById","eventId","ensureKinds","Kind","useParameterizedReplaceableEvent","queryClient","useQueryClient","genQueryKey","query","createQuery","queryKey","signal","currentProps","kind","author","identifier","task","BatchedEventsTask","promise","latest","pickLatestEvent","registerTask","timeout","BookmarkColumn","BookmarkIcon","onClose","ev","FollowingColumn","followingPubkeys","useFollowings","loadMore","useLoadMore","duration","eose","authors","debugId","since","until","eoseLimit","continuous","onEOSE","clientEventFilter","contentFilter","applyContentFilter","setEvents","onMount","onCleanup","Home","LoadMore","AtSymbol","Bolt","ReactionDisplay","formatDate","useFormatDate","shouldMuteEvent","showProfile","useModalState","reaction","lastTaggedEventId","profile","useProfile","reactedEvent","reactedEventQuery","useEvent","ensureNonNull","eventIdNonNull","isRemoved","isSuccess","reactionTypes","toReactionTypes","emojiTypes","reactionTypesToEmojiTypes","emojiPopup","useEmojiPopup","emoji","_$memo","emojiRef","ReactionEmojiDisplay","popup","picture","thumbnailUrl","url","UserDisplayName","createdAtAsDate","EventDisplay","ZapReceipt","lazy","__vitePreload","Notification","TextNote","Reaction","Repost","NotificationTypeKindsMap","Replies","Zap","NotificationSettingsSection","notificationFilterOptions","notificationType","ArrowPathRoundedSquare","HeartSolid","currentNotificationTypes","notificationTypes","NotificationTypes","isNotificationTypeSelected","includes","toggleColumnType","splice","indexOf","NotificationColumn","flatMap","notifications","Bell","PostsColumn","User","ReactionsColumn","reactions","Heart","RelaysColumn","GlobeAlt","SearchColumnHeader","setQuery","updateQuery","handleBlur","handleChange","currentTarget","handleSubmit","preventDefault","MagnifyingGlass","addEventListener","SearchColumn","relaysForSearching","search","tags","findIndex","tagName","Columns","columns","columnType","followingColumn","notificationColumn","postsColumn","reactionsColumn","bookmarkColumn","defaultShortcut","createShortcutsMap","shortcuts","map","shortcut","useShortcutKeys","onShortcut","shortcutsMap","handleKeydown","throttle","useMountShortcutKeys","pool","usePool","initializeColumns","Promise","allSettled","relayUrl","relay","ensureRelay","onnotice","msg","onclose","onError","SideBar","GlobalModal"],"ignoreList":[0,4,5,12,13],"sources":["../../node_modules/heroicons/24/outline/ellipsis-vertical.svg","../../src/components/column/BasicColumnHeader.tsx","../../src/components/timeline/TimelineContentDisplay.tsx","../../src/components/column/Column.tsx","../../node_modules/heroicons/24/outline/chevron-left.svg","../../node_modules/heroicons/24/outline/trash.svg","../../src/components/column/ColumnSettings.tsx","../../src/nostr/useDecrypt.ts","../../src/components/timeline/Bookmark.tsx","../../src/nostr/useParameterizedReplaceableEvent.ts","../../src/components/column/BookmarkColumn.tsx","../../src/components/column/FollowingColumn.tsx","../../node_modules/heroicons/24/outline/at-symbol.svg","../../node_modules/heroicons/24/solid/bolt.svg","../../src/components/event/Reaction.tsx","../../src/components/timeline/Notification.tsx","../../src/components/column/NotificationColumn.tsx","../../src/components/column/PostsColumn.tsx","../../src/components/column/ReactionsColumn.tsx","../../src/components/column/RelaysColumn.tsx","../../src/components/column/SearchColumn.tsx","../../src/components/column/Columns.tsx","../../src/hooks/useShortcutKeys.ts","../../src/pages/Home.tsx"],"sourcesContent":["export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5m0 6a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5m0 6a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5\"/></svg>","import { Component, JSX, Show, createSignal } from 'solid-js';\n\nimport EllipsisVertical from 'heroicons/24/outline/ellipsis-vertical.svg';\n\nexport type BasicColumnHeaderProps = {\n  name: string;\n  icon?: JSX.Element;\n  settings: () => JSX.Element;\n  onClose?: () => void;\n};\n\nconst BasicColumnHeader: Component<BasicColumnHeaderProps> = (props) => {\n  const [isSettingsOpened, setIsSettingOpened] = createSignal(false);\n\n  const toggleSettingsOpened = () => setIsSettingOpened((current) => !current);\n\n  return (\n    <div class=\"flex flex-col\">\n      <div class=\"flex h-8 items-center gap-1\">\n        <h2 class=\"flex min-w-0 flex-1 items-center gap-1 ps-2\">\n          <Show when={props.icon} keyed>\n            {(icon) => <span class=\"inline-block size-4 shrink-0 text-fg-secondary\">{icon}</span>}\n          </Show>\n          <span class=\"truncate\">{props.name}</span>\n        </h2>\n        <button class=\"flex h-full place-items-center px-2\" onClick={() => toggleSettingsOpened()}>\n          <span class=\"inline-block size-4\">\n            <EllipsisVertical />\n          </span>\n        </button>\n      </div>\n      <Show when={isSettingsOpened()}>{props.settings()}</Show>\n    </div>\n  );\n};\n\nexport default BasicColumnHeader;\n","import { Switch, Match, type Component } from 'solid-js';\n\nimport uniq from 'lodash/uniq';\nimport { type Filter } from 'nostr-tools/filter';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport Timeline from '@/components/timeline/Timeline';\nimport { type TimelineContent } from '@/components/timeline/TimelineContext';\nimport useConfig from '@/core/useConfig';\nimport { textNote } from '@/nostr/event';\nimport TextNote from '@/nostr/event/TextNote';\nimport useSubscription from '@/nostr/useSubscription';\n\nconst relatedEvents = (event: TextNote) => {\n  const ids = [event.id];\n\n  const rootId = event.rootEvent()?.id;\n  if (rootId != null) ids.push(rootId);\n\n  const replyId = event.replyingToEvent()?.id;\n  if (replyId != null) ids.push(replyId);\n\n  return uniq(ids);\n};\n\nconst RepliesDisplay: Component<{ event: NostrEvent }> = (props) => {\n  const { config } = useConfig();\n\n  const event = () => textNote(props.event);\n\n  const { events } = useSubscription(() => ({\n    relayUrls: config().relayUrls,\n    filters: [\n      { kinds: [1], ids: relatedEvents(event()), limit: 25 },\n      { kinds: [1], '#e': [props.event.id], limit: 25 } as Filter,\n    ],\n    limit: 200,\n  }));\n\n  return <Timeline events={[...events()].reverse()} />;\n};\n\nconst TimelineContentDisplay: Component<{ timelineContent: TimelineContent }> = (props) => (\n  <Switch>\n    <Match when={props.timelineContent.type === 'Replies' && props.timelineContent} keyed>\n      {(replies) => <RepliesDisplay event={replies.event} />}\n    </Match>\n  </Switch>\n);\n\nexport default TimelineContentDisplay;\n","import { Show, type JSX, type Component } from 'solid-js';\n\nimport ArrowLeft from 'heroicons/24/outline/arrow-left.svg';\n\nimport TimelineContentDisplay from '@/components/timeline/TimelineContentDisplay';\nimport { TimelineContext, useTimelineState } from '@/components/timeline/TimelineContext';\nimport { ColumnWidth } from '@/core/column';\nimport { useHandleCommand } from '@/hooks/useCommandBus';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nexport type ColumnProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  width: ColumnWidth;\n  header: JSX.Element;\n  children: JSX.Element;\n};\n\nconst Column: Component<ColumnProps> = (props) => {\n  let columnDivRef: HTMLDivElement | undefined;\n\n  const timelineState = useTimelineState();\n  const i18n = useTranslation();\n\n  const width = () => props.width ?? 'medium';\n\n  useHandleCommand(() => ({\n    commandType: 'moveToColumn',\n    handler: (command) => {\n      if (command.command === 'moveToColumn' && command.columnIndex === props.columnIndex) {\n        columnDivRef?.scrollIntoView({ behavior: 'smooth', inline: 'center' });\n      }\n    },\n  }));\n\n  useHandleCommand(() => ({\n    commandType: 'moveToLastColumn',\n    handler: () => {\n      if (props.lastColumn) {\n        columnDivRef?.scrollIntoView({ behavior: 'smooth' });\n      }\n    },\n  }));\n\n  return (\n    <TimelineContext.Provider value={timelineState}>\n      <div\n        ref={columnDivRef}\n        class=\"flex w-[80vw] shrink-0 snap-center snap-always flex-col border-r border-border sm:snap-align-none\"\n        classList={{\n          'sm:w-[500px]': width() === 'widest',\n          'sm:w-[360px]': width() === 'wide',\n          'sm:w-[320px]': width() === 'medium',\n          'sm:w-[280px]': width() === 'narrow',\n        }}\n      >\n        <Show\n          when={timelineState.timelineState.content}\n          keyed\n          fallback={\n            <>\n              <div class=\"shrink-0 border-b border-border\">{props.header}</div>\n              <div class=\"scrollbar flex flex-col overflow-y-scroll pb-16\">{props.children}</div>\n            </>\n          }\n        >\n          {(timeline) => (\n            <>\n              <div class=\"flex shrink-0 items-center border-b border-border px-2\">\n                <button\n                  class=\"flex w-full items-center gap-1\"\n                  onClick={() => timelineState?.clearTimeline()}\n                >\n                  <div class=\"inline-block size-4\">\n                    <ArrowLeft />\n                  </div>\n                  <div>{i18n.t('column.back')}</div>\n                </button>\n              </div>\n              <div class=\"scrollbar flex max-h-full flex-col overflow-y-scroll scroll-smooth pb-16\">\n                <TimelineContentDisplay timelineContent={timeline} />\n              </div>\n            </>\n          )}\n        </Show>\n      </div>\n    </TimelineContext.Provider>\n  );\n};\n\nexport default Column;\n","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5 8.25 12l7.5-7.5\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0\"/></svg>","import { Component, JSX, For, Show } from 'solid-js';\n\nimport ChevronLeft from 'heroicons/24/outline/chevron-left.svg';\nimport ChevronRight from 'heroicons/24/outline/chevron-right.svg';\nimport Trash from 'heroicons/24/outline/trash.svg';\n\nimport { ColumnType } from '@/core/column';\nimport useConfig from '@/core/useConfig';\nimport { useRequestCommand } from '@/hooks/useCommandBus';\nimport { useTranslation } from '@/i18n/useTranslation';\n\nexport type RenderOtherSettingsProps<T> = {\n  column: T;\n  saveColumn: (column: T) => void;\n};\n\ntype ColumnSettingsProps<T extends ColumnType> = {\n  column: T;\n  columnIndex: number;\n  renderOtherSettings?: (props: RenderOtherSettingsProps<T>) => JSX.Element;\n};\n\ntype ColumnSettingsSectionProps = {\n  title: string;\n  children: JSX.Element;\n};\n\nexport const ColumnSettingsSection: Component<ColumnSettingsSectionProps> = (props) => (\n  <div class=\"flex flex-col gap-2 border-b border-border p-2\">\n    <div>{props.title}</div>\n    <div>{props.children}</div>\n  </div>\n);\n\nconst ColumnSettings = <T extends ColumnType>(props: ColumnSettingsProps<T>): JSX.Element => {\n  const i18n = useTranslation();\n  const { saveColumn, removeColumn, moveColumn } = useConfig();\n  const request = useRequestCommand();\n\n  const setColumnWidth = (width: ColumnType['width']) => {\n    saveColumn({ ...props.column, width });\n  };\n\n  const move = (index: number) => {\n    moveColumn(props.column.id, index);\n    request({ command: 'moveToColumn', columnIndex: index }).catch((err) => console.error(err));\n  };\n\n  return (\n    <div class=\"flex flex-col border-t border-border\">\n      <ColumnSettingsSection title={i18n.t('column.config.columnWidth')}>\n        <div class=\"scrollbar flex h-9 gap-2 overflow-x-auto\">\n          <For each={['widest', 'wide', 'medium', 'narrow'] as const}>\n            {(width) => (\n              <button\n                class=\"rounded-md border px-4 text-fg-secondary\"\n                classList={{\n                  'border-fg-secondary': props.column.width === width,\n                  'font-bold': props.column.width === width,\n                  'border-border': props.column.width !== width,\n                  'font-normal': props.column.width !== width,\n                }}\n                onClick={() => setColumnWidth(width)}\n              >\n                {i18n.t(`column.config.${width}`)}\n              </button>\n            )}\n          </For>\n        </div>\n      </ColumnSettingsSection>\n      <Show when={props.renderOtherSettings} keyed>\n        {(render) => render({ column: props.column, saveColumn })}\n      </Show>\n      <div class=\"flex h-10 items-center gap-2\">\n        <button\n          class=\"py-4 pl-2\"\n          title={i18n.t('column.config.moveLeft')}\n          onClick={() => move(props.columnIndex - 1)}\n        >\n          <span class=\"inline-block size-4\">\n            <ChevronLeft />\n          </span>\n        </button>\n        <button\n          class=\"py-4 pr-2\"\n          title={i18n.t('column.config.moveRight')}\n          onClick={() => move(props.columnIndex + 1)}\n        >\n          <span class=\"inline-block size-4\">\n            <ChevronRight />\n          </span>\n        </button>\n        <div class=\"flex-1\" />\n        <button\n          class=\"px-2 py-4 text-danger hover:text-rose-600\"\n          title={i18n.t('column.config.removeColumn')}\n          onClick={() => removeColumn(props.column.id)}\n        >\n          <span class=\"inline-block size-4\" aria-label={i18n.t('column.config.removeColumn')}>\n            <Trash />\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnSettings;\n","import { createEffect, createRoot, createSignal } from 'solid-js';\n\nimport usePubkey from '@/nostr/usePubkey';\n\ntype UseDecryptProps = {\n  encrypted: string;\n};\n\n// eslint-disable-next-line solid/reactivity\nconst [memo, setMemo] = createRoot(() => createSignal<Record<string, string>>({}));\n// eslint-disable-next-line solid/reactivity\nconst [decrypting, setDecrypting] = createRoot(() => createSignal<Record<string, boolean>>({}));\n\nconst useDecrypt = (propsProvider: () => UseDecryptProps | null) => {\n  const pubkey = usePubkey();\n  const [decrypted, setDecrypted] = createSignal<string | null>(null);\n\n  createEffect(() => {\n    const props = propsProvider();\n    if (props == null) return;\n\n    const { encrypted } = props;\n    if (encrypted in memo()) {\n      setDecrypted(memo()[encrypted]);\n      return;\n    }\n\n    const p = pubkey();\n    if (p == null) return;\n\n    if (decrypting()[encrypted]) {\n      return;\n    }\n\n    setDecrypting((current) => ({ ...current, [encrypted]: true }));\n\n    window.nostr?.nip04\n      ?.decrypt?.(p, encrypted)\n      ?.then((result) => {\n        setMemo((current) => ({ ...current, [encrypted]: result }));\n        setDecrypted(result);\n      })\n      .catch((err) => {\n        console.error(`failed to decrypt \"${encrypted}\"`, err);\n      });\n  });\n\n  return decrypted;\n};\n\nexport default useDecrypt;\n","import { For, type Component, createMemo } from 'solid-js';\n\nimport * as Kind from 'nostr-tools/kinds';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport ColumnItem from '@/components/ColumnItem';\nimport EventDisplayById from '@/components/event/EventDisplayById';\nimport { genericEvent } from '@/nostr/event';\nimport { parseTags } from '@/nostr/event/Tags';\nimport useDecrypt from '@/nostr/useDecrypt';\n\nexport type BookmarkProps = {\n  event: NostrEvent;\n};\n\nconst Bookmark: Component<BookmarkProps> = (props) => {\n  const bookmark = createMemo(() => genericEvent(props.event));\n\n  const decrypted = useDecrypt(() => {\n    const { content } = bookmark();\n    if (content == null || content.length === 0) return null;\n    return { id: bookmark().id, encrypted: content };\n  });\n\n  const bookmarkedEventIdsPrivate = () => {\n    const json = decrypted();\n    if (json == null) return [];\n    console.log(json);\n\n    try {\n      return parseTags(json).taggedEventIds();\n    } catch (err) {\n      console.warn(err);\n      return [];\n    }\n  };\n\n  const bookmarkedEventIds = () => bookmark().taggedEventIds();\n\n  return (\n    <For each={[...bookmarkedEventIds(), ...bookmarkedEventIdsPrivate()]}>\n      {(eventId) => (\n        <ColumnItem>\n          <EventDisplayById eventId={eventId} ensureKinds={[Kind.ShortTextNote]} />\n        </ColumnItem>\n      )}\n    </For>\n  );\n};\n\nexport default Bookmark;\n","import { createMemo } from 'solid-js';\n\nimport { createQuery, useQueryClient, type CreateQueryResult } from '@tanstack/solid-query';\nimport { Event as NostrEvent } from 'nostr-tools/pure';\n\nimport { pickLatestEvent } from '@/nostr/event/comparator';\nimport {\n  registerTask,\n  BatchedEventsTask,\n  ParameterizedReplaceableEventTask,\n} from '@/nostr/useBatchedEvents';\nimport timeout from '@/utils/timeout';\n\n// Parameterized Replaceable Event\nexport type UseParameterizedReplaceableEventProps = {\n  kind: number;\n  author: string;\n  identifier: string;\n};\n\nexport type UseParameterizedReplaceableEvent = {\n  event: () => NostrEvent | null;\n  query: CreateQueryResult<NostrEvent | null>;\n};\n\nconst useParameterizedReplaceableEvent = (\n  propsProvider: () => UseParameterizedReplaceableEventProps | null,\n): UseParameterizedReplaceableEvent => {\n  const queryClient = useQueryClient();\n  const props = createMemo(propsProvider);\n  const genQueryKey = () => ['useFollowings', props()] as const;\n\n  const query = createQuery(() => ({\n    queryKey: genQueryKey(),\n    queryFn: ({ queryKey, signal }) => {\n      console.debug('useFollowings');\n      const [, currentProps] = queryKey;\n      if (currentProps == null) return Promise.resolve(null);\n\n      const { kind, author, identifier } = currentProps;\n      const task = new BatchedEventsTask<ParameterizedReplaceableEventTask>({\n        type: 'ParameterizedReplaceableEvent',\n        kind,\n        author,\n        identifier,\n      });\n      const promise = task.firstEventPromise().catch(() => {\n        throw new Error(\n          `parameterized replaceable event not found: ${kind}:${author}:${identifier}`,\n        );\n      });\n      task.onUpdate((events) => {\n        const latest = pickLatestEvent(events);\n        queryClient.setQueryData(queryKey, latest);\n      });\n      registerTask({ task, signal });\n      return timeout(\n        15000,\n        `useParameterizedReplaceableEvent: ${kind}:${author}:${identifier}`,\n      )(promise);\n    },\n    staleTime: 5 * 60 * 1000, // 5 min\n    gcTime: 4 * 60 * 60 * 1000, // 4 hour\n  }));\n\n  const event = () => query.data ?? null;\n\n  return { event, query };\n};\n\nexport default useParameterizedReplaceableEvent;\n","import { Component, Show } from 'solid-js';\n\nimport BookmarkIcon from 'heroicons/24/outline/bookmark.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport Bookmark from '@/components/timeline/Bookmark';\nimport { BookmarkColumnType } from '@/core/column';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useParameterizedReplaceableEvent from '@/nostr/useParameterizedReplaceableEvent';\n\ntype BookmarkColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: BookmarkColumnType;\n};\n\nconst BookmarkColumn: Component<BookmarkColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { removeColumn } = useConfig();\n\n  const { event } = useParameterizedReplaceableEvent(() => ({\n    kind: 30001,\n    author: props.column.pubkey,\n    identifier: props.column.identifier,\n  }));\n\n  // TODO 暗号化されたデータがある場合は復号する\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.bookmark')}\n          icon={<BookmarkIcon />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <Show when={event()} keyed>\n        {(ev) => <Bookmark event={ev} />}\n      </Show>\n    </Column>\n  );\n};\n\nexport default BookmarkColumn;\n","import { Component, createEffect, onCleanup, onMount } from 'solid-js';\n\nimport Home from 'heroicons/24/outline/home.svg';\nimport uniq from 'lodash/uniq';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { FollowingColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useFollowings from '@/nostr/useFollowings';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype FollowingColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: FollowingColumnType;\n};\n\nconst FollowingColumn: Component<FollowingColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const { followingPubkeys } = useFollowings(() => ({ pubkey: props.column.pubkey }));\n\n  const loadMore = useLoadMore(() => ({\n    duration: 4 * 60 * 60,\n  }));\n\n  const { events, eose } = useSubscription(() => {\n    const authors = uniq([...followingPubkeys()]);\n    if (authors.length === 0) return null;\n    return {\n      debugId: 'following',\n      relayUrls: config().relayUrls,\n      filters: [\n        {\n          kinds: [1, 6],\n          authors,\n          limit: 20,\n          since: loadMore.since(),\n          until: loadMore.until(),\n        },\n      ],\n      eoseLimit: 20,\n      continuous: loadMore.continuous(),\n      onEOSE: () => {\n        console.log('home: eose');\n      },\n      clientEventFilter: (event) => {\n        if (props.column.contentFilter == null) return true;\n        return applyContentFilter(props.column.contentFilter)(event.content);\n      },\n    };\n  });\n\n  createEffect(() => {\n    console.log('home', events());\n    loadMore.setEvents(events());\n  });\n\n  onMount(() => console.log('home timeline mounted'));\n  onCleanup(() => console.log('home timeline unmounted'));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.home')}\n          icon={<Home />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default FollowingColumn;\n","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.5 12a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0m0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 1 0-2.636 6.364M16.5 12V8.25\"/></svg>","export default (props = {}) => <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\" viewBox=\"0 0 24 24\"{...props}><path fill-rule=\"evenodd\" d=\"M14.615 1.595a.75.75 0 0 1 .359.852L12.982 9.75h7.268a.75.75 0 0 1 .548 1.262l-10.5 11.25a.75.75 0 0 1-1.272-.71l1.992-7.302H3.75a.75.75 0 0 1-.548-1.262l10.5-11.25a.75.75 0 0 1 .913-.143\" clip-rule=\"evenodd\"/></svg>","import { type Component, Show } from 'solid-js';\n\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport EventDisplay from '@/components/event/EventDisplay';\nimport ReactionEmojiDisplay, { reactionTypesToEmojiTypes } from '@/components/ReactionEmojiDisplay';\nimport useEmojiPopup from '@/components/useEmojiPopup';\nimport UserDisplayName from '@/components/UserDisplayName';\nimport useConfig from '@/core/useConfig';\nimport useFormatDate from '@/hooks/useFormatDate';\nimport useModalState from '@/hooks/useModalState';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport { reaction } from '@/nostr/event';\nimport useEvent from '@/nostr/useEvent';\nimport useProfile from '@/nostr/useProfile';\nimport ensureNonNull from '@/utils/ensureNonNull';\nimport { thumbnailUrl } from '@/utils/url';\n\ntype ReactionDisplayProps = {\n  event: NostrEvent;\n};\n\nconst ReactionDisplay: Component<ReactionDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const formatDate = useFormatDate();\n  const { shouldMuteEvent } = useConfig();\n  const { showProfile } = useModalState();\n  const event = () => reaction(props.event);\n  const eventId = () => event().lastTaggedEventId();\n\n  const { profile } = useProfile(() => ({\n    pubkey: props.event.pubkey,\n  }));\n\n  const { event: reactedEvent, query: reactedEventQuery } = useEvent(() =>\n    ensureNonNull([eventId()] as const)(([eventIdNonNull]) => ({\n      eventId: eventIdNonNull,\n    })),\n  );\n\n  const isRemoved = () => reactedEventQuery.isSuccess && reactedEvent() == null;\n\n  const reactionTypes = () => event().toReactionTypes();\n  const emojiTypes = () => reactionTypesToEmojiTypes(reactionTypes());\n\n  const emojiPopup = useEmojiPopup(() =>\n    ensureNonNull([emojiTypes()] as const)(([emoji]) => ({\n      emoji,\n    })),\n  );\n\n  return (\n    // if the reacted event is not found, it should be a removed event\n    <Show when={!isRemoved() && !shouldMuteEvent(props.event)}>\n      <div class=\"flex items-center gap-1 pl-[2px] text-sm\">\n        <span\n          ref={emojiPopup.emojiRef}\n          class=\"webkit-touch-callout-none notification-icon flex h-4 min-w-4 max-w-[64px] shrink-0 select-none place-items-center overflow-hidden\"\n        >\n          <ReactionEmojiDisplay reactionTypes={reactionTypes()} />\n        </span>\n        {emojiPopup.popup()}\n        <div class=\"notification-user flex flex-1 gap-1 overflow-hidden\">\n          <div class=\"author-icon size-5 shrink-0 overflow-hidden rounded\">\n            <Show when={profile()?.picture} keyed>\n              {(url) => (\n                <img\n                  src={thumbnailUrl(url, 'icon')}\n                  alt=\"icon\"\n                  // TODO autofit\n                  class=\"size-full object-cover\"\n                />\n              )}\n            </Show>\n          </div>\n          <div class=\"flex min-w-0 flex-1 overflow-hidden\">\n            <button\n              class=\"select-text truncate font-bold hover:text-link hover:underline\"\n              onClick={() => showProfile(props.event.pubkey)}\n            >\n              <UserDisplayName pubkey={props.event.pubkey} />\n            </button>\n            <span class=\"shrink-0 whitespace-pre\">{i18n.t('notification.reacted')}</span>\n          </div>\n        </div>\n        <div class=\"text-xs\">{formatDate(event().createdAtAsDate())}</div>\n      </div>\n      <div class=\"notification-event py-1\">\n        <Show\n          when={reactedEvent()}\n          fallback={\n            <div class=\"truncate\">\n              {i18n.t('general.loading')} {eventId()}\n            </div>\n          }\n          keyed\n        >\n          {(ev) => <EventDisplay event={ev} />}\n        </Show>\n      </div>\n    </Show>\n  );\n};\n\nexport default ReactionDisplay;\n","import { For, Switch, Match, lazy, type Component, Show } from 'solid-js';\n\nimport * as Kind from 'nostr-tools/kinds';\nimport { type Event as NostrEvent } from 'nostr-tools/pure';\n\nimport ColumnItem from '@/components/ColumnItem';\nimport Reaction from '@/components/event/Reaction';\nimport Repost from '@/components/event/Repost';\nimport TextNote from '@/components/event/TextNote';\nimport useConfig from '@/core/useConfig';\n\nconst ZapReceipt = lazy(() => import('@/components/event/ZapReceipt'));\n\nexport type NotificationProps = {\n  events: NostrEvent[];\n};\n\nconst Notification: Component<NotificationProps> = (props) => {\n  const { shouldMuteEvent } = useConfig();\n\n  return (\n    <For each={props.events}>\n      {(event) => (\n        <Show when={!shouldMuteEvent(event)}>\n          <Switch fallback={<div>unknown event</div>}>\n            <Match when={event.kind === Kind.ShortTextNote}>\n              <ColumnItem>\n                <TextNote event={event} />\n              </ColumnItem>\n            </Match>\n            <Match when={event.kind === Kind.Reaction}>\n              <ColumnItem>\n                <Reaction event={event} />\n              </ColumnItem>\n            </Match>\n            {/* TODO ちゃんとnotification用のコンポーネント使う */}\n            <Match when={event.kind === Kind.Repost}>\n              <ColumnItem>\n                <Repost event={event} />\n              </ColumnItem>\n            </Match>\n            <Match when={event.kind === Kind.Zap}>\n              <ColumnItem>\n                <ZapReceipt event={event} />\n              </ColumnItem>\n            </Match>\n          </Switch>\n        </Show>\n      )}\n    </For>\n  );\n};\n\nexport default Notification;\n","import { type JSX, createEffect, Component, For } from 'solid-js';\n\nimport ArrowPathRoundedSquare from 'heroicons/24/outline/arrow-path-rounded-square.svg';\nimport AtSymbol from 'heroicons/24/outline/at-symbol.svg';\nimport Bell from 'heroicons/24/outline/bell.svg';\nimport Bolt from 'heroicons/24/solid/bolt.svg';\nimport HeartSolid from 'heroicons/24/solid/heart.svg';\nimport uniq from 'lodash/uniq';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column from '@/components/column/Column';\nimport ColumnSettings, {\n  ColumnSettingsSection,\n  RenderOtherSettingsProps,\n} from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Notification from '@/components/timeline/Notification';\nimport {\n  type NotificationColumnType,\n  type NotificationType,\n  NotificationTypes,\n} from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype NotificationColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: NotificationColumnType;\n};\n\ntype NotificationFilterOptionsEntry = {\n  notificationType: NotificationType;\n  title: string;\n  icon: JSX.Element;\n};\n\nconst NotificationTypeKindsMap: Record<NotificationType, number[]> = {\n  Replies: [1],\n  Repost: [6],\n  Reaction: [7],\n  Zap: [9735],\n};\n\nconst NotificationSettingsSection = (props: RenderOtherSettingsProps<NotificationColumnType>) => {\n  const i18n = useTranslation();\n\n  const notificationFilterOptions: NotificationFilterOptionsEntry[] = [\n    {\n      notificationType: 'Replies',\n      title: i18n.t('column.notificationSettings.types.replies'),\n      icon: <AtSymbol />,\n    },\n    {\n      notificationType: 'Repost',\n      title: i18n.t('column.notificationSettings.types.reposts'),\n      icon: <ArrowPathRoundedSquare />,\n    },\n    {\n      notificationType: 'Reaction',\n      title: i18n.t('column.notificationSettings.types.reactions'),\n      icon: <HeartSolid />,\n    },\n    {\n      notificationType: 'Zap',\n      title: i18n.t('column.notificationSettings.types.zap'),\n      icon: <Bolt />,\n    },\n  ] as const;\n\n  const currentNotificationTypes = (): NotificationType[] =>\n    props.column.notificationTypes ?? [...NotificationTypes];\n\n  const isNotificationTypeSelected = (notificationType: NotificationType) =>\n    currentNotificationTypes().includes(notificationType);\n\n  const toggleColumnType = (notificationType: NotificationType) => {\n    const notificationTypes = [...currentNotificationTypes()];\n    if (isNotificationTypeSelected(notificationType)) {\n      notificationTypes.splice(notificationTypes.indexOf(notificationType), 1);\n    } else {\n      notificationTypes.push(notificationType);\n    }\n\n    props.saveColumn({\n      ...props.column,\n      notificationTypes,\n    });\n  };\n\n  return (\n    <>\n      <ColumnSettingsSection title={i18n.t('column.notificationSettings.notificationTypes')}>\n        <div class=\"flex gap-1\">\n          <For each={notificationFilterOptions}>\n            {({ notificationType, title, icon }) => (\n              <button\n                type=\"button\"\n                class=\"flex flex-1 flex-col items-center rounded-md border py-1 text-fg-secondary\"\n                title={title}\n                classList={{\n                  'border-fg-secondary': isNotificationTypeSelected(notificationType),\n                  'font-bold': isNotificationTypeSelected(notificationType),\n                  'border-border': !isNotificationTypeSelected(notificationType),\n                  'font-normal': !isNotificationTypeSelected(notificationType),\n                }}\n                onClick={() => toggleColumnType(notificationType)}\n              >\n                <span class=\"inline-block size-4\">{icon}</span>\n                <span class=\"text-xs\">{title}</span>\n              </button>\n            )}\n          </For>\n        </div>\n      </ColumnSettingsSection>\n    </>\n  );\n};\n\nconst NotificationColumn: Component<NotificationColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const loadMore = useLoadMore(() => ({ duration: null }));\n\n  const notificationTypes = () => props.column.notificationTypes ?? [...NotificationTypes];\n  const kinds = () => uniq(notificationTypes().flatMap((type) => NotificationTypeKindsMap[type]));\n\n  const { events: notifications, eose } = useSubscription(() =>\n    kinds().length > 0\n      ? {\n          relayUrls: config().relayUrls,\n          filters: [\n            {\n              kinds: kinds(),\n              '#p': [props.column.pubkey],\n              limit: 20,\n              since: loadMore.since(),\n              until: loadMore.until(),\n            },\n          ],\n          eoseLimit: 20,\n          clientEventFilter: (event) => {\n            if (props.column.contentFilter == null) return true;\n            return applyContentFilter(props.column.contentFilter)(event.content);\n          },\n        }\n      : null,\n  );\n\n  createEffect(() => loadMore.setEvents(notifications()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.notification')}\n          icon={<Bell />}\n          settings={() => (\n            <ColumnSettings\n              column={props.column}\n              columnIndex={props.columnIndex}\n              renderOtherSettings={NotificationSettingsSection}\n            />\n          )}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Notification events={notifications()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default NotificationColumn;\n","import { createEffect, Component } from 'solid-js';\n\nimport User from 'heroicons/24/outline/user.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { PostsColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype PostsColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: PostsColumnType;\n};\n\nconst PostsColumn: Component<PostsColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const loadMore = useLoadMore(() => ({ duration: null }));\n\n  const { events, eose } = useSubscription(() => ({\n    relayUrls: config().relayUrls,\n    filters: [\n      {\n        kinds: [1, 6],\n        authors: [props.column.pubkey],\n        limit: 10,\n        since: loadMore.since(),\n        until: loadMore.until(),\n      },\n    ],\n    eoseLimit: 10,\n    clientEventFilter: (event) => {\n      if (props.column.contentFilter == null) return true;\n      return applyContentFilter(props.column.contentFilter)(event.content);\n    },\n  }));\n\n  createEffect(() => loadMore.setEvents(events()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.posts')}\n          icon={<User />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default PostsColumn;\n","import { createEffect, Component } from 'solid-js';\n\nimport Heart from 'heroicons/24/outline/heart.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Notification from '@/components/timeline/Notification';\nimport { ReactionsColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype ReactionsColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: ReactionsColumnType;\n};\n\nconst ReactionsColumn: Component<ReactionsColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { config, removeColumn } = useConfig();\n\n  const loadMore = useLoadMore(() => ({ duration: null }));\n\n  const { events: reactions, eose } = useSubscription(() => ({\n    relayUrls: config().relayUrls,\n    filters: [\n      {\n        kinds: [7],\n        authors: [props.column.pubkey],\n        limit: 10,\n        since: loadMore.since(),\n        until: loadMore.until(),\n      },\n    ],\n    eoseLimit: 10,\n    clientEventFilter: (event) => {\n      if (props.column.contentFilter == null) return true;\n      return applyContentFilter(props.column.contentFilter)(event.content);\n    },\n  }));\n\n  createEffect(() => loadMore.setEvents(reactions()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.reactions')}\n          icon={<Heart />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Notification events={reactions()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default ReactionsColumn;\n","import { createEffect, Component } from 'solid-js';\n\nimport GlobeAlt from 'heroicons/24/outline/globe-alt.svg';\n\nimport BasicColumnHeader from '@/components/column/BasicColumnHeader';\nimport Column from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { RelaysColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport useConfig from '@/core/useConfig';\nimport { useTranslation } from '@/i18n/useTranslation';\nimport useSubscription from '@/nostr/useSubscription';\n\ntype RelaysColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: RelaysColumnType;\n};\n\nconst RelaysColumn: Component<RelaysColumnDisplayProps> = (props) => {\n  const i18n = useTranslation();\n  const { removeColumn } = useConfig();\n\n  const loadMore = useLoadMore(() => ({\n    duration: 4 * 60 * 60,\n  }));\n\n  const { events, eose } = useSubscription(() => ({\n    relayUrls: props.column.relayUrls,\n    filters: [\n      {\n        kinds: [1],\n        limit: 20,\n        since: loadMore.since(),\n        until: loadMore.until(),\n      },\n    ],\n    eoseLimit: 20,\n    clientEventFilter: (event) => {\n      if (props.column.contentFilter == null) return true;\n      return applyContentFilter(props.column.contentFilter)(event.content);\n    },\n  }));\n\n  createEffect(() => loadMore.setEvents(events()));\n\n  return (\n    <Column\n      header={\n        <BasicColumnHeader\n          name={props.column.name ?? i18n.t('column.relay')}\n          icon={<GlobeAlt />}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default RelaysColumn;\n","import { Component, createEffect, createSignal, Show, JSX, onMount } from 'solid-js';\n\nimport EllipsisVertical from 'heroicons/24/outline/ellipsis-vertical.svg';\nimport MagnifyingGlass from 'heroicons/24/outline/magnifying-glass.svg';\n\nimport Column from '@/components/column/Column';\nimport ColumnSettings from '@/components/column/ColumnSettings';\nimport LoadMore, { useLoadMore } from '@/components/column/LoadMore';\nimport Timeline from '@/components/timeline/Timeline';\nimport { SearchColumnType } from '@/core/column';\nimport { applyContentFilter } from '@/core/contentFilter';\nimport { relaysForSearching } from '@/core/relayUrls';\nimport useConfig from '@/core/useConfig';\nimport useSubscription from '@/nostr/useSubscription';\n\nexport type SearchColumnHeaderProps = {\n  column: SearchColumnType;\n  settings: () => JSX.Element;\n  onClose?: () => void;\n};\n\nconst SearchColumnHeader: Component<SearchColumnHeaderProps> = (props) => {\n  const [isSettingsOpened, setIsSettingOpened] = createSignal(false);\n  const [query, setQuery] = createSignal('');\n\n  const { saveColumn } = useConfig();\n\n  const toggleSettingsOpened = () => setIsSettingOpened((current) => !current);\n\n  const updateQuery = () => {\n    if (query() === props.column.query) return;\n    saveColumn({ ...props.column, query: query() });\n  };\n\n  const handleBlur: JSX.EventHandler<HTMLInputElement, Event> = () => {\n    updateQuery();\n  };\n\n  const handleChange: JSX.EventHandler<HTMLInputElement, Event> = (ev) => {\n    setQuery(ev.currentTarget.value);\n  };\n\n  const handleSubmit: JSX.EventHandler<HTMLFormElement, SubmitEvent> = (ev) => {\n    ev.preventDefault();\n    updateQuery();\n  };\n\n  onMount(() => {\n    setQuery(props.column.query);\n  });\n\n  return (\n    <div class=\"flex flex-col\">\n      <div class=\"flex h-8 items-center gap-1 px-2\">\n        <h2 class=\"flex items-center gap-1\">\n          <span class=\"inline-block size-4 text-fg-secondary\">\n            <MagnifyingGlass />\n          </span>\n        </h2>\n        <form class=\"flex-1\" onSubmit={handleSubmit}>\n          <input\n            class=\"w-full rounded border border-border bg-bg px-1 py-0 ring-border focus:border-border focus:ring-primary\"\n            type=\"text\"\n            name=\"query\"\n            value={query()}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n        </form>\n        <button class=\"size-4\" onClick={() => toggleSettingsOpened()}>\n          <EllipsisVertical />\n        </button>\n      </div>\n      <Show when={isSettingsOpened()}>{props.settings()}</Show>\n    </div>\n  );\n};\n\nexport type SearchColumnDisplayProps = {\n  columnIndex: number;\n  lastColumn: boolean;\n  column: SearchColumnType;\n};\n\nconst SearchColumn: Component<SearchColumnDisplayProps> = (props) => {\n  const { removeColumn } = useConfig();\n\n  const loadMore = useLoadMore(() => ({\n    duration: null,\n  }));\n\n  const { events, eose } = useSubscription(() => {\n    const { query } = props.column;\n\n    if (query.length === 0) return null;\n\n    return {\n      relayUrls: relaysForSearching,\n      filters: [\n        {\n          kinds: [1],\n          search: query,\n          limit: 20,\n          since: loadMore.since(),\n          until: loadMore.until(),\n        },\n      ],\n      eoseLimit: 20,\n      clientEventFilter: (event) => {\n        if (event.tags.findIndex(([tagName]) => tagName === 'mostr' || tagName === 'proxy') >= 0)\n          return false;\n        if (props.column.contentFilter == null) return true;\n        return applyContentFilter(props.column.contentFilter)(event.content);\n      },\n    };\n  });\n\n  createEffect(() => {\n    loadMore.setEvents(events());\n  });\n\n  return (\n    <Column\n      header={\n        <SearchColumnHeader\n          column={props.column}\n          settings={() => <ColumnSettings column={props.column} columnIndex={props.columnIndex} />}\n          onClose={() => removeColumn(props.column.id)}\n        />\n      }\n      width={props.column.width}\n      columnIndex={props.columnIndex}\n      lastColumn={props.lastColumn}\n    >\n      <LoadMore loadMore={loadMore} eose={eose()}>\n        <Timeline events={events()} />\n      </LoadMore>\n    </Column>\n  );\n};\n\nexport default SearchColumn;\n","import { For, Switch, Match } from 'solid-js';\n\nimport BookmarkColumn from '@/components/column/BookmarkColumn';\nimport FollowingColumn from '@/components/column/FollowingColumn';\nimport NotificationColumn from '@/components/column/NotificationColumn';\nimport PostsColumn from '@/components/column/PostsColumn';\nimport ReactionsColumn from '@/components/column/ReactionsColumn';\nimport RelaysColumn from '@/components/column/RelaysColumn';\nimport SearchColumn from '@/components/column/SearchColumn';\nimport useConfig from '@/core/useConfig';\n\nconst Columns = () => {\n  const { config } = useConfig();\n\n  return (\n    <div class=\"scrollbar flex h-full snap-x snap-mandatory flex-row overflow-x-scroll scroll-smooth\">\n      <For each={config().columns}>\n        {(column, index) => {\n          const columnIndex = () => index() + 1;\n          const lastColumn = () => columnIndex() === config().columns.length;\n          return (\n            <Switch>\n              <Match when={column.columnType === 'Following' && column} keyed>\n                {(followingColumn) => (\n                  <FollowingColumn\n                    column={followingColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Notification' && column} keyed>\n                {(notificationColumn) => (\n                  <NotificationColumn\n                    column={notificationColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Posts' && column} keyed>\n                {(postsColumn) => (\n                  <PostsColumn\n                    column={postsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Reactions' && column} keyed>\n                {(reactionsColumn) => (\n                  <ReactionsColumn\n                    column={reactionsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Relays' && column} keyed>\n                {(reactionsColumn) => (\n                  <RelaysColumn\n                    column={reactionsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Bookmark' && column} keyed>\n                {(bookmarkColumn) => (\n                  <BookmarkColumn\n                    column={bookmarkColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n              <Match when={column.columnType === 'Search' && column} keyed>\n                {(reactionsColumn) => (\n                  <SearchColumn\n                    column={reactionsColumn}\n                    columnIndex={columnIndex()}\n                    lastColumn={lastColumn()}\n                  />\n                )}\n              </Match>\n            </Switch>\n          );\n        }}\n      </For>\n    </div>\n  );\n};\n\nexport default Columns;\n","import { onMount, onCleanup } from 'solid-js';\n\nimport throttle from 'lodash/throttle';\n\nimport { useRequestCommand, type Command } from '@/hooks/useCommandBus';\n\ntype Shortcut = { key: string; command: Command };\n\nconst defaultShortcut: Shortcut[] = [\n  { key: 'n', command: { command: 'openPostForm' } },\n  { key: 'h', command: { command: 'moveToPrevColumn' } },\n  { key: 'j', command: { command: 'moveToNextItem' } },\n  { key: 'k', command: { command: 'moveToPrevItem' } },\n  { key: 'l', command: { command: 'moveToNextColumn' } },\n  { key: '1', command: { command: 'moveToColumn', columnIndex: 1 } },\n  { key: '2', command: { command: 'moveToColumn', columnIndex: 2 } },\n  { key: '3', command: { command: 'moveToColumn', columnIndex: 3 } },\n  { key: '4', command: { command: 'moveToColumn', columnIndex: 4 } },\n  { key: '5', command: { command: 'moveToColumn', columnIndex: 5 } },\n  { key: '6', command: { command: 'moveToColumn', columnIndex: 6 } },\n  { key: '7', command: { command: 'moveToColumn', columnIndex: 7 } },\n  { key: '8', command: { command: 'moveToColumn', columnIndex: 8 } },\n  { key: '9', command: { command: 'moveToColumn', columnIndex: 9 } },\n  { key: '0', command: { command: 'moveToLastColumn' } },\n  { key: 'ArrowLeft', command: { command: 'moveToPrevColumn' } },\n  { key: 'ArrowDown', command: { command: 'moveToNextItem' } },\n  { key: 'ArrowUp', command: { command: 'moveToPrevItem' } },\n  { key: 'ArrowRight', command: { command: 'moveToNextColumn' } },\n  { key: 'f', command: { command: 'like' } },\n  { key: 't', command: { command: 'repost' } },\n  { key: 'r', command: { command: 'openReplyForm' } },\n  { key: '?', command: { command: 'openHelp' } },\n  { key: 'Enter', command: { command: 'openItemDetail' } },\n  { key: 'Backspace', command: { command: 'closeItemDetail' } },\n];\n\ntype UseShortcutKeysProps = {\n  shortcuts?: Shortcut[];\n  onShortcut: (shortcut: Shortcut) => void;\n};\n\nconst createShortcutsMap = (shortcuts: Shortcut[]) => {\n  const map = new Map<string, Shortcut>();\n  shortcuts.forEach((shortcut) => {\n    map.set(shortcut.key, shortcut);\n  });\n  return map;\n};\n\nconst useShortcutKeys = ({ shortcuts = defaultShortcut, onShortcut }: UseShortcutKeysProps) => {\n  const shortcutsMap = createShortcutsMap(shortcuts);\n\n  onMount(() => {\n    const handleKeydown = throttle((ev: KeyboardEvent) => {\n      if (ev.type !== 'keydown') return;\n      if (ev.ctrlKey || ev.altKey || ev.metaKey) return;\n      if (ev.target instanceof HTMLTextAreaElement || ev.target instanceof HTMLInputElement) return;\n\n      const shortcut = shortcutsMap.get(ev.key);\n\n      if (shortcut == null) return;\n\n      onShortcut(shortcut);\n    }, 50);\n\n    window.addEventListener('keydown', handleKeydown);\n\n    onCleanup(() => {\n      window.removeEventListener('keydown', handleKeydown);\n    });\n  });\n};\n\nexport const useMountShortcutKeys = () => {\n  const request = useRequestCommand();\n\n  useShortcutKeys({\n    onShortcut: (shortcut) => {\n      request(shortcut.command).then(\n        () => console.debug(`shortcut key '${shortcut.key}' was processed successfully`),\n        (err) => console.error(err),\n      );\n    },\n  });\n};\n\nexport default useShortcutKeys;\n","import { createEffect, type Component, onError } from 'solid-js';\n\nimport Columns from '@/components/column/Columns';\nimport GlobalModal from '@/components/modal/GlobalModal';\nimport SideBar from '@/components/SideBar';\nimport useConfig from '@/core/useConfig';\nimport { useMountShortcutKeys } from '@/hooks/useShortcutKeys';\nimport usePool from '@/nostr/usePool';\nimport usePubkey from '@/nostr/usePubkey';\n\nconst Home: Component = () => {\n  useMountShortcutKeys();\n\n  const pool = usePool();\n  const { config, initializeColumns } = useConfig();\n  const pubkey = usePubkey();\n\n  createEffect(() => {\n    Promise.allSettled(\n      config().relayUrls.map(async (relayUrl) => {\n        try {\n          const relay = await pool().ensureRelay(relayUrl);\n          relay.onnotice = (msg: string) => {\n            console.error(`NOTICE: ${relayUrl}: ${msg}`);\n          };\n          relay.onclose = () => {\n            console.warn(`CLOSE: ${relayUrl}`);\n          };\n        } catch (err) {\n          console.error('ensureRelay failed', err);\n        }\n      }),\n    ).catch(() => {\n      /* nothing to do */\n    });\n  });\n\n  createEffect(() => {\n    // pubkeyが得られてはじめてカラムを初期化できる\n    const p = pubkey();\n    if (p != null) {\n      initializeColumns({ pubkey: p });\n    }\n  });\n\n  onError((err) => {\n    console.error('uncaught error: ', err);\n  });\n\n  return (\n    <div class=\"absolute inset-0 flex h-dvh w-screen touch-manipulation flex-row overflow-hidden\">\n      <SideBar />\n      <Columns />\n      <GlobalModal />\n    </div>\n  );\n};\n\nexport default Home;\n"],"file":"assets/Home-BImcmmnx.js"}